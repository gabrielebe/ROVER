

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Fri Jan 23 00:50:37 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     _ANCON0	set	3912
    31  0000                     _ANCON1	set	3913
    32  0000                     _LATCbits	set	3979
    33  0000                     _LATDbits	set	3980
    34  0000                     _PIR1bits	set	3998
    35  0000                     _SSPADD	set	4040
    36  0000                     _SSPBUF	set	4041
    37  0000                     _SSPCON1	set	4038
    38  0000                     _SSPCON1bits	set	4038
    39  0000                     _SSPCON2	set	4037
    40  0000                     _SSPCON2bits	set	4037
    41  0000                     _SSPSTATbits	set	4039
    42  0000                     _TRISBbits	set	3987
    43  0000                     _TRISCbits	set	3988
    44  0000                     _TRISDbits	set	3989
    45                           
    46                           	psect	smallconst
    47  000F00                     __psmallconst:
    48                           	opt stack 0
    49  000F00  00                 	db	0
    50  000F01                     __stringdata:
    51                           	opt stack 0
    52  000F01                     STR_1:
    53  000F01  4A                 	db	74	;'J'
    54  000F02  6F                 	db	111	;'o'
    55  000F03  68                 	db	104	;'h'
    56  000F04  6E                 	db	110	;'n'
    57  000F05  6E                 	db	110	;'n'
    58  000F06  79                 	db	121	;'y'
    59  000F07  20                 	db	32
    60  000F08  56                 	db	86	;'V'
    61  000F09  30                 	db	48	;'0'
    62  000F0A  2E                 	db	46
    63  000F0B  30                 	db	48	;'0'
    64  000F0C  30                 	db	48	;'0'
    65  000F0D  30                 	db	48	;'0'
    66  000F0E  30                 	db	48	;'0'
    67  000F0F  30                 	db	48	;'0'
    68  000F10  31                 	db	49	;'1'
    69  000F11  00                 	db	0
    70  000F12                     STR_2:
    71  000F12  53                 	db	83	;'S'
    72  000F13  69                 	db	105	;'i'
    73  000F14  6E                 	db	110	;'n'
    74  000F15  67                 	db	103	;'g'
    75  000F16  68                 	db	104	;'h'
    76  000F17  20                 	db	32
    77  000F18  42                 	db	66	;'B'
    78  000F19  65                 	db	101	;'e'
    79  000F1A  00                 	db	0
    80  000F1B                     __end_of__stringdata:
    81                           	opt stack 0
    82                           
    83                           ; #config settings
    84  000F1B  00                 	db	0	; dummy byte at the end
    85  0000                     
    86                           	psect	cinit
    87  0013DE                     __pcinit:
    88                           	opt stack 0
    89  0013DE                     start_initialization:
    90                           	opt stack 0
    91  0013DE                     __initialization:
    92                           	opt stack 0
    93  0013DE                     end_of_initialization:
    94                           	opt stack 0
    95  0013DE                     __end_of__initialization:
    96                           	opt stack 0
    97  0013DE  0100               	movlb	0
    98  0013E0  EF79  F008         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMRAM
   101  000001                     __pcstackCOMRAM:
   102                           	opt stack 0
   103  000001                     ??_i2c_idle:
   104  000001                     writeDigit@n:
   105                           	opt stack 0
   106  000001                     i2c_master_ack@ack_type:
   107                           	opt stack 0
   108                           
   109                           ; 1 bytes @ 0x0
   110  000001                     	ds	1
   111  000002                     writeByte@n:
   112                           	opt stack 0
   113  000002                     i2c_start@stype:
   114                           	opt stack 0
   115  000002                     i2c_write@data:
   116                           	opt stack 0
   117                           
   118                           ; 1 bytes @ 0x1
   119  000002                     	ds	1
   120  000003                     ??_lcdWriteCmd:
   121  000003                     lcdWriteChar@n:
   122                           	opt stack 0
   123  000003                     sendByte@address:
   124                           	opt stack 0
   125  000003                     readByte@address:
   126                           	opt stack 0
   127                           
   128                           ; 1 bytes @ 0x2
   129  000003                     	ds	1
   130  000004                     sendByte@data:
   131                           	opt stack 0
   132  000004                     readByte@data:
   133                           	opt stack 0
   134  000004                     lcdWriteCmd@i:
   135                           	opt stack 0
   136  000004                     lcdWriteStrC@s:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x3
   140  000004                     	ds	2
   141  000006                     lcdWriteCmd@n:
   142                           	opt stack 0
   143                           
   144                           ; 1 bytes @ 0x5
   145  000006                     	ds	1
   146  000007                     lcdSetPos@y:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0x6
   150  000007                     	ds	1
   151  000008                     lcdSetPos@p:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0x7
   155  000008                     	ds	1
   156  000009                     lcdSetPos@x:
   157                           	opt stack 0
   158                           
   159                           ; 1 bytes @ 0x8
   160  000009                     	ds	1
   161  00000A                     ??_lcdClean:
   162                           
   163                           ; 0 bytes @ 0x9
   164  00000A                     	ds	1
   165  00000B                     lcdClean@i:
   166                           	opt stack 0
   167                           
   168                           ; 2 bytes @ 0xA
   169  00000B                     	ds	2
   170  00000D                     ??_intro:
   171                           
   172                           ; 0 bytes @ 0xC
   173  00000D                     	ds	1
   174  00000E                     intro@i:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0xD
   178  00000E                     	ds	2
   179  000010                     ??_lcdInit:
   180                           
   181                           ; 0 bytes @ 0xF
   182  000010                     	ds	1
   183  000011                     lcdInit@i:
   184                           	opt stack 0
   185                           
   186                           ; 2 bytes @ 0x10
   187  000011                     	ds	2
   188  000013                     lcdInit@i_294:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x12
   192  000013                     	ds	2
   193  000015                     lcdInit@i_295:
   194                           	opt stack 0
   195                           
   196                           ; 2 bytes @ 0x14
   197  000015                     	ds	2
   198  000017                     lcdInit@i_296:
   199                           	opt stack 0
   200                           
   201                           ; 2 bytes @ 0x16
   202  000017                     	ds	2
   203  000019                     
   204                           ; 2 bytes @ 0x18
   205  000019                     	ds	2
   206  00001B                     
   207                           ; 3 bytes @ 0x1A
   208  00001B                     	ds	3
   209  00001E                     ??_main:
   210                           
   211                           ; 0 bytes @ 0x1D
   212  00001E                     	ds	1
   213  00001F                     main@value:
   214                           	opt stack 0
   215                           
   216                           ; 1 bytes @ 0x1E
   217  00001F                     	ds	1
   218  000020                     main@count:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x1F
   222  000020                     	ds	1
   223  000021                     main@i:
   224                           	opt stack 0
   225                           
   226                           ; 2 bytes @ 0x20
   227  000021                     	ds	2
   228                           
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 17 in file "mainMaster.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;  argc            2   24[COMRAM] int 
   237 ;;  argv            3   26[COMRAM] PTR PTR unsigned char 
   238 ;; Auto vars:     Size  Location     Type
   239 ;;  i               2   32[COMRAM] int 
   240 ;;  count           1   31[COMRAM] unsigned char 
   241 ;;  value           1   30[COMRAM] unsigned char 
   242 ;; Return value:  Size  Location     Type
   243 ;;                  2   24[COMRAM] int 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   251 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   252 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   254 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   255 ;;Total ram usage:       10 bytes
   256 ;; Hardware stack levels required when called:    7
   257 ;; This function calls:
   258 ;;		_i2c_init
   259 ;;		_lcdInit
   260 ;;		_lcdSetPos
   261 ;;		_lcdWriteChar
   262 ;;		_readByte
   263 ;;		_sendByte
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270  0010F2                     __ptext0:
   271                           	opt stack 0
   272  0010F2                     _main:
   273                           	opt stack 24
   274                           
   275                           ;mainMaster.c: 18: char value, count = '0';
   276                           
   277                           ;incstack = 0
   278  0010F2  6E1E               	movwf	??_main& (0+255),c
   279  0010F4  0E30               	movlw	48
   280  0010F6  6E20               	movwf	main@count,c
   281  0010F8  501E               	movf	??_main& (0+255),w,c
   282                           
   283                           ;mainMaster.c: 19: lcdInit();
   284  0010FA  EC8E  F007         	call	_lcdInit	;wreg free
   285                           
   286                           ;mainMaster.c: 20: i2c_init();
   287  0010FE  ECC3  F009         	call	_i2c_init	;wreg free
   288                           
   289                           ;mainMaster.c: 21: for(int i = 0; i < 16; i++)
   290  001102  0E00               	movlw	0
   291  001104  6E22               	movwf	main@i+1,c
   292  001106  0E00               	movlw	0
   293  001108  6E21               	movwf	main@i,c
   294  00110A  5022               	movf	main@i+1,w,c
   295  00110C  0A80               	xorlw	128
   296  00110E  0F80               	addlw	-128
   297  001110  0E10               	movlw	16
   298  001112  B4D8               	btfsc	status,2,c
   299  001114  5C21               	subwf	main@i,w,c
   300  001116  B0D8               	btfsc	status,0,c
   301  001118  D033               	goto	l19
   302                           
   303                           ;mainMaster.c: 22: {
   304                           ;mainMaster.c: 23: sendByte(count++,0x30<<1);
   305  00111A  6E1E               	movwf	??_main& (0+255),c
   306  00111C  0E60               	movlw	96
   307  00111E  6E03               	movwf	sendByte@address,c
   308  001120  501E               	movf	??_main& (0+255),w,c
   309  001122  5020               	movf	main@count,w,c
   310  001124  EC83  F009         	call	_sendByte
   311  001128  2A20               	incf	main@count,f,c
   312                           
   313                           ;mainMaster.c: 24: lcdSetPos(i,0);
   314  00112A  6E1E               	movwf	??_main& (0+255),c
   315  00112C  0E00               	movlw	0
   316  00112E  6E07               	movwf	lcdSetPos@y,c
   317  001130  501E               	movf	??_main& (0+255),w,c
   318  001132  5021               	movf	main@i,w,c
   319  001134  ECF5  F008         	call	_lcdSetPos
   320                           
   321                           ;mainMaster.c: 25: lcdWriteChar(count);
   322  001138  5020               	movf	main@count,w,c
   323  00113A  ECCE  F009         	call	_lcdWriteChar
   324                           
   325                           ;mainMaster.c: 27: _delay((unsigned long)((10)*(12000000/4000.0)));
   326  00113E  0E27               	movlw	39
   327  001140  6E1E               	movwf	??_main& (0+255),c
   328  001142  0EF5               	movlw	245
   329  001144                     u387:
   330  001144  2EE8               	decfsz	wreg,f,c
   331  001146  D7FE               	goto	u387
   332  001148  2E1E               	decfsz	??_main& (0+255),f,c
   333  00114A  D7FC               	goto	u387
   334  00114C  F000               	nop	
   335                           
   336                           ;mainMaster.c: 28: value = readByte(0x30<<1);
   337  00114E  0E60               	movlw	96
   338  001150  EC70  F009         	call	_readByte
   339  001154  6E1F               	movwf	main@value,c
   340                           
   341                           ;mainMaster.c: 29: lcdSetPos(i,1);
   342  001156  6E1E               	movwf	??_main& (0+255),c
   343  001158  0E01               	movlw	1
   344  00115A  6E07               	movwf	lcdSetPos@y,c
   345  00115C  501E               	movf	??_main& (0+255),w,c
   346  00115E  5021               	movf	main@i,w,c
   347  001160  ECF5  F008         	call	_lcdSetPos
   348                           
   349                           ;mainMaster.c: 30: lcdWriteChar(value);
   350  001164  501F               	movf	main@value,w,c
   351  001166  ECCE  F009         	call	_lcdWriteChar
   352                           
   353                           ;mainMaster.c: 32: _delay((unsigned long)((10)*(12000000/4000.0)));
   354  00116A  0E27               	movlw	39
   355  00116C  6E1E               	movwf	??_main& (0+255),c
   356  00116E  0EF5               	movlw	245
   357  001170                     u397:
   358  001170  2EE8               	decfsz	wreg,f,c
   359  001172  D7FE               	goto	u397
   360  001174  2E1E               	decfsz	??_main& (0+255),f,c
   361  001176  D7FC               	goto	u397
   362  001178  F000               	nop	
   363  00117A  4A21               	infsnz	main@i,f,c
   364  00117C  2A22               	incf	main@i+1,f,c
   365  00117E  D7C5               	goto	L1
   366  001180                     l19:
   367                           
   368                           ;mainMaster.c: 35: {
   369  001180  D7FF               	goto	l19
   370  001182                     __end_of_main:
   371                           	opt stack 0
   372                           wreg	equ	0xFE8
   373                           status	equ	0xFD8
   374                           
   375 ;; *************** function _sendByte *****************
   376 ;; Defined at:
   377 ;;		line 95 in file "masterI2C.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;  data            1    wreg     unsigned char 
   380 ;;  address         1    2[COMRAM] unsigned char 
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  data            1    3[COMRAM] unsigned char 
   383 ;; Return value:  Size  Location     Type
   384 ;;		None               void
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   392 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   396 ;;Total ram usage:        2 bytes
   397 ;; Hardware stack levels used:    1
   398 ;; Hardware stack levels required when called:    2
   399 ;; This function calls:
   400 ;;		_i2c_master_ack
   401 ;;		_i2c_start
   402 ;;		_i2c_stop
   403 ;;		_i2c_write
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text1
   410  001306                     __ptext1:
   411                           	opt stack 0
   412  001306                     _sendByte:
   413                           	opt stack 28
   414                           
   415                           ;incstack = 0
   416                           ;sendByte@data stored from wreg
   417  001306  CFE8 F004          	movff	wreg,sendByte@data
   418                           
   419                           ;masterI2C.c: 98: i2c_start(0);
   420  00130A  0E00               	movlw	0
   421  00130C  EC94  F009         	call	_i2c_start
   422                           
   423                           ;masterI2C.c: 101: i2c_write(address|0);
   424  001310  5003               	movf	sendByte@address,w,c
   425  001312  ECA2  F009         	call	_i2c_write
   426                           
   427                           ;masterI2C.c: 104: i2c_write(data);
   428  001316  5004               	movf	sendByte@data,w,c
   429  001318  ECA2  F009         	call	_i2c_write
   430                           
   431                           ;masterI2C.c: 107: i2c_master_ack(1);
   432  00131C  0E01               	movlw	1
   433  00131E  ECAD  F009         	call	_i2c_master_ack
   434                           
   435                           ;masterI2C.c: 110: i2c_stop();
   436  001322  ECE7  F009         	call	_i2c_stop	;wreg free
   437  001326  0012               	return	
   438  001328                     __end_of_sendByte:
   439                           	opt stack 0
   440                           wreg	equ	0xFE8
   441                           status	equ	0xFD8
   442                           
   443 ;; *************** function _readByte *****************
   444 ;; Defined at:
   445 ;;		line 112 in file "masterI2C.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;  address         1    wreg     unsigned char 
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  address         1    2[COMRAM] unsigned char 
   450 ;;  data            1    3[COMRAM] unsigned char 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      unsigned char 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   464 ;;Total ram usage:        2 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    2
   467 ;; This function calls:
   468 ;;		_i2c_master_ack
   469 ;;		_i2c_read
   470 ;;		_i2c_start
   471 ;;		_i2c_stop
   472 ;;		_i2c_write
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text2
   479  0012E0                     __ptext2:
   480                           	opt stack 0
   481  0012E0                     _readByte:
   482                           	opt stack 28
   483                           
   484                           ;incstack = 0
   485                           ;readByte@address stored from wreg
   486  0012E0  CFE8 F003          	movff	wreg,readByte@address
   487                           
   488                           ;masterI2C.c: 114: unsigned char data;
   489                           ;masterI2C.c: 116: i2c_start(0);
   490  0012E4  0E00               	movlw	0
   491  0012E6  EC94  F009         	call	_i2c_start
   492                           
   493                           ;masterI2C.c: 119: i2c_write(address|1);
   494  0012EA  5003               	movf	readByte@address,w,c
   495  0012EC  0901               	iorlw	1
   496  0012EE  ECA2  F009         	call	_i2c_write
   497                           
   498                           ;masterI2C.c: 122: data=i2c_read();
   499  0012F2  ECE0  F009         	call	_i2c_read	;wreg free
   500  0012F6  6E04               	movwf	readByte@data,c
   501                           
   502                           ;masterI2C.c: 125: i2c_master_ack(1);
   503  0012F8  0E01               	movlw	1
   504  0012FA  ECAD  F009         	call	_i2c_master_ack
   505                           
   506                           ;masterI2C.c: 128: i2c_stop();
   507  0012FE  ECE7  F009         	call	_i2c_stop	;wreg free
   508                           
   509                           ;masterI2C.c: 129: return data;
   510  001302  5004               	movf	readByte@data,w,c
   511  001304  0012               	return	
   512  001306                     __end_of_readByte:
   513                           	opt stack 0
   514                           wreg	equ	0xFE8
   515                           status	equ	0xFD8
   516                           
   517 ;; *************** function _i2c_write *****************
   518 ;; Defined at:
   519 ;;		line 66 in file "masterI2C.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  data            1    wreg     unsigned char 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  data            1    1[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;		None               void
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   537 ;;Total ram usage:        1 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    1
   540 ;; This function calls:
   541 ;;		_i2c_idle
   542 ;; This function is called by:
   543 ;;		_sendByte
   544 ;;		_readByte
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text3
   549  001344                     __ptext3:
   550                           	opt stack 0
   551  001344                     _i2c_write:
   552                           	opt stack 28
   553                           
   554                           ;incstack = 0
   555                           ;i2c_write@data stored from wreg
   556  001344  CFE8 F002          	movff	wreg,i2c_write@data
   557                           
   558                           ;masterI2C.c: 69: SSPBUF = data;
   559  001348  C002  FFC9         	movff	i2c_write@data,4041	;volatile
   560                           
   561                           ;masterI2C.c: 70: if (SSPCON1bits.WCOL)
   562  00134C  BEC6               	btfsc	4038,7,c	;volatile
   563  00134E  0012               	return	
   564  001350                     l161:
   565  001350  B0C7               	btfsc	4039,0,c	;volatile
   566  001352  D7FE               	goto	l161
   567                           
   568                           ;masterI2C.c: 74: i2c_idle();
   569  001354  ECD8  F009         	call	_i2c_idle	;wreg free
   570  001358  0012               	return	
   571  00135A                     __end_of_i2c_write:
   572                           	opt stack 0
   573                           wreg	equ	0xFE8
   574                           status	equ	0xFD8
   575                           
   576 ;; *************** function _i2c_stop *****************
   577 ;; Defined at:
   578 ;;		line 52 in file "masterI2C.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;		None               void
   585 ;; Registers used:
   586 ;;		None
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_sendByte
   602 ;;		_readByte
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text4
   607  0013CE                     __ptext4:
   608                           	opt stack 0
   609  0013CE                     _i2c_stop:
   610                           	opt stack 29
   611                           
   612                           ;masterI2C.c: 55: SSPCON2bits.PEN = 1;
   613                           
   614                           ;incstack = 0
   615  0013CE  84C5               	bsf	4037,2,c	;volatile
   616  0013D0                     l150:
   617  0013D0  A4C5               	btfss	4037,2,c	;volatile
   618  0013D2  0012               	return	
   619  0013D4  D7FD               	goto	l150
   620  0013D6                     __end_of_i2c_stop:
   621                           	opt stack 0
   622                           wreg	equ	0xFE8
   623                           status	equ	0xFD8
   624                           
   625 ;; *************** function _i2c_start *****************
   626 ;; Defined at:
   627 ;;		line 40 in file "masterI2C.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  stype           1    wreg     unsigned char 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  stype           1    1[COMRAM] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;		None               void
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   645 ;;Total ram usage:        1 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    1
   648 ;; This function calls:
   649 ;;		_i2c_idle
   650 ;; This function is called by:
   651 ;;		_sendByte
   652 ;;		_readByte
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text5
   657  001328                     __ptext5:
   658                           	opt stack 0
   659  001328                     _i2c_start:
   660                           	opt stack 28
   661                           
   662                           ;incstack = 0
   663                           ;i2c_start@stype stored from wreg
   664  001328  CFE8 F002          	movff	wreg,i2c_start@stype
   665                           
   666                           ;masterI2C.c: 42: i2c_idle();
   667  00132C  ECD8  F009         	call	_i2c_idle	;wreg free
   668                           
   669                           ;masterI2C.c: 43: if (stype == 0) {
   670  001330  6602               	tstfsz	i2c_start@stype,c
   671  001332  D004               	goto	l139
   672                           
   673                           ;masterI2C.c: 44: SSPCON2bits.SEN = 1;
   674  001334  80C5               	bsf	4037,0,c	;volatile
   675  001336                     l140:
   676  001336  A0C5               	btfss	4037,0,c	;volatile
   677  001338  0012               	return	
   678  00133A  D7FD               	goto	l140
   679  00133C                     l139:
   680                           
   681                           ;masterI2C.c: 47: SSPCON2bits.RSEN = 1;
   682  00133C  82C5               	bsf	4037,1,c	;volatile
   683  00133E                     l144:
   684  00133E  A2C5               	btfss	4037,1,c	;volatile
   685  001340  0012               	return	
   686  001342  D7FD               	goto	l144
   687  001344                     __end_of_i2c_start:
   688                           	opt stack 0
   689                           wreg	equ	0xFE8
   690                           status	equ	0xFD8
   691                           
   692 ;; *************** function _i2c_read *****************
   693 ;; Defined at:
   694 ;;		line 84 in file "masterI2C.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      unsigned char 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    1
   715 ;; This function calls:
   716 ;;		_i2c_idle
   717 ;; This function is called by:
   718 ;;		_readByte
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text6
   723  0013C0                     __ptext6:
   724                           	opt stack 0
   725  0013C0                     _i2c_read:
   726                           	opt stack 28
   727                           
   728                           ;masterI2C.c: 87: i2c_idle();
   729                           
   730                           ;incstack = 0
   731  0013C0  ECD8  F009         	call	_i2c_idle	;wreg free
   732                           
   733                           ;masterI2C.c: 90: SSPCON2bits.RCEN = 1;
   734  0013C4  86C5               	bsf	4037,3,c	;volatile
   735  0013C6                     l172:
   736  0013C6  A0C7               	btfss	4039,0,c	;volatile
   737  0013C8  D7FE               	goto	l172
   738                           
   739                           ;masterI2C.c: 92: return(SSPBUF);
   740  0013CA  50C9               	movf	4041,w,c	;volatile
   741  0013CC  0012               	return	
   742  0013CE                     __end_of_i2c_read:
   743                           	opt stack 0
   744                           wreg	equ	0xFE8
   745                           status	equ	0xFD8
   746                           
   747 ;; *************** function _i2c_idle *****************
   748 ;; Defined at:
   749 ;;		line 34 in file "masterI2C.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;		None               void
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;Total ram usage:        1 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; This function calls:
   770 ;;		Nothing
   771 ;; This function is called by:
   772 ;;		_i2c_start
   773 ;;		_i2c_write
   774 ;;		_i2c_read
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text7
   779  0013B0                     __ptext7:
   780                           	opt stack 0
   781  0013B0                     _i2c_idle:
   782                           	opt stack 28
   783  0013B0                     l891:
   784  0013B0  CFC5 F001          	movff	4037,??_i2c_idle	;volatile
   785  0013B4  0E1F               	movlw	31
   786  0013B6  1601               	andwf	??_i2c_idle,f,c
   787  0013B8  B4D8               	btfsc	status,2,c
   788  0013BA  B4C7               	btfsc	4039,2,c	;volatile
   789  0013BC  D7F9               	goto	l891
   790  0013BE  0012               	return	
   791  0013C0                     __end_of_i2c_idle:
   792                           	opt stack 0
   793                           wreg	equ	0xFE8
   794                           status	equ	0xFD8
   795                           
   796 ;; *************** function _i2c_master_ack *****************
   797 ;; Defined at:
   798 ;;		line 77 in file "masterI2C.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  ack_type        1    wreg     unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  ack_type        1    0[COMRAM] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;		None               void
   805 ;; Registers used:
   806 ;;		wreg
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   816 ;;Total ram usage:        1 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_sendByte
   822 ;;		_readByte
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text8
   827  00135A                     __ptext8:
   828                           	opt stack 0
   829  00135A                     _i2c_master_ack:
   830                           	opt stack 29
   831                           
   832                           ;incstack = 0
   833                           ;i2c_master_ack@ack_type stored from wreg
   834  00135A  CFE8 F001          	movff	wreg,i2c_master_ack@ack_type
   835                           
   836                           ;masterI2C.c: 79: SSPCON2bits.ACKDT = ack_type;
   837  00135E  B001               	btfsc	i2c_master_ack@ack_type,0,c
   838  001360  D002               	bra	u255
   839  001362  9AC5               	bcf	4037,5,c	;volatile
   840  001364  D001               	bra	u256
   841  001366                     u255:
   842  001366  8AC5               	bsf	4037,5,c	;volatile
   843  001368                     u256:
   844                           
   845                           ;masterI2C.c: 80: SSPCON2bits.ACKEN = 1;
   846  001368  88C5               	bsf	4037,4,c	;volatile
   847  00136A                     l166:
   848  00136A  A8C5               	btfss	4037,4,c	;volatile
   849  00136C  0012               	return	
   850  00136E  D7FD               	goto	l166
   851  001370                     __end_of_i2c_master_ack:
   852                           	opt stack 0
   853                           wreg	equ	0xFE8
   854                           status	equ	0xFD8
   855                           
   856 ;; *************** function _lcdInit *****************
   857 ;; Defined at:
   858 ;;		line 8 in file "lcd.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  i               2   22[COMRAM] int 
   863 ;;  i               2   20[COMRAM] int 
   864 ;;  i               2   18[COMRAM] int 
   865 ;;  i               2   16[COMRAM] int 
   866 ;; Return value:  Size  Location     Type
   867 ;;		None               void
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   878 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   879 ;;Total ram usage:        9 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    6
   882 ;; This function calls:
   883 ;;		_intro
   884 ;;		_lcdWriteCmd
   885 ;;		_writeDigit
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text9
   892  000F1C                     __ptext9:
   893                           	opt stack 0
   894  000F1C                     _lcdInit:
   895                           	opt stack 24
   896                           
   897                           ;lcd.c: 11: ANCON0 = 0xff;
   898                           
   899                           ;incstack = 0
   900  000F1C  010F               	movlb	15	; () banked
   901  000F1E  010F               	movlb	15	; () banked
   902  000F20  6948               	setf	72,b	;volatile
   903                           
   904                           ;lcd.c: 12: ANCON1 = 0xff;
   905  000F22  010F               	movlb	15	; () banked
   906  000F24  010F               	movlb	15	; () banked
   907  000F26  6949               	setf	73,b	;volatile
   908                           
   909                           ;lcd.c: 13: (TRISDbits.TRISD0) = 0;
   910  000F28  9095               	bcf	3989,0,c	;volatile
   911                           
   912                           ;lcd.c: 14: (TRISDbits.TRISD1) = 0;
   913  000F2A  9295               	bcf	3989,1,c	;volatile
   914                           
   915                           ;lcd.c: 15: TRISDbits.TRISD2 = 0;
   916  000F2C  9495               	bcf	3989,2,c	;volatile
   917                           
   918                           ;lcd.c: 16: (TRISDbits.TRISD3) = 0;
   919  000F2E  9695               	bcf	3989,3,c	;volatile
   920                           
   921                           ;lcd.c: 18: (TRISCbits.TRISC0) = 0;
   922  000F30  9094               	bcf	3988,0,c	;volatile
   923                           
   924                           ;lcd.c: 19: (LATCbits.LATC0) = 0;
   925  000F32  908B               	bcf	3979,0,c	;volatile
   926                           
   927                           ;lcd.c: 21: (TRISCbits.TRISC1) = 0;
   928  000F34  9294               	bcf	3988,1,c	;volatile
   929                           
   930                           ;lcd.c: 22: (LATCbits.LATC1) = 0;
   931  000F36  928B               	bcf	3979,1,c	;volatile
   932                           
   933                           ; BSR set to: 15
   934                           ;lcd.c: 25: _delay((unsigned long)((15)*(12000000/4000.0)));
   935  000F38  0E3B               	movlw	59
   936  000F3A  6E10               	movwf	??_lcdInit& (0+255),c
   937  000F3C  0E70               	movlw	112
   938  000F3E                     u407:
   939  000F3E  2EE8               	decfsz	wreg,f,c
   940  000F40  D7FE               	goto	u407
   941  000F42  2E10               	decfsz	??_lcdInit& (0+255),f,c
   942  000F44  D7FC               	goto	u407
   943                           
   944                           ;lcd.c: 29: (LATCbits.LATC0) = 0;
   945  000F46  908B               	bcf	3979,0,c	;volatile
   946                           
   947                           ;lcd.c: 30: writeDigit(0x03);
   948  000F48  0E03               	movlw	3
   949  000F4A  EC39  F009         	call	_writeDigit
   950                           
   951                           ;lcd.c: 31: for(int i = 0; i < 100; i++) _delay((unsigned long)((41)*(12000000/4000000.0
      +                          )));
   952  000F4E  0E00               	movlw	0
   953  000F50  6E12               	movwf	lcdInit@i+1,c
   954  000F52  0E00               	movlw	0
   955  000F54  6E11               	movwf	lcdInit@i,c
   956  000F56  5012               	movf	lcdInit@i+1,w,c
   957  000F58  0A80               	xorlw	128
   958  000F5A  0F80               	addlw	-128
   959  000F5C  0E64               	movlw	100
   960  000F5E  B4D8               	btfsc	status,2,c
   961  000F60  5C11               	subwf	lcdInit@i,w,c
   962  000F62  B0D8               	btfsc	status,0,c
   963  000F64  D006               	goto	l959
   964  000F66  0E29               	movlw	41
   965  000F68                     u417:
   966  000F68  2EE8               	decfsz	wreg,f,c
   967  000F6A  D7FE               	goto	u417
   968  000F6C  4A11               	infsnz	lcdInit@i,f,c
   969  000F6E  2A12               	incf	lcdInit@i+1,f,c
   970  000F70  D7F2               	goto	L2
   971  000F72                     l959:
   972                           
   973                           ;lcd.c: 33: writeDigit(0x03);
   974  000F72  0E03               	movlw	3
   975  000F74  EC39  F009         	call	_writeDigit
   976                           
   977                           ;lcd.c: 34: for(int i = 0; i < 10; i++) _delay((unsigned long)((12)*(12000000/4000000.0)
      +                          ));
   978  000F78  0E00               	movlw	0
   979  000F7A  6E14               	movwf	lcdInit@i_294+1,c
   980  000F7C  0E00               	movlw	0
   981  000F7E  6E13               	movwf	lcdInit@i_294,c
   982  000F80  5014               	movf	lcdInit@i_294+1,w,c
   983  000F82  0A80               	xorlw	128
   984  000F84  0F80               	addlw	-128
   985  000F86  0E0A               	movlw	10
   986  000F88  B4D8               	btfsc	status,2,c
   987  000F8A  5C13               	subwf	lcdInit@i_294,w,c
   988  000F8C  B0D8               	btfsc	status,0,c
   989  000F8E  D006               	goto	l971
   990  000F90  0E0C               	movlw	12
   991  000F92                     u427:
   992  000F92  2EE8               	decfsz	wreg,f,c
   993  000F94  D7FE               	goto	u427
   994  000F96  4A13               	infsnz	lcdInit@i_294,f,c
   995  000F98  2A14               	incf	lcdInit@i_294+1,f,c
   996  000F9A  D7F2               	goto	L3
   997  000F9C                     l971:
   998                           
   999                           ;lcd.c: 36: writeDigit(0x03);
  1000  000F9C  0E03               	movlw	3
  1001  000F9E  EC39  F009         	call	_writeDigit
  1002                           
  1003                           ;lcd.c: 37: for(int i = 0; i < 10; i++) _delay((unsigned long)((12)*(12000000/4000000.0)
      +                          ));
  1004  000FA2  0E00               	movlw	0
  1005  000FA4  6E16               	movwf	lcdInit@i_295+1,c
  1006  000FA6  0E00               	movlw	0
  1007  000FA8  6E15               	movwf	lcdInit@i_295,c
  1008  000FAA  5016               	movf	lcdInit@i_295+1,w,c
  1009  000FAC  0A80               	xorlw	128
  1010  000FAE  0F80               	addlw	-128
  1011  000FB0  0E0A               	movlw	10
  1012  000FB2  B4D8               	btfsc	status,2,c
  1013  000FB4  5C15               	subwf	lcdInit@i_295,w,c
  1014  000FB6  B0D8               	btfsc	status,0,c
  1015  000FB8  D006               	goto	l983
  1016  000FBA  0E0C               	movlw	12
  1017  000FBC                     u437:
  1018  000FBC  2EE8               	decfsz	wreg,f,c
  1019  000FBE  D7FE               	goto	u437
  1020  000FC0  4A15               	infsnz	lcdInit@i_295,f,c
  1021  000FC2  2A16               	incf	lcdInit@i_295+1,f,c
  1022  000FC4  D7F2               	goto	L4
  1023  000FC6                     l983:
  1024                           
  1025                           ;lcd.c: 39: writeDigit(0x02);
  1026  000FC6  0E02               	movlw	2
  1027  000FC8  EC39  F009         	call	_writeDigit
  1028                           
  1029                           ;lcd.c: 40: for(int i = 0; i < 10; i++) _delay((unsigned long)((12)*(12000000/4000000.0)
      +                          ));
  1030  000FCC  0E00               	movlw	0
  1031  000FCE  6E18               	movwf	lcdInit@i_296+1,c
  1032  000FD0  0E00               	movlw	0
  1033  000FD2  6E17               	movwf	lcdInit@i_296,c
  1034  000FD4  5018               	movf	lcdInit@i_296+1,w,c
  1035  000FD6  0A80               	xorlw	128
  1036  000FD8  0F80               	addlw	-128
  1037  000FDA  0E0A               	movlw	10
  1038  000FDC  B4D8               	btfsc	status,2,c
  1039  000FDE  5C17               	subwf	lcdInit@i_296,w,c
  1040  000FE0  B0D8               	btfsc	status,0,c
  1041  000FE2  D006               	goto	l995
  1042  000FE4  0E0C               	movlw	12
  1043  000FE6                     u447:
  1044  000FE6  2EE8               	decfsz	wreg,f,c
  1045  000FE8  D7FE               	goto	u447
  1046  000FEA  4A17               	infsnz	lcdInit@i_296,f,c
  1047  000FEC  2A18               	incf	lcdInit@i_296+1,f,c
  1048  000FEE  D7F2               	goto	L5
  1049  000FF0                     l995:
  1050                           
  1051                           ;lcd.c: 48: lcdWriteCmd(0x28);
  1052  000FF0  0E28               	movlw	40
  1053  000FF2  EC17  F009         	call	_lcdWriteCmd
  1054                           
  1055                           ;lcd.c: 54: lcdWriteCmd(0x01);
  1056  000FF6  0E01               	movlw	1
  1057  000FF8  EC17  F009         	call	_lcdWriteCmd
  1058                           
  1059                           ;lcd.c: 58: lcdWriteCmd(0x06);
  1060  000FFC  0E06               	movlw	6
  1061  000FFE  EC17  F009         	call	_lcdWriteCmd
  1062                           
  1063                           ;lcd.c: 61: lcdWriteCmd(0x0C);
  1064  001002  0E0C               	movlw	12
  1065  001004  EC17  F009         	call	_lcdWriteCmd
  1066                           
  1067                           ;lcd.c: 63: intro();
  1068  001008  ECC1  F008         	call	_intro	;wreg free
  1069  00100C  0012               	return	
  1070  00100E                     __end_of_lcdInit:
  1071                           	opt stack 0
  1072                           wreg	equ	0xFE8
  1073                           status	equ	0xFD8
  1074                           
  1075 ;; *************** function _intro *****************
  1076 ;; Defined at:
  1077 ;;		line 173 in file "lcd.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  i               2   13[COMRAM] int 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1095 ;;Total ram usage:        3 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    5
  1098 ;; This function calls:
  1099 ;;		_lcdClean
  1100 ;;		_lcdSetPos
  1101 ;;		_lcdWriteStrC
  1102 ;; This function is called by:
  1103 ;;		_lcdInit
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text10
  1108  001182                     __ptext10:
  1109                           	opt stack 0
  1110  001182                     _intro:
  1111                           	opt stack 24
  1112                           
  1113                           ;lcd.c: 176: int i;
  1114                           ;lcd.c: 177: lcdSetPos(0,0);
  1115                           
  1116                           ;incstack = 0
  1117  001182  6E0D               	movwf	??_intro& (0+255),c
  1118  001184  0E00               	movlw	0
  1119  001186  6E07               	movwf	lcdSetPos@y,c
  1120  001188  500D               	movf	??_intro& (0+255),w,c
  1121  00118A  0E00               	movlw	0
  1122  00118C  ECF5  F008         	call	_lcdSetPos
  1123                           
  1124                           ;lcd.c: 178: lcdWriteStrC("Johnny V0.000001");
  1125  001190  0E0F               	movlw	high STR_1
  1126  001192  6E05               	movwf	lcdWriteStrC@s+1,c
  1127  001194  0E01               	movlw	low STR_1
  1128  001196  6E04               	movwf	lcdWriteStrC@s,c
  1129  001198  EC57  F009         	call	_lcdWriteStrC	;wreg free
  1130                           
  1131                           ;lcd.c: 179: lcdSetPos(0,1);
  1132  00119C  6E0D               	movwf	??_intro& (0+255),c
  1133  00119E  0E01               	movlw	1
  1134  0011A0  6E07               	movwf	lcdSetPos@y,c
  1135  0011A2  500D               	movf	??_intro& (0+255),w,c
  1136  0011A4  0E00               	movlw	0
  1137  0011A6  ECF5  F008         	call	_lcdSetPos
  1138                           
  1139                           ;lcd.c: 180: lcdWriteStrC("Singh Be");
  1140  0011AA  0E0F               	movlw	high STR_2
  1141  0011AC  6E05               	movwf	lcdWriteStrC@s+1,c
  1142  0011AE  0E12               	movlw	low STR_2
  1143  0011B0  6E04               	movwf	lcdWriteStrC@s,c
  1144  0011B2  EC57  F009         	call	_lcdWriteStrC	;wreg free
  1145                           
  1146                           ;lcd.c: 182: for(i = 0; i < 10; i++) _delay((unsigned long)((50)*(12000000/4000.0)));
  1147  0011B6  0E00               	movlw	0
  1148  0011B8  6E0F               	movwf	intro@i+1,c
  1149  0011BA  0E00               	movlw	0
  1150  0011BC  6E0E               	movwf	intro@i,c
  1151  0011BE  500F               	movf	intro@i+1,w,c
  1152  0011C0  0A80               	xorlw	128
  1153  0011C2  0F80               	addlw	-128
  1154  0011C4  0E0A               	movlw	10
  1155  0011C6  B4D8               	btfsc	status,2,c
  1156  0011C8  5C0E               	subwf	intro@i,w,c
  1157  0011CA  B0D8               	btfsc	status,0,c
  1158  0011CC  D00B               	goto	l911
  1159  0011CE  0EC3               	movlw	195
  1160  0011D0  6E0D               	movwf	??_intro& (0+255),c
  1161  0011D2  0ECD               	movlw	205
  1162  0011D4                     u457:
  1163  0011D4  2EE8               	decfsz	wreg,f,c
  1164  0011D6  D7FE               	goto	u457
  1165  0011D8  2E0D               	decfsz	??_intro& (0+255),f,c
  1166  0011DA  D7FC               	goto	u457
  1167  0011DC  F000               	nop	
  1168  0011DE  4A0E               	infsnz	intro@i,f,c
  1169  0011E0  2A0F               	incf	intro@i+1,f,c
  1170  0011E2  D7ED               	goto	L6
  1171  0011E4                     l911:
  1172                           
  1173                           ;lcd.c: 183: lcdClean();
  1174  0011E4  EC07  F008         	call	_lcdClean	;wreg free
  1175  0011E8  0012               	return	
  1176  0011EA                     __end_of_intro:
  1177                           	opt stack 0
  1178                           wreg	equ	0xFE8
  1179                           status	equ	0xFD8
  1180                           
  1181 ;; *************** function _lcdWriteStrC *****************
  1182 ;; Defined at:
  1183 ;;		line 136 in file "lcd.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  s               2    3[COMRAM] PTR const unsigned char 
  1186 ;;		 -> STR_2(9), STR_1(17), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;		None               void
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1202 ;;Total ram usage:        2 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    3
  1205 ;; This function calls:
  1206 ;;		_lcdWriteChar
  1207 ;; This function is called by:
  1208 ;;		_intro
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text11
  1213  0012AE                     __ptext11:
  1214                           	opt stack 0
  1215  0012AE                     _lcdWriteStrC:
  1216                           	opt stack 25
  1217                           
  1218                           ;lcd.c: 138: while(*s) lcdWriteChar(*s++);
  1219                           
  1220                           ;incstack = 0
  1221  0012AE  D00C               	goto	l843
  1222  0012B0                     l839:
  1223  0012B0  C004  FFF6         	movff	lcdWriteStrC@s,tblptrl
  1224  0012B4  C005  FFF7         	movff	lcdWriteStrC@s+1,tblptrh
  1225  0012B8  0E00               	movlw	low (__mediumconst shr (0+16))
  1226  0012BA  6EF8               	movwf	tblptru,c
  1227  0012BC  0008               	tblrd		*
  1228  0012BE  50F5               	movf	tablat,w,c
  1229  0012C0  ECCE  F009         	call	_lcdWriteChar
  1230  0012C4  4A04               	infsnz	lcdWriteStrC@s,f,c
  1231  0012C6  2A05               	incf	lcdWriteStrC@s+1,f,c
  1232  0012C8                     l843:
  1233  0012C8  C004  FFF6         	movff	lcdWriteStrC@s,tblptrl
  1234  0012CC  C005  FFF7         	movff	lcdWriteStrC@s+1,tblptrh
  1235  0012D0  0E00               	movlw	low (__mediumconst shr (0+16))
  1236  0012D2  6EF8               	movwf	tblptru,c
  1237  0012D4  0008               	tblrd		*
  1238  0012D6  50F5               	movf	tablat,w,c
  1239  0012D8  0900               	iorlw	0
  1240  0012DA  B4D8               	btfsc	status,2,c
  1241  0012DC  0012               	return	
  1242  0012DE  D7E8               	goto	l839
  1243  0012E0                     __end_of_lcdWriteStrC:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           wreg	equ	0xFE8
  1250                           status	equ	0xFD8
  1251                           
  1252 ;; *************** function _lcdClean *****************
  1253 ;; Defined at:
  1254 ;;		line 141 in file "lcd.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  i               2   10[COMRAM] int 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;		None               void
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1269 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1272 ;;Total ram usage:        3 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    4
  1275 ;; This function calls:
  1276 ;;		_lcdClear
  1277 ;;		_lcdSetPos
  1278 ;;		_lcdWriteChar
  1279 ;; This function is called by:
  1280 ;;		_intro
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text12
  1285  00100E                     __ptext12:
  1286                           	opt stack 0
  1287  00100E                     _lcdClean:
  1288                           	opt stack 24
  1289                           
  1290                           ;lcd.c: 143: int i;
  1291                           ;lcd.c: 144: for(i = 0; i < 16; i++)
  1292                           
  1293                           ;incstack = 0
  1294  00100E  0E00               	movlw	0
  1295  001010  6E0C               	movwf	lcdClean@i+1,c
  1296  001012  0E00               	movlw	0
  1297  001014  6E0B               	movwf	lcdClean@i,c
  1298  001016  500C               	movf	lcdClean@i+1,w,c
  1299  001018  0A80               	xorlw	128
  1300  00101A  0F80               	addlw	-128
  1301  00101C  0E10               	movlw	16
  1302  00101E  B4D8               	btfsc	status,2,c
  1303  001020  5C0B               	subwf	lcdClean@i,w,c
  1304  001022  B0D8               	btfsc	status,0,c
  1305  001024  D015               	goto	l859
  1306                           
  1307                           ;lcd.c: 145: {
  1308                           ;lcd.c: 146: lcdSetPos(i,0);
  1309  001026  6E0A               	movwf	??_lcdClean& (0+255),c
  1310  001028  0E00               	movlw	0
  1311  00102A  6E07               	movwf	lcdSetPos@y,c
  1312  00102C  500A               	movf	??_lcdClean& (0+255),w,c
  1313  00102E  500B               	movf	lcdClean@i,w,c
  1314  001030  ECF5  F008         	call	_lcdSetPos
  1315                           
  1316                           ;lcd.c: 147: lcdWriteChar('-');
  1317  001034  0E2D               	movlw	45
  1318  001036  ECCE  F009         	call	_lcdWriteChar
  1319                           
  1320                           ;lcd.c: 148: _delay((unsigned long)((20)*(12000000/4000.0)));
  1321  00103A  0E4E               	movlw	78
  1322  00103C  6E0A               	movwf	??_lcdClean& (0+255),c
  1323  00103E  0EEB               	movlw	235
  1324  001040                     u467:
  1325  001040  2EE8               	decfsz	wreg,f,c
  1326  001042  D7FE               	goto	u467
  1327  001044  2E0A               	decfsz	??_lcdClean& (0+255),f,c
  1328  001046  D7FC               	goto	u467
  1329  001048  F000               	nop	
  1330  00104A  4A0B               	infsnz	lcdClean@i,f,c
  1331  00104C  2A0C               	incf	lcdClean@i+1,f,c
  1332  00104E  D7E3               	goto	L7
  1333  001050                     l859:
  1334                           
  1335                           ;lcd.c: 150: }
  1336                           ;lcd.c: 152: for(i = 0; i < 16; i++)
  1337  001050  0E00               	movlw	0
  1338  001052  6E0C               	movwf	lcdClean@i+1,c
  1339  001054  0E00               	movlw	0
  1340  001056  6E0B               	movwf	lcdClean@i,c
  1341  001058  500C               	movf	lcdClean@i+1,w,c
  1342  00105A  0A80               	xorlw	128
  1343  00105C  0F80               	addlw	-128
  1344  00105E  0E10               	movlw	16
  1345  001060  B4D8               	btfsc	status,2,c
  1346  001062  5C0B               	subwf	lcdClean@i,w,c
  1347  001064  B0D8               	btfsc	status,0,c
  1348  001066  D021               	goto	l873
  1349                           
  1350                           ;lcd.c: 153: {
  1351                           ;lcd.c: 154: lcdSetPos(i,0);
  1352  001068  6E0A               	movwf	??_lcdClean& (0+255),c
  1353  00106A  0E00               	movlw	0
  1354  00106C  6E07               	movwf	lcdSetPos@y,c
  1355  00106E  500A               	movf	??_lcdClean& (0+255),w,c
  1356  001070  500B               	movf	lcdClean@i,w,c
  1357  001072  ECF5  F008         	call	_lcdSetPos
  1358                           
  1359                           ;lcd.c: 155: lcdWriteChar(' ');
  1360  001076  0E20               	movlw	32
  1361  001078  ECCE  F009         	call	_lcdWriteChar
  1362                           
  1363                           ;lcd.c: 156: lcdSetPos(16-i,1);
  1364  00107C  6E0A               	movwf	??_lcdClean& (0+255),c
  1365  00107E  0E01               	movlw	1
  1366  001080  6E07               	movwf	lcdSetPos@y,c
  1367  001082  500A               	movf	??_lcdClean& (0+255),w,c
  1368  001084  500B               	movf	lcdClean@i,w,c
  1369  001086  0800               	sublw	0
  1370  001088  0F10               	addlw	16
  1371  00108A  ECF5  F008         	call	_lcdSetPos
  1372                           
  1373                           ;lcd.c: 157: lcdWriteChar('-');
  1374  00108E  0E2D               	movlw	45
  1375  001090  ECCE  F009         	call	_lcdWriteChar
  1376                           
  1377                           ;lcd.c: 158: _delay((unsigned long)((20)*(12000000/4000.0)));
  1378  001094  0E4E               	movlw	78
  1379  001096  6E0A               	movwf	??_lcdClean& (0+255),c
  1380  001098  0EEB               	movlw	235
  1381  00109A                     u477:
  1382  00109A  2EE8               	decfsz	wreg,f,c
  1383  00109C  D7FE               	goto	u477
  1384  00109E  2E0A               	decfsz	??_lcdClean& (0+255),f,c
  1385  0010A0  D7FC               	goto	u477
  1386  0010A2  F000               	nop	
  1387  0010A4  4A0B               	infsnz	lcdClean@i,f,c
  1388  0010A6  2A0C               	incf	lcdClean@i+1,f,c
  1389  0010A8  D7D7               	goto	L8
  1390  0010AA                     l873:
  1391                           
  1392                           ;lcd.c: 160: }
  1393                           ;lcd.c: 162: for(i = 0; i < 16; i++)
  1394  0010AA  0E00               	movlw	0
  1395  0010AC  6E0C               	movwf	lcdClean@i+1,c
  1396  0010AE  0E00               	movlw	0
  1397  0010B0  6E0B               	movwf	lcdClean@i,c
  1398  0010B2  500C               	movf	lcdClean@i+1,w,c
  1399  0010B4  0A80               	xorlw	128
  1400  0010B6  0F80               	addlw	-128
  1401  0010B8  0E10               	movlw	16
  1402  0010BA  B4D8               	btfsc	status,2,c
  1403  0010BC  5C0B               	subwf	lcdClean@i,w,c
  1404  0010BE  B0D8               	btfsc	status,0,c
  1405  0010C0  D015               	goto	l887
  1406                           
  1407                           ;lcd.c: 163: {
  1408                           ;lcd.c: 164: lcdSetPos(i,1);
  1409  0010C2  6E0A               	movwf	??_lcdClean& (0+255),c
  1410  0010C4  0E01               	movlw	1
  1411  0010C6  6E07               	movwf	lcdSetPos@y,c
  1412  0010C8  500A               	movf	??_lcdClean& (0+255),w,c
  1413  0010CA  500B               	movf	lcdClean@i,w,c
  1414  0010CC  ECF5  F008         	call	_lcdSetPos
  1415                           
  1416                           ;lcd.c: 165: lcdWriteChar(' ');
  1417  0010D0  0E20               	movlw	32
  1418  0010D2  ECCE  F009         	call	_lcdWriteChar
  1419                           
  1420                           ;lcd.c: 166: _delay((unsigned long)((20)*(12000000/4000.0)));
  1421  0010D6  0E4E               	movlw	78
  1422  0010D8  6E0A               	movwf	??_lcdClean& (0+255),c
  1423  0010DA  0EEB               	movlw	235
  1424  0010DC                     u487:
  1425  0010DC  2EE8               	decfsz	wreg,f,c
  1426  0010DE  D7FE               	goto	u487
  1427  0010E0  2E0A               	decfsz	??_lcdClean& (0+255),f,c
  1428  0010E2  D7FC               	goto	u487
  1429  0010E4  F000               	nop	
  1430  0010E6  4A0B               	infsnz	lcdClean@i,f,c
  1431  0010E8  2A0C               	incf	lcdClean@i+1,f,c
  1432  0010EA  D7E3               	goto	L9
  1433  0010EC                     l887:
  1434                           
  1435                           ;lcd.c: 168: }
  1436                           ;lcd.c: 170: lcdClear();
  1437  0010EC  ECEB  F009         	call	_lcdClear	;wreg free
  1438  0010F0  0012               	return	
  1439  0010F2                     __end_of_lcdClean:
  1440                           	opt stack 0
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           wreg	equ	0xFE8
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function _lcdWriteChar *****************
  1449 ;; Defined at:
  1450 ;;		line 102 in file "lcd.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  n               1    wreg     unsigned char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  n               1    2[COMRAM] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;		None               void
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1468 ;;Total ram usage:        1 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    2
  1471 ;; This function calls:
  1472 ;;		_writeByte
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;;		_lcdWriteStrC
  1476 ;;		_lcdClean
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text13
  1481  00139C                     __ptext13:
  1482                           	opt stack 0
  1483  00139C                     _lcdWriteChar:
  1484                           	opt stack 28
  1485                           
  1486                           ;incstack = 0
  1487                           ;lcdWriteChar@n stored from wreg
  1488  00139C  CFE8 F003          	movff	wreg,lcdWriteChar@n
  1489                           
  1490                           ;lcd.c: 105: (LATCbits.LATC0) = 1;
  1491  0013A0  808B               	bsf	3979,0,c	;volatile
  1492                           
  1493                           ;lcd.c: 107: writeByte(n);
  1494  0013A2  5003               	movf	lcdWriteChar@n,w,c
  1495  0013A4  ECB8  F009         	call	_writeByte
  1496                           
  1497                           ;lcd.c: 110: _delay((unsigned long)((43)*(12000000/4000000.0)));
  1498  0013A8  0E2B               	movlw	43
  1499  0013AA                     u497:
  1500  0013AA  2EE8               	decfsz	wreg,f,c
  1501  0013AC  D7FE               	goto	u497
  1502  0013AE  0012               	return	
  1503  0013B0                     __end_of_lcdWriteChar:
  1504                           	opt stack 0
  1505                           tblptru	equ	0xFF8
  1506                           tblptrh	equ	0xFF7
  1507                           tblptrl	equ	0xFF6
  1508                           tablat	equ	0xFF5
  1509                           wreg	equ	0xFE8
  1510                           status	equ	0xFD8
  1511                           
  1512 ;; *************** function _lcdSetPos *****************
  1513 ;; Defined at:
  1514 ;;		line 120 in file "lcd.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  x               1    wreg     unsigned char 
  1517 ;;  y               1    6[COMRAM] unsigned char 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  x               1    8[COMRAM] unsigned char 
  1520 ;;  p               1    7[COMRAM] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;		None               void
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1530 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1533 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1534 ;;Total ram usage:        3 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    3
  1537 ;; This function calls:
  1538 ;;		_lcdWriteCmd
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;;		_lcdClean
  1542 ;;		_intro
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text14
  1547  0011EA                     __ptext14:
  1548                           	opt stack 0
  1549  0011EA                     _lcdSetPos:
  1550                           	opt stack 27
  1551                           
  1552                           ;incstack = 0
  1553                           ;lcdSetPos@x stored from wreg
  1554  0011EA  CFE8 F009          	movff	wreg,lcdSetPos@x
  1555                           
  1556                           ;lcd.c: 122: unsigned char p;
  1557                           ;lcd.c: 124: switch(y)
  1558  0011EE  D00D               	goto	l823
  1559  0011F0                     l813:
  1560  0011F0  C009  F008         	movff	lcdSetPos@x,lcdSetPos@p
  1561  0011F4  D017               	goto	l825
  1562  0011F6                     l815:
  1563  0011F6  5009               	movf	lcdSetPos@x,w,c
  1564  0011F8  0F40               	addlw	64
  1565  0011FA  D005               	goto	L11
  1566  0011FC                     l817:
  1567  0011FC  5009               	movf	lcdSetPos@x,w,c
  1568  0011FE  0F14               	addlw	20
  1569  001200  D002               	goto	L11
  1570  001202                     l819:
  1571  001202  5009               	movf	lcdSetPos@x,w,c
  1572  001204  0F54               	addlw	84
  1573  001206                     L11:
  1574  001206  6E08               	movwf	lcdSetPos@p,c
  1575  001208  D00D               	goto	l825
  1576  00120A                     l823:
  1577  00120A  5007               	movf	lcdSetPos@y,w,c
  1578                           
  1579                           ; Switch size 1, requested type "space"
  1580                           ; Number of cases is 4, Range of values is 0 to 3
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte           13     7 (average)
  1584                           ;	Chosen strategy is simple_byte
  1585  00120C  0A00               	xorlw	0	; case 0
  1586  00120E  B4D8               	btfsc	status,2,c
  1587  001210  D7EF               	goto	l813
  1588  001212  0A01               	xorlw	1	; case 1
  1589  001214  B4D8               	btfsc	status,2,c
  1590  001216  D7EF               	goto	l815
  1591  001218  0A03               	xorlw	3	; case 2
  1592  00121A  B4D8               	btfsc	status,2,c
  1593  00121C  D7EF               	goto	l817
  1594  00121E  0A01               	xorlw	1	; case 3
  1595  001220  B4D8               	btfsc	status,2,c
  1596  001222  D7EF               	goto	l819
  1597  001224                     l825:
  1598                           
  1599                           ;lcd.c: 132: p |= 0x80;
  1600  001224  8E08               	bsf	lcdSetPos@p,7,c
  1601                           
  1602                           ;lcd.c: 133: lcdWriteCmd(p);
  1603  001226  5008               	movf	lcdSetPos@p,w,c
  1604  001228  EC17  F009         	call	_lcdWriteCmd
  1605  00122C  0012               	return	
  1606  00122E                     __end_of_lcdSetPos:
  1607                           	opt stack 0
  1608                           tblptru	equ	0xFF8
  1609                           tblptrh	equ	0xFF7
  1610                           tblptrl	equ	0xFF6
  1611                           tablat	equ	0xFF5
  1612                           wreg	equ	0xFE8
  1613                           status	equ	0xFD8
  1614                           
  1615 ;; *************** function _lcdClear *****************
  1616 ;; Defined at:
  1617 ;;		line 115 in file "lcd.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;		None               void
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    3
  1638 ;; This function calls:
  1639 ;;		_lcdWriteCmd
  1640 ;; This function is called by:
  1641 ;;		_lcdClean
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text15
  1646  0013D6                     __ptext15:
  1647                           	opt stack 0
  1648  0013D6                     _lcdClear:
  1649                           	opt stack 24
  1650                           
  1651                           ;lcd.c: 117: lcdWriteCmd(0x01);
  1652                           
  1653                           ;incstack = 0
  1654  0013D6  0E01               	movlw	1
  1655  0013D8  EC17  F009         	call	_lcdWriteCmd
  1656  0013DC  0012               	return	
  1657  0013DE                     __end_of_lcdClear:
  1658                           	opt stack 0
  1659                           tblptru	equ	0xFF8
  1660                           tblptrh	equ	0xFF7
  1661                           tblptrl	equ	0xFF6
  1662                           tablat	equ	0xFF5
  1663                           wreg	equ	0xFE8
  1664                           status	equ	0xFD8
  1665                           
  1666 ;; *************** function _lcdWriteCmd *****************
  1667 ;; Defined at:
  1668 ;;		line 89 in file "lcd.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  n               1    wreg     unsigned char 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  n               1    5[COMRAM] unsigned char 
  1673 ;;  i               2    3[COMRAM] int 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1686 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1687 ;;Total ram usage:        4 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    2
  1690 ;; This function calls:
  1691 ;;		_writeByte
  1692 ;; This function is called by:
  1693 ;;		_lcdInit
  1694 ;;		_lcdClear
  1695 ;;		_lcdSetPos
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text16
  1700  00122E                     __ptext16:
  1701                           	opt stack 0
  1702  00122E                     _lcdWriteCmd:
  1703                           	opt stack 27
  1704                           
  1705                           ;incstack = 0
  1706                           ;lcdWriteCmd@n stored from wreg
  1707  00122E  CFE8 F006          	movff	wreg,lcdWriteCmd@n
  1708                           
  1709                           ;lcd.c: 92: (LATCbits.LATC0) = 0;
  1710  001232  908B               	bcf	3979,0,c	;volatile
  1711                           
  1712                           ;lcd.c: 94: writeByte(n);
  1713  001234  5006               	movf	lcdWriteCmd@n,w,c
  1714  001236  ECB8  F009         	call	_writeByte
  1715                           
  1716                           ;lcd.c: 98: if (!(n & 0xFC)) for(int i = 0; i < 100; i++) _delay((unsigned long)((16)*(1
      +                          2000000/4000000.0)));
  1717  00123A  C006  F003         	movff	lcdWriteCmd@n,??_lcdWriteCmd
  1718  00123E  0EFC               	movlw	252
  1719  001240  1603               	andwf	??_lcdWriteCmd,f,c
  1720  001242  A4D8               	btfss	status,2,c
  1721  001244  D012               	goto	l809
  1722  001246  0E00               	movlw	0
  1723  001248  6E05               	movwf	lcdWriteCmd@i+1,c
  1724  00124A  0E00               	movlw	0
  1725  00124C  6E04               	movwf	lcdWriteCmd@i,c
  1726  00124E  5005               	movf	lcdWriteCmd@i+1,w,c
  1727  001250  0A80               	xorlw	128
  1728  001252  0F80               	addlw	-128
  1729  001254  0E64               	movlw	100
  1730  001256  B4D8               	btfsc	status,2,c
  1731  001258  5C04               	subwf	lcdWriteCmd@i,w,c
  1732  00125A  B0D8               	btfsc	status,0,c
  1733  00125C  0012               	return	
  1734  00125E  0E10               	movlw	16
  1735  001260                     u507:
  1736  001260  2EE8               	decfsz	wreg,f,c
  1737  001262  D7FE               	goto	u507
  1738  001264  4A04               	infsnz	lcdWriteCmd@i,f,c
  1739  001266  2A05               	incf	lcdWriteCmd@i+1,f,c
  1740  001268  D7F2               	goto	L12
  1741  00126A                     l809:
  1742                           
  1743                           ;lcd.c: 99: else _delay((unsigned long)((43)*(12000000/4000000.0)));
  1744  00126A  0E2B               	movlw	43
  1745  00126C                     u517:
  1746  00126C  2EE8               	decfsz	wreg,f,c
  1747  00126E  D7FE               	goto	u517
  1748  001270  0012               	return	
  1749  001272                     __end_of_lcdWriteCmd:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           wreg	equ	0xFE8
  1756                           status	equ	0xFD8
  1757                           
  1758 ;; *************** function _writeByte *****************
  1759 ;; Defined at:
  1760 ;;		line 81 in file "lcd.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  n               1    wreg     unsigned char 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  n               1    1[COMRAM] unsigned char 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;		None               void
  1767 ;; Registers used:
  1768 ;;		wreg, status,2, status,0, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;Total ram usage:        1 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:    1
  1781 ;; This function calls:
  1782 ;;		_writeDigit
  1783 ;; This function is called by:
  1784 ;;		_lcdWriteCmd
  1785 ;;		_lcdWriteChar
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text17
  1790  001370                     __ptext17:
  1791                           	opt stack 0
  1792  001370                     _writeByte:
  1793                           	opt stack 28
  1794                           
  1795                           ;incstack = 0
  1796                           ;writeByte@n stored from wreg
  1797  001370  CFE8 F002          	movff	wreg,writeByte@n
  1798                           
  1799                           ;lcd.c: 84: writeDigit(n >> 4);
  1800  001374  3802               	swapf	writeByte@n,w,c
  1801  001376  0B0F               	andlw	15
  1802  001378  EC39  F009         	call	_writeDigit
  1803                           
  1804                           ;lcd.c: 86: writeDigit(n & 0x0F);
  1805  00137C  5002               	movf	writeByte@n,w,c
  1806  00137E  0B0F               	andlw	15
  1807  001380  EC39  F009         	call	_writeDigit
  1808  001384  0012               	return	
  1809  001386                     __end_of_writeByte:
  1810                           	opt stack 0
  1811                           tblptru	equ	0xFF8
  1812                           tblptrh	equ	0xFF7
  1813                           tblptrl	equ	0xFF6
  1814                           tablat	equ	0xFF5
  1815                           wreg	equ	0xFE8
  1816                           status	equ	0xFD8
  1817                           
  1818 ;; *************** function _writeDigit *****************
  1819 ;; Defined at:
  1820 ;;		line 66 in file "lcd.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  n               1    wreg     unsigned char 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  n               1    0[COMRAM] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;		None               void
  1827 ;; Registers used:
  1828 ;;		wreg
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;Total ram usage:        1 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_lcdInit
  1844 ;;		_writeByte
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text18
  1849  001272                     __ptext18:
  1850                           	opt stack 0
  1851  001272                     _writeDigit:
  1852                           	opt stack 28
  1853                           
  1854                           ;incstack = 0
  1855                           ;writeDigit@n stored from wreg
  1856  001272  CFE8 F001          	movff	wreg,writeDigit@n
  1857                           
  1858                           ;lcd.c: 69: (LATCbits.LATC1) = 1;
  1859  001276  828B               	bsf	3979,1,c	;volatile
  1860                           
  1861                           ;lcd.c: 70: _delay((unsigned long)((1)*(12000000/4000000.0)));
  1862  001278  F000               	nop	
  1863  00127A  D000               	nop2		;2 cycle nop
  1864                           
  1865                           ;lcd.c: 72: if (n & 0x01) (LATDbits.LATD0) = 1; else (LATDbits.LATD0) = 0;
  1866  00127C  A001               	btfss	writeDigit@n,0,c
  1867  00127E  D002               	goto	l56
  1868  001280  808C               	bsf	3980,0,c	;volatile
  1869  001282  D001               	goto	l779
  1870  001284                     l56:
  1871  001284  908C               	bcf	3980,0,c	;volatile
  1872  001286                     l779:
  1873                           
  1874                           ;lcd.c: 73: if (n & 0x02) (LATDbits.LATD1) = 1; else (LATDbits.LATD1) = 0;
  1875  001286  A201               	btfss	writeDigit@n,1,c
  1876  001288  D002               	goto	l58
  1877  00128A  828C               	bsf	3980,1,c	;volatile
  1878  00128C  D001               	goto	l783
  1879  00128E                     l58:
  1880  00128E  928C               	bcf	3980,1,c	;volatile
  1881  001290                     l783:
  1882                           
  1883                           ;lcd.c: 74: if (n & 0x04) (LATDbits.LATD2) = 1; else (LATDbits.LATD2) = 0;
  1884  001290  A401               	btfss	writeDigit@n,2,c
  1885  001292  D002               	goto	l60
  1886  001294  848C               	bsf	3980,2,c	;volatile
  1887  001296  D001               	goto	l787
  1888  001298                     l60:
  1889  001298  948C               	bcf	3980,2,c	;volatile
  1890  00129A                     l787:
  1891                           
  1892                           ;lcd.c: 75: if (n & 0x08) (LATDbits.LATD3) = 1; else (LATDbits.LATD3) = 0;
  1893  00129A  A601               	btfss	writeDigit@n,3,c
  1894  00129C  D002               	goto	l62
  1895  00129E  868C               	bsf	3980,3,c	;volatile
  1896  0012A0  D001               	goto	l63
  1897  0012A2                     l62:
  1898  0012A2  968C               	bcf	3980,3,c	;volatile
  1899  0012A4                     l63:
  1900                           
  1901                           ;lcd.c: 76: _delay((unsigned long)((2)*(12000000/4000000.0)));
  1902  0012A4  D000               	nop2		;2 cycle nop
  1903  0012A6  D000               	nop2		;2 cycle nop
  1904  0012A8  D000               	nop2		;2 cycle nop
  1905                           
  1906                           ;lcd.c: 78: (LATCbits.LATC1) = 0;
  1907  0012AA  928B               	bcf	3979,1,c	;volatile
  1908  0012AC  0012               	return	
  1909  0012AE                     __end_of_writeDigit:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           wreg	equ	0xFE8
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function _i2c_init *****************
  1919 ;; Defined at:
  1920 ;;		line 19 in file "masterI2C.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;		None               void
  1927 ;; Registers used:
  1928 ;;		wreg, status,2
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text19
  1948  001386                     __ptext19:
  1949                           	opt stack 0
  1950  001386                     _i2c_init:
  1951                           	opt stack 30
  1952                           
  1953                           ;masterI2C.c: 21: TRISBbits.TRISB4 = 1;
  1954                           
  1955                           ;incstack = 0
  1956  001386  8893               	bsf	3987,4,c	;volatile
  1957                           
  1958                           ;masterI2C.c: 22: TRISBbits.TRISB5 = 1;
  1959  001388  8A93               	bsf	3987,5,c	;volatile
  1960                           
  1961                           ;masterI2C.c: 26: SSPSTATbits.SMP = 0;
  1962  00138A  9EC7               	bcf	4039,7,c	;volatile
  1963                           
  1964                           ;masterI2C.c: 27: SSPCON1 = 0x28;
  1965  00138C  0E28               	movlw	40
  1966  00138E  6EC6               	movwf	4038,c	;volatile
  1967                           
  1968                           ;masterI2C.c: 28: SSPCON2 = 0x00;
  1969  001390  0E00               	movlw	0
  1970  001392  6EC5               	movwf	4037,c	;volatile
  1971                           
  1972                           ;masterI2C.c: 29: SSPADD = 7;
  1973  001394  0E07               	movlw	7
  1974  001396  6EC8               	movwf	4040,c	;volatile
  1975                           
  1976                           ;masterI2C.c: 31: PIR1bits.SSPIF=0;
  1977  001398  969E               	bcf	3998,3,c	;volatile
  1978  00139A  0012               	return	
  1979  00139C                     __end_of_i2c_init:
  1980                           	opt stack 0
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           wreg	equ	0xFE8
  1986                           status	equ	0xFD8
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           wreg	equ	0xFE8
  1992                           status	equ	0xFD8
  1993                           
  1994                           	psect	rparam
  1995  0000                     tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           wreg	equ	0xFE8
  2000                           status	equ	0xFD8


Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    lcdWriteStrC@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[9]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_lcdInit
    _sendByte->_i2c_start
    _sendByte->_i2c_write
    _readByte->_i2c_start
    _readByte->_i2c_write
    _i2c_write->_i2c_idle
    _i2c_start->_i2c_idle
    _i2c_read->_i2c_idle
    _lcdInit->_intro
    _intro->_lcdClean
    _lcdWriteStrC->_lcdWriteChar
    _lcdClean->_lcdSetPos
    _lcdWriteChar->_writeByte
    _lcdSetPos->_lcdWriteCmd
    _lcdClear->_lcdWriteCmd
    _lcdWriteCmd->_writeByte
    _writeByte->_writeDigit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10     5      5    3411
                                             24 COMRAM    10     5      5
                           _i2c_init
                            _lcdInit
                          _lcdSetPos
                       _lcdWriteChar
                           _readByte
                           _sendByte
 ---------------------------------------------------------------------------------
 (1) _sendByte                                             2     1      1     128
                                              2 COMRAM     2     1      1
                     _i2c_master_ack
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _readByte                                             2     2      0      75
                                              2 COMRAM     2     2      0
                     _i2c_master_ack
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      15
                                              1 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            1     1      0      15
                                              1 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_idle                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _i2c_master_ack                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              9     9      0    2334
                                             15 COMRAM     9     9      0
                              _intro
                        _lcdWriteCmd
                         _writeDigit
 ---------------------------------------------------------------------------------
 (2) _intro                                                3     3      0    2004
                                             12 COMRAM     3     3      0
                           _lcdClean
                          _lcdSetPos
                       _lcdWriteStrC
 ---------------------------------------------------------------------------------
 (3) _lcdWriteStrC                                         2     0      2     241
                                              3 COMRAM     2     0      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (3) _lcdClean                                             3     3      0    1069
                                              9 COMRAM     3     3      0
                           _lcdClear
                          _lcdSetPos
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (1) _lcdWriteChar                                         1     1      0     105
                                              2 COMRAM     1     1      0
                          _writeByte
 ---------------------------------------------------------------------------------
 (1) _lcdSetPos                                            3     2      1     664
                                              6 COMRAM     3     2      1
                        _lcdWriteCmd
 ---------------------------------------------------------------------------------
 (4) _lcdClear                                             0     0      0     150
                        _lcdWriteCmd
 ---------------------------------------------------------------------------------
 (2) _lcdWriteCmd                                          4     4      0     150
                                              2 COMRAM     4     4      0
                          _writeByte
 ---------------------------------------------------------------------------------
 (2) _writeByte                                            1     1      0      90
                                              1 COMRAM     1     1      0
                         _writeDigit
 ---------------------------------------------------------------------------------
 (3) _writeDigit                                           1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _lcdInit
     _intro
       _lcdClean
         _lcdClear
           _lcdWriteCmd
             _writeByte
               _writeDigit
         _lcdSetPos
           _lcdWriteCmd
             _writeByte
               _writeDigit
         _lcdWriteChar
           _writeByte
             _writeDigit
       _lcdSetPos
         _lcdWriteCmd
           _writeByte
             _writeDigit
       _lcdWriteStrC
         _lcdWriteChar
           _writeByte
             _writeDigit
     _lcdWriteCmd
       _writeByte
         _writeDigit
     _writeDigit
   _lcdSetPos
     _lcdWriteCmd
       _writeByte
         _writeDigit
   _lcdWriteChar
     _writeByte
       _writeDigit
   _readByte
     _i2c_master_ack
     _i2c_read
       _i2c_idle
     _i2c_start
       _i2c_idle
     _i2c_stop
     _i2c_write
       _i2c_idle
   _sendByte
     _i2c_master_ack
     _i2c_start
       _i2c_idle
     _i2c_stop
     _i2c_write
       _i2c_idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     22      22       1       35.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BIGRAM             EAF      0       0      35        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Fri Jan 23 00:50:37 2015

            _SSPSTATbits 000FC7                       l19 1180                       l60 1298  
                     l62 12A2                       l63 12A4                       l56 1284  
                     l58 128E             __CFG_CP0$OFF 000000             lcdWriteCmd@i 0004  
           lcdWriteCmd@n 0006              __CFG_OSC$HS 000000                      l140 1336  
                    l150 13D0                      l144 133E                      l161 1350  
                    l139 133C                      l172 13C6                      l166 136A  
                    l813 11F0                      l815 11F6                      l823 120A  
                    l911 11E4                      l809 126A                      l817 11FC  
                    l825 1224                      l819 1202                      l843 12C8  
                    l783 1290                      l839 12B0                      l873 10AA  
                    l787 129A                      l779 1286                      l859 1050  
                    l971 0F9C                      l891 13B0                      l887 10EC  
                    l983 0FC6                      l959 0F72                      l995 0FF0  
                    u407 0F3E                      u255 1366                      u256 1368  
                    u417 0F68                      u507 1260                      u427 0F92  
                    u517 126C                      u437 0FBC                      u447 0FE6  
                    u457 11D4                      u467 1040                      u387 1144  
                    u477 109A                      u397 1170                      u487 10DC  
                    u497 13AA                      wreg 000FE8             __CFG_IESO$ON 000000  
         ??_lcdWriteChar 0003            lcdWriteChar@n 0003           ??_lcdWriteStrC 0006  
     __CFG_WPFP$PAGE_127 000000                     STR_1 0F01                     STR_2 0F12  
          lcdWriteStrC@s 0004            __CFG_FCMEN$ON 000000          readByte@address 0003  
                   _main 10F2                     start 0000            __CFG_PLLDIV$1 000000  
                  ?_main 0019          __end_of_lcdInit 100E           _i2c_master_ack 135A  
                  _intro 1182                    main@i 0021                    tablat 000FF5  
                  status 000FD8  __CFG_DSWDTOSC$INTOSCREF 000000          __initialization 13DE  
           __end_of_main 1182         __end_of_i2c_idle 13C0         __end_of_i2c_init 139C  
       __end_of_i2c_read 13CE         __end_of_i2c_stop 13D6                   ??_main 001E  
          __activetblptr 000003   __end_of_i2c_master_ack 1370                   ?_intro 0001  
                 _ANCON0 000F48                   _ANCON1 000F49           __CFG_WDTEN$OFF 000000  
                 _SSPADD 000FC8           __CFG_WPCFG$OFF 000000                   _SSPBUF 000FC9  
     __size_of_i2c_start 001C       __size_of_i2c_write 0016           __CFG_WPDIS$OFF 000000  
       __end_of_lcdClean 10F2         __end_of_lcdClear 13DE     __size_of_lcdWriteCmd 0044  
         __CFG_XINST$OFF 000000     __end_of_lcdWriteChar 13B0     __end_of_lcdWriteStrC 12E0  
       __end_of_readByte 1306          __CFG_CLKOEC$OFF 000000                ??_lcdInit 0010  
       __end_of_sendByte 1328                   intro@i 000E          ?_i2c_master_ack 0001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8          __CFG_DSBOREN$ON 000000     __CFG_LS48MHZ$SYS48X8 000000  
             __accesstop 0060  __end_of__initialization 13DE     __CFG_WPEND$PAGE_WPFP 000000  
         __pcstackCOMRAM 0001            __end_of_intro 11EA          __CFG_DSWDTPS$G2 000000  
      __end_of_i2c_start 1344        __end_of_i2c_write 135A       __size_of_lcdSetPos 0044  
                ??_intro 000D                ?_i2c_idle 0001                ?_i2c_init 0001  
              ?_i2c_read 0001                ?_i2c_stop 0001          sendByte@address 0003  
              ?_lcdClean 0001                ?_lcdClear 0001                  _SSPCON1 000FC6  
                _SSPCON2 000FC5               ??_i2c_idle 0001             readByte@data 0004  
             ??_i2c_init 0001               ??_i2c_read 0002               ??_i2c_stop 0001  
              ?_readByte 0001       __size_of_writeByte 0016    __size_of_lcdWriteChar 0014  
              ?_sendByte 0003        __end_of_lcdSetPos 122E    __size_of_lcdWriteStrC 0032  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0F00  
        __CFG_STVREN$OFF 000000                  __pcinit 13DE                  __ramtop 0F00  
                _lcdInit 0F1C                  __ptext0 10F2                  __ptext1 1306  
                __ptext2 12E0                  __ptext3 1344                  __ptext4 13CE  
                __ptext5 1328                  __ptext6 13C0                  __ptext7 13B0  
                __ptext8 135A                  __ptext9 0F1C               ??_lcdClean 000A  
             ??_lcdClear 0007             _lcdWriteChar 139C     end_of_initialization 13DE  
           _lcdWriteStrC 12AE               ??_readByte 0003               ??_sendByte 0004  
       ??_i2c_master_ack 0001               lcdSetPos@p 0008               lcdSetPos@x 0009  
             lcdSetPos@y 0007        __end_of_writeByte 1386            i2c_write@data 0002  
       __CFG_CPUDIV$OSC1 000000                _TRISBbits 000F93                _TRISCbits 000F94  
              _TRISDbits 000F95        __CFG_SOSCSEL$HIGH 000000            ??_lcdWriteCmd 0003  
       __CFG_IOL1WAY$OFF 000000      __CFG_MSSP7B_EN$MSK7 000000               _writeDigit 1272  
       __CFG_DSWDTEN$OFF 000000      start_initialization 13DE                _i2c_start 1328  
              _i2c_write 1344        __size_of_i2c_idle 0010        __size_of_i2c_init 0016  
      __size_of_i2c_read 000E        __size_of_i2c_stop 0008      __end_of_lcdWriteCmd 1272  
      __CFG_ADCSEL$BIT12 000000               ?_i2c_start 0001      __end_of__stringdata 0F1B  
             ?_i2c_write 0001        __size_of_lcdClean 00E4        __size_of_lcdClear 0008  
      __size_of_readByte 0026             sendByte@data 0004        __size_of_sendByte 0022  
            ?_writeDigit 0001                _lcdSetPos 11EA                 ?_lcdInit 0001  
            __smallconst 0F00     __CFG_RTCOSC$T1OSCREF 000000           __size_of_intro 0068  
               _LATCbits 000F8B              _lcdWriteCmd 122E                 _LATDbits 000F8C  
              lcdClean@i 000B   i2c_master_ack@ack_type 0001                 _PIR1bits 000F9E  
            writeDigit@n 0001         __CFG_WDTPS$32768 000000               ?_lcdSetPos 0007  
            __stringdata 0F01                main@count 0020                main@value 001F  
      __CFG_CFGPLLEN$OFF 000000              ??_i2c_start 0002              ??_i2c_write 0002  
              _writeByte 1370      __size_of_writeDigit 003C                 _i2c_idle 13B0  
               _i2c_init 1386                 _i2c_read 13C0                 _i2c_stop 13CE  
               __Hrparam 0000                 __Lrparam 0000         __size_of_lcdInit 00F2  
               _lcdClean 100E                 _lcdClear 13D6                 __ptext10 1182  
               __ptext11 12AE                 __ptext12 100E                 __ptext13 139C  
               __ptext14 11EA                 __ptext15 13D6                 __ptext16 122E  
               __ptext17 1370                 __ptext18 1272                 __ptext19 1386  
             ?_writeByte 0001                 _readByte 12E0            __size_of_main 0090  
               _sendByte 1306                 lcdInit@i 0011             lcdInit@i_294 0013  
           lcdInit@i_295 0015             lcdInit@i_296 0017               writeByte@n 0002  
            ??_lcdSetPos 0008                 main@argc 0019                 main@argv 001B  
__size_of_i2c_master_ack 0016           i2c_start@stype 0002             ??_writeDigit 0001  
            _SSPCON1bits 000FC6              _SSPCON2bits 000FC5              ??_writeByte 0002  
          ?_lcdWriteChar 0001            ?_lcdWriteStrC 0004       __end_of_writeDigit 12AE  
           ?_lcdWriteCmd 0001  
