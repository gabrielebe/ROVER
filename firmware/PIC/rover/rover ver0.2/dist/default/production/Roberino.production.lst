

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Fri Oct 10 11:27:40 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	text44,global,reloc=2,class=CODE,delta=1
    55                           	psect	text45,global,reloc=2,class=CODE,delta=1
    56                           	psect	text46,global,reloc=2,class=CODE,delta=1
    57                           	psect	text47,global,reloc=2,class=CODE,delta=1
    58                           	psect	text48,global,reloc=2,class=CODE,delta=1
    59                           	psect	text49,global,reloc=2,class=CODE,delta=1
    60                           	psect	text50,global,reloc=2,class=CODE,delta=1
    61                           	psect	text51,global,reloc=2,class=CODE,delta=1
    62                           	psect	text52,global,reloc=2,class=CODE,delta=1
    63                           	psect	text53,global,reloc=2,class=CODE,delta=1
    64                           	psect	text54,global,reloc=2,class=CODE,delta=1
    65                           	psect	text55,global,reloc=2,class=CODE,delta=1
    66                           	psect	text56,global,reloc=2,class=CODE,delta=1
    67                           	psect	text57,global,reloc=2,class=CODE,delta=1
    68                           	psect	text58,global,reloc=2,class=CODE,delta=1
    69                           	psect	text59,global,reloc=2,class=CODE,delta=1
    70                           	psect	text60,global,reloc=2,class=CODE,delta=1
    71                           	psect	text61,global,reloc=2,class=CODE,delta=1
    72                           	psect	text62,global,reloc=2,class=CODE,delta=1
    73                           	psect	text63,global,reloc=2,class=CODE,delta=1
    74                           	psect	text64,global,reloc=2,class=CODE,delta=1
    75                           	psect	text65,global,reloc=2,class=CODE,delta=1
    76                           	psect	text66,global,reloc=2,class=CODE,delta=1
    77                           	psect	text67,global,reloc=2,class=CODE,delta=1
    78                           	psect	text68,global,reloc=2,class=CODE,delta=1
    79                           	psect	text69,global,reloc=2,class=CODE,delta=1
    80                           	psect	text70,global,reloc=2,class=CODE,delta=1
    81                           	psect	text71,global,reloc=2,class=CODE,delta=1
    82                           	psect	text72,global,reloc=2,class=CODE,delta=1
    83                           	psect	text73,global,reloc=2,class=CODE,delta=1
    84                           	psect	text74,global,reloc=2,class=CODE,delta=1
    85                           	psect	text75,global,reloc=2,class=CODE,delta=1
    86                           	psect	text76,global,reloc=2,class=CODE,delta=1
    87                           	psect	text77,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           	psect	smallconst
    92  000F00                     __psmallconst:
    93                           	opt stack 0
    94  000F00  00                 	db	0
    95  000F01                     _dpowers:
    96                           	opt stack 0
    97  000F01  0001               	dw	1
    98  000F03  0000               	dw	0
    99  000F05  000A               	dw	10
   100  000F07  0000               	dw	0
   101  000F09  0064               	dw	100
   102  000F0B  0000               	dw	0
   103  000F0D  03E8               	dw	1000
   104  000F0F  0000               	dw	0
   105  000F11  2710               	dw	10000
   106  000F13  0000               	dw	0
   107  000F15  86A0               	dw	34464
   108  000F17  0001               	dw	1
   109  000F19  4240               	dw	16960
   110  000F1B  000F               	dw	15
   111  000F1D  9680               	dw	38528
   112  000F1F  0098               	dw	152
   113  000F21  E100               	dw	57600
   114  000F23  05F5               	dw	1525
   115  000F25  CA00               	dw	51712
   116  000F27  3B9A               	dw	15258
   117  000F29                     __end_of_dpowers:
   118                           	opt stack 0
   119  000F29                     __npowers_:
   120                           	opt stack 0
   121  000F29  00                 	db	0
   122  000F2A  80                 	db	128
   123  000F2B  3F                 	db	63
   124  000F2C  CD                 	db	205
   125  000F2D  CC                 	db	204
   126  000F2E  3D                 	db	61
   127  000F2F  D7                 	db	215
   128  000F30  23                 	db	35
   129  000F31  3C                 	db	60
   130  000F32  12                 	db	18
   131  000F33  83                 	db	131
   132  000F34  3A                 	db	58
   133  000F35  B7                 	db	183
   134  000F36  D1                 	db	209
   135  000F37  38                 	db	56
   136  000F38  C6                 	db	198
   137  000F39  27                 	db	39
   138  000F3A  37                 	db	55
   139  000F3B  38                 	db	56
   140  000F3C  86                 	db	134
   141  000F3D  35                 	db	53
   142  000F3E  C0                 	db	192
   143  000F3F  D6                 	db	214
   144  000F40  33                 	db	51
   145  000F41  CC                 	db	204
   146  000F42  2B                 	db	43
   147  000F43  32                 	db	50
   148  000F44  70                 	db	112
   149  000F45  89                 	db	137
   150  000F46  30                 	db	48
   151  000F47  E7                 	db	231
   152  000F48  DB                 	db	219
   153  000F49  2E                 	db	46
   154  000F4A  E5                 	db	229
   155  000F4B  3C                 	db	60
   156  000F4C  1E                 	db	30
   157  000F4D  42                 	db	66
   158  000F4E  A2                 	db	162
   159  000F4F  0D                 	db	13
   160  000F50                     __end_of__npowers_:
   161                           	opt stack 0
   162  000F50                     __powers_:
   163                           	opt stack 0
   164  000F50  00                 	db	0
   165  000F51  80                 	db	128
   166  000F52  3F                 	db	63
   167  000F53  00                 	db	0
   168  000F54  20                 	db	32
   169  000F55  41                 	db	65
   170  000F56  00                 	db	0
   171  000F57  C8                 	db	200
   172  000F58  42                 	db	66
   173  000F59  00                 	db	0
   174  000F5A  7A                 	db	122
   175  000F5B  44                 	db	68
   176  000F5C  40                 	db	64
   177  000F5D  1C                 	db	28
   178  000F5E  46                 	db	70
   179  000F5F  50                 	db	80
   180  000F60  C3                 	db	195
   181  000F61  47                 	db	71
   182  000F62  24                 	db	36
   183  000F63  74                 	db	116
   184  000F64  49                 	db	73
   185  000F65  97                 	db	151
   186  000F66  18                 	db	24
   187  000F67  4B                 	db	75
   188  000F68  BC                 	db	188
   189  000F69  BE                 	db	190
   190  000F6A  4C                 	db	76
   191  000F6B  6B                 	db	107
   192  000F6C  6E                 	db	110
   193  000F6D  4E                 	db	78
   194  000F6E  03                 	db	3
   195  000F6F  15                 	db	21
   196  000F70  50                 	db	80
   197  000F71  79                 	db	121
   198  000F72  AD                 	db	173
   199  000F73  60                 	db	96
   200  000F74  F3                 	db	243
   201  000F75  49                 	db	73
   202  000F76  71                 	db	113
   203  000F77                     __end_of__powers_:
   204                           	opt stack 0
   205  0000                     _ADCON0bits	set	4034
   206  0000                     _ADCON1bits	set	4033
   207  0000                     _ADRESH	set	4036
   208  0000                     _ADRESL	set	4035
   209  0000                     _ANCON0	set	3912
   210  0000                     _ANCON1	set	3913
   211  0000                     _INTCON3bits	set	4080
   212  0000                     _INTCONbits	set	4082
   213  0000                     _LATBbits	set	3978
   214  0000                     _LATDbits	set	3980
   215  0000                     _LATEbits	set	3981
   216  0000                     _PORTBbits	set	3969
   217  0000                     _T1CONbits	set	4045
   218  0000                     _TMR1H	set	4047
   219  0000                     _TMR1L	set	4046
   220  0000                     _TRISA	set	3986
   221  0000                     _TRISB	set	3987
   222  0000                     _TRISD	set	3989
   223  0000                     _TRISDbits	set	3989
   224  0000                     _TRISEbits	set	3990
   225  0000                     _GO_DONE	set	32273
   226  0000                     _RB2	set	31754
   227  000F77                     __stringdata:
   228                           	opt stack 0
   229  000F77                     STR_1:
   230  000F77  44                 	db	68	;'D'
   231  000F78  69                 	db	105	;'i'
   232  000F79  73                 	db	115	;'s'
   233  000F7A  74                 	db	116	;'t'
   234  000F7B  61                 	db	97	;'a'
   235  000F7C  6E                 	db	110	;'n'
   236  000F7D  63                 	db	99	;'c'
   237  000F7E  65                 	db	101	;'e'
   238  000F7F  3A                 	db	58	;':'
   239  000F80  20                 	db	32
   240  000F81  5B                 	db	91	;'['
   241  000F82  63                 	db	99	;'c'
   242  000F83  6D                 	db	109	;'m'
   243  000F84  2F                 	db	47
   244  000F85  75                 	db	117	;'u'
   245  000F86  53                 	db	83	;'S'
   246  000F87  5D                 	db	93	;']'
   247  000F88  00                 	db	0
   248  000F89                     STR_5:
   249  000F89  41                 	db	65	;'A'
   250  000F8A  63                 	db	99	;'c'
   251  000F8B  6C                 	db	108	;'l'
   252  000F8C  6D                 	db	109	;'m'
   253  000F8D  74                 	db	116	;'t'
   254  000F8E  72                 	db	114	;'r'
   255  000F8F  20                 	db	32
   256  000F90  76                 	db	118	;'v'
   257  000F91  61                 	db	97	;'a'
   258  000F92  6C                 	db	108	;'l'
   259  000F93  75                 	db	117	;'u'
   260  000F94  65                 	db	101	;'e'
   261  000F95  73                 	db	115	;'s'
   262  000F96  3A                 	db	58	;':'
   263  000F97  00                 	db	0
   264  000F98                     STR_10:
   265  000F98  53                 	db	83	;'S'
   266  000F99  69                 	db	105	;'i'
   267  000F9A  6E                 	db	110	;'n'
   268  000F9B  67                 	db	103	;'g'
   269  000F9C  68                 	db	104	;'h'
   270  000F9D  20                 	db	32
   271  000F9E  42                 	db	66	;'B'
   272  000F9F  65                 	db	101	;'e'
   273  000FA0  20                 	db	32
   274  000FA1  52                 	db	82	;'R'
   275  000FA2  6F                 	db	111	;'o'
   276  000FA3  73                 	db	115	;'s'
   277  000FA4  61                 	db	97	;'a'
   278  000FA5  00                 	db	0
   279  000FA6  74                 	db	116	;'t'
   280  000FA7  65                 	db	101	;'e'
   281  000FA8  6D                 	db	109	;'m'
   282  000FA9  70                 	db	112	;'p'
   283  000FAA  3A                 	db	58	;':'
   284  000FAB  20                 	db	32
   285  000FAC  25                 	db	37
   286  000FAD  31                 	db	49	;'1'
   287  000FAE  2E                 	db	46
   288  000FAF  33                 	db	51	;'3'
   289  000FB0  66                 	db	102	;'f'
   290  000FB1  00                 	db	0
   291  000FB2  6C                 	db	108	;'l'
   292  000FB3  69                 	db	105	;'i'
   293  000FB4  67                 	db	103	;'g'
   294  000FB5  68                 	db	104	;'h'
   295  000FB6  74                 	db	116	;'t'
   296  000FB7  3A                 	db	58	;':'
   297  000FB8  20                 	db	32
   298  000FB9  25                 	db	37
   299  000FBA  64                 	db	100	;'d'
   300  000FBB  00                 	db	0
   301  000FBC                     STR_9:
   302  000FBC  52                 	db	82	;'R'
   303  000FBD  6F                 	db	111	;'o'
   304  000FBE  62                 	db	98	;'b'
   305  000FBF  65                 	db	101	;'e'
   306  000FC0  72                 	db	114	;'r'
   307  000FC1  69                 	db	105	;'i'
   308  000FC2  6E                 	db	110	;'n'
   309  000FC3  6F                 	db	111	;'o'
   310  000FC4  00                 	db	0
   311  000FC5                     STR_6:
   312  000FC5  25                 	db	37
   313  000FC6  31                 	db	49	;'1'
   314  000FC7  2E                 	db	46
   315  000FC8  32                 	db	50	;'2'
   316  000FC9  66                 	db	102	;'f'
   317  000FCA  00                 	db	0
   318  000FCB                     STR_2:
   319  000FCB  25                 	db	37
   320  000FCC  33                 	db	51	;'3'
   321  000FCD  2E                 	db	46
   322  000FCE  33                 	db	51	;'3'
   323  000FCF  66                 	db	102	;'f'
   324  000FD0  00                 	db	0
   325  000FD1                     __end_of__stringdata:
   326                           	opt stack 0
   327                           
   328                           ; #config settings
   329  000FD1  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           	psect	cinit
   332  00707E                     __pcinit:
   333                           	opt stack 0
   334  00707E                     start_initialization:
   335                           	opt stack 0
   336  00707E                     __initialization:
   337                           	opt stack 0
   338  00707E                     end_of_initialization:
   339                           	opt stack 0
   340  00707E                     __end_of__initialization:
   341                           	opt stack 0
   342  00707E  0100               	movlb	0
   343  007080  EFC3  F022         	goto	_main	;jump to C main() function
   344                           
   345                           	psect	cstackBANK1
   346  000100                     __pcstackBANK1:
   347                           	opt stack 0
   348  000100                     ?___ftadd:
   349                           	opt stack 0
   350  000100                     ?_fround:
   351                           	opt stack 0
   352  000100                     ?_scale:
   353                           	opt stack 0
   354  000100                     ___asftmul@f1p:
   355                           	opt stack 0
   356  000100                     ___ftadd@f1:
   357                           	opt stack 0
   358                           
   359                           ; 3 bytes @ 0x0
   360  000100                     	ds	2
   361  000102                     ___asftmul@f2:
   362                           	opt stack 0
   363                           
   364                           ; 3 bytes @ 0x2
   365  000102                     	ds	1
   366  000103                     ___ftadd@f2:
   367                           	opt stack 0
   368  000103                     _fround$1691:
   369                           	opt stack 0
   370  000103                     _scale$1692:
   371                           	opt stack 0
   372                           
   373                           ; 3 bytes @ 0x3
   374  000103                     	ds	3
   375  000106                     ??___ftadd:
   376  000106                     scale@scl:
   377                           	opt stack 0
   378  000106                     _fround$1690:
   379                           	opt stack 0
   380                           
   381                           ; 3 bytes @ 0x6
   382  000106                     	ds	1
   383  000107                     ?___fttol:
   384                           	opt stack 0
   385  000107                     ___fttol@f1:
   386                           	opt stack 0
   387                           
   388                           ; 3 bytes @ 0x7
   389  000107                     	ds	2
   390  000109                     fround@prec:
   391                           	opt stack 0
   392  000109                     ___ftadd@sign:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x9
   396  000109                     	ds	1
   397  00010A                     ___ftadd@exp2:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0xA
   401  00010A                     	ds	1
   402  00010B                     ??___fttol:
   403  00010B                     ___ftadd@exp1:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0xB
   407  00010B                     	ds	1
   408  00010C                     ?___ftdiv:
   409                           	opt stack 0
   410  00010C                     ?___ftsub:
   411                           	opt stack 0
   412  00010C                     ___asftadd@f1p:
   413                           	opt stack 0
   414  00010C                     ___ftdiv@f1:
   415                           	opt stack 0
   416  00010C                     ___ftsub@f1:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0xC
   420  00010C                     	ds	2
   421  00010E                     ___asftadd@f2:
   422                           	opt stack 0
   423                           
   424                           ; 3 bytes @ 0xE
   425  00010E                     	ds	1
   426  00010F                     ___ftdiv@f2:
   427                           	opt stack 0
   428  00010F                     ___ftsub@f2:
   429                           	opt stack 0
   430                           
   431                           ; 3 bytes @ 0xF
   432  00010F                     	ds	1
   433  000110                     ___fttol@sign1:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x10
   437  000110                     	ds	1
   438  000111                     ___fttol@lval:
   439                           	opt stack 0
   440                           
   441                           ; 4 bytes @ 0x11
   442  000111                     	ds	1
   443  000112                     ??___ftdiv:
   444  000112                     ___asftsub@f1p:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x12
   448  000112                     	ds	2
   449  000114                     ___asftsub@f2:
   450                           	opt stack 0
   451                           
   452                           ; 3 bytes @ 0x14
   453  000114                     	ds	1
   454  000115                     ___ftdiv@cntr:
   455                           	opt stack 0
   456  000115                     ___fttol@exp1:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x15
   460  000115                     	ds	1
   461  000116                     ___ftdiv@f3:
   462                           	opt stack 0
   463                           
   464                           ; 3 bytes @ 0x16
   465  000116                     	ds	3
   466  000119                     ___ftdiv@exp:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x19
   470  000119                     	ds	1
   471  00011A                     ___ftdiv@sign:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x1A
   475  00011A                     	ds	1
   476  00011B                     ?_readTempF:
   477                           	opt stack 0
   478                           
   479                           ; 3 bytes @ 0x1B
   480  00011B                     	ds	3
   481  00011E                     readTempF@temp:
   482                           	opt stack 0
   483                           
   484                           ; 3 bytes @ 0x1E
   485  00011E                     	ds	3
   486  000121                     readTempF@i:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x21
   490  000121                     	ds	2
   491  000123                     readTempF@j:
   492                           	opt stack 0
   493                           
   494                           ; 3 bytes @ 0x23
   495  000123                     	ds	3
   496  000126                     ?_readDistance:
   497                           	opt stack 0
   498                           
   499                           ; 3 bytes @ 0x26
   500  000126                     	ds	3
   501  000129                     ??_readDistance:
   502                           
   503                           ; 0 bytes @ 0x29
   504  000129                     	ds	4
   505  00012D                     _readDistance$1687:
   506                           	opt stack 0
   507                           
   508                           ; 3 bytes @ 0x2D
   509  00012D                     	ds	3
   510  000130                     _readDistance$1688:
   511                           	opt stack 0
   512                           
   513                           ; 3 bytes @ 0x30
   514  000130                     	ds	3
   515  000133                     _readDistance$1689:
   516                           	opt stack 0
   517                           
   518                           ; 3 bytes @ 0x33
   519  000133                     	ds	3
   520  000136                     readDistance@a:
   521                           	opt stack 0
   522                           
   523                           ; 3 bytes @ 0x36
   524  000136                     	ds	3
   525  000139                     ?_sprintf:
   526                           	opt stack 0
   527  000139                     sprintf@sp:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x39
   531  000139                     	ds	2
   532  00013B                     sprintf@f:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x3B
   536  00013B                     	ds	5
   537  000140                     ??_sprintf:
   538                           
   539                           ; 0 bytes @ 0x40
   540  000140                     	ds	6
   541  000146                     _sprintf$1693:
   542                           	opt stack 0
   543                           
   544                           ; 3 bytes @ 0x46
   545  000146                     	ds	3
   546  000149                     _sprintf$1054:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x49
   550  000149                     	ds	4
   551  00014D                     sprintf@vd:
   552                           	opt stack 0
   553                           
   554                           ; 4 bytes @ 0x4D
   555  00014D                     	ds	4
   556  000151                     sprintf@vd_1056:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x51
   560  000151                     	ds	4
   561  000155                     sprintf@ap:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x55
   565  000155                     	ds	2
   566  000157                     sprintf@integ:
   567                           	opt stack 0
   568                           
   569                           ; 3 bytes @ 0x57
   570  000157                     	ds	3
   571  00015A                     sprintf@flag:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x5A
   575  00015A                     	ds	2
   576  00015C                     sprintf@width:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x5C
   580  00015C                     	ds	2
   581  00015E                     sprintf@_val:
   582                           	opt stack 0
   583                           
   584                           ; 5 bytes @ 0x5E
   585  00015E                     	ds	5
   586  000163                     sprintf@exp:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x63
   590  000163                     	ds	2
   591  000165                     sprintf@fval:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x65
   595  000165                     	ds	3
   596  000168                     sprintf@prec:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x68
   600  000168                     	ds	2
   601  00016A                     sprintf@c:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x6A
   605  00016A                     	ds	1
   606  00016B                     showDistance@buffer:
   607                           	opt stack 0
   608                           
   609                           ; 10 bytes @ 0x6B
   610  00016B                     	ds	10
   611  000175                     
   612                           ; 2 bytes @ 0x75
   613  000175                     	ds	2
   614  000177                     
   615                           ; 3 bytes @ 0x77
   616  000177                     	ds	3
   617  00017A                     ??_main:
   618                           
   619                           ; 0 bytes @ 0x7A
   620  00017A                     	ds	1
   621  00017B                     main@i:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x7B
   625  00017B                     	ds	2
   626                           
   627                           	psect	cstackBANK0
   628  000060                     __pcstackBANK0:
   629                           	opt stack 0
   630  000060                     i2_sprintf$2286:
   631                           	opt stack 0
   632                           
   633                           ; 3 bytes @ 0x0
   634  000060                     	ds	3
   635  000063                     i2_sprintf$1054:
   636                           	opt stack 0
   637                           
   638                           ; 4 bytes @ 0x3
   639  000063                     	ds	4
   640  000067                     i2sprintf@vd:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x7
   644  000067                     	ds	4
   645  00006B                     i2sprintf@vd_1056:
   646                           	opt stack 0
   647                           
   648                           ; 4 bytes @ 0xB
   649  00006B                     	ds	4
   650  00006F                     i2sprintf@ap:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0xF
   654  00006F                     	ds	2
   655  000071                     i2sprintf@integ:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x11
   659  000071                     	ds	3
   660  000074                     i2sprintf@flag:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x14
   664  000074                     	ds	2
   665  000076                     i2sprintf@width:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x16
   669  000076                     	ds	2
   670  000078                     i2sprintf@_val:
   671                           	opt stack 0
   672                           
   673                           ; 5 bytes @ 0x18
   674  000078                     	ds	5
   675  00007D                     i2sprintf@exp:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x1D
   679  00007D                     	ds	2
   680  00007F                     i2sprintf@fval:
   681                           	opt stack 0
   682                           
   683                           ; 3 bytes @ 0x1F
   684  00007F                     	ds	3
   685  000082                     i2sprintf@prec:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x22
   689  000082                     	ds	2
   690  000084                     i2sprintf@c:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x24
   694  000084                     	ds	1
   695  000085                     showAccelerometerVal@buffer:
   696                           	opt stack 0
   697                           
   698                           ; 10 bytes @ 0x25
   699  000085                     	ds	10
   700  00008F                     ??_ISR:
   701                           
   702                           ; 0 bytes @ 0x2F
   703  00008F                     	ds	14
   704  00009D                     ??_isdigit:
   705  00009D                     ?_read:
   706                           	opt stack 0
   707  00009D                     ?___awmod:
   708                           	opt stack 0
   709  00009D                     ?___ftpack:
   710                           	opt stack 0
   711  00009D                     ?___ftneg:
   712                           	opt stack 0
   713  00009D                     ?__tdiv_to_l_:
   714                           	opt stack 0
   715  00009D                     ?__div_to_l_:
   716                           	opt stack 0
   717  00009D                     ?___lldiv:
   718                           	opt stack 0
   719  00009D                     writeDigit@n:
   720                           	opt stack 0
   721  00009D                     read@channel:
   722                           	opt stack 0
   723  00009D                     setServo@degree:
   724                           	opt stack 0
   725  00009D                     ___awmod@dividend:
   726                           	opt stack 0
   727  00009D                     __div_to_l_@f1:
   728                           	opt stack 0
   729  00009D                     ___ftpack@arg:
   730                           	opt stack 0
   731  00009D                     __tdiv_to_l_@f1:
   732                           	opt stack 0
   733  00009D                     ___ftge@ff1:
   734                           	opt stack 0
   735  00009D                     ___ftneg@f1:
   736                           	opt stack 0
   737  00009D                     ___lldiv@dividend:
   738                           	opt stack 0
   739                           
   740                           ; 4 bytes @ 0x3D
   741  00009D                     	ds	1
   742  00009E                     writeByte@n:
   743                           	opt stack 0
   744  00009E                     _isdigit$1329:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x3E
   748  00009E                     	ds	1
   749  00009F                     ??_setServo:
   750  00009F                     ??_read:
   751  00009F                     ??_lcdWriteCmd:
   752  00009F                     lcdWriteChar@n:
   753                           	opt stack 0
   754  00009F                     isdigit@c:
   755                           	opt stack 0
   756  00009F                     ___awmod@divisor:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x3F
   760  00009F                     	ds	1
   761  0000A0                     lcdWriteCmd@n:
   762                           	opt stack 0
   763  0000A0                     ___ftpack@exp:
   764                           	opt stack 0
   765  0000A0                     lcdWriteStrC@s:
   766                           	opt stack 0
   767  0000A0                     __div_to_l_@f2:
   768                           	opt stack 0
   769  0000A0                     __tdiv_to_l_@f2:
   770                           	opt stack 0
   771  0000A0                     ___ftge@ff2:
   772                           	opt stack 0
   773                           
   774                           ; 3 bytes @ 0x40
   775  0000A0                     	ds	1
   776  0000A1                     ??___awmod:
   777  0000A1                     ___ftpack@sign:
   778                           	opt stack 0
   779  0000A1                     read@value:
   780                           	opt stack 0
   781  0000A1                     lcdWriteCmd@i:
   782                           	opt stack 0
   783  0000A1                     ___lldiv@divisor:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x41
   787  0000A1                     	ds	1
   788  0000A2                     ??___ftpack:
   789  0000A2                     ___awmod@counter:
   790                           	opt stack 0
   791  0000A2                     setServo@i_722:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x42
   795  0000A2                     	ds	1
   796  0000A3                     ??__tdiv_to_l_:
   797  0000A3                     ??__div_to_l_:
   798  0000A3                     ??___ftge:
   799  0000A3                     lcdSetPos@y:
   800                           	opt stack 0
   801  0000A3                     ___awmod@sign:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x43
   805  0000A3                     	ds	1
   806  0000A4                     ?___awdiv:
   807                           	opt stack 0
   808  0000A4                     lcdSetPos@p:
   809                           	opt stack 0
   810  0000A4                     setServo@i_723:
   811                           	opt stack 0
   812  0000A4                     ___awdiv@dividend:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x44
   816  0000A4                     	ds	1
   817  0000A5                     ??___lldiv:
   818  0000A5                     ?___awtoft:
   819                           	opt stack 0
   820  0000A5                     ?___lltoft:
   821                           	opt stack 0
   822  0000A5                     lcdSetPos@x:
   823                           	opt stack 0
   824  0000A5                     ___awtoft@c:
   825                           	opt stack 0
   826  0000A5                     ___lltoft@c:
   827                           	opt stack 0
   828                           
   829                           ; 4 bytes @ 0x45
   830  0000A5                     	ds	1
   831  0000A6                     ??_lcdClean:
   832  0000A6                     setServo@j:
   833                           	opt stack 0
   834  0000A6                     ___awdiv@divisor:
   835                           	opt stack 0
   836  0000A6                     __tdiv_to_l_@quot:
   837                           	opt stack 0
   838  0000A6                     ___lldiv@quotient:
   839                           	opt stack 0
   840                           
   841                           ; 4 bytes @ 0x46
   842  0000A6                     	ds	1
   843  0000A7                     lcdClean@i:
   844                           	opt stack 0
   845  0000A7                     __div_to_l_@quot:
   846                           	opt stack 0
   847                           
   848                           ; 4 bytes @ 0x47
   849  0000A7                     	ds	1
   850  0000A8                     ??___awdiv:
   851  0000A8                     ??___awtoft:
   852  0000A8                     setServo@i:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x48
   856  0000A8                     	ds	1
   857  0000A9                     ??_intro:
   858  0000A9                     ??___lltoft:
   859  0000A9                     ___awdiv@counter:
   860                           	opt stack 0
   861  0000A9                     ___awtoft@sign:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x49
   865  0000A9                     	ds	1
   866  0000AA                     ___awdiv@sign:
   867                           	opt stack 0
   868  0000AA                     __tdiv_to_l_@cntr:
   869                           	opt stack 0
   870  0000AA                     ___lldiv@counter:
   871                           	opt stack 0
   872  0000AA                     setServo@i_724:
   873                           	opt stack 0
   874  0000AA                     intro@i:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x4A
   878  0000AA                     	ds	1
   879  0000AB                     ?___llmod:
   880                           	opt stack 0
   881  0000AB                     __div_to_l_@cntr:
   882                           	opt stack 0
   883  0000AB                     __tdiv_to_l_@exp1:
   884                           	opt stack 0
   885  0000AB                     ___awdiv@quotient:
   886                           	opt stack 0
   887  0000AB                     ___llmod@dividend:
   888                           	opt stack 0
   889                           
   890                           ; 4 bytes @ 0x4B
   891  0000AB                     	ds	1
   892  0000AC                     ??_lcdInit:
   893  0000AC                     __div_to_l_@exp1:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x4C
   897  0000AC                     	ds	1
   898  0000AD                     ?___wmul:
   899                           	opt stack 0
   900  0000AD                     ___lltoft@exp:
   901                           	opt stack 0
   902  0000AD                     lcdInit@i:
   903                           	opt stack 0
   904  0000AD                     ___wmul@multiplier:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x4D
   908  0000AD                     	ds	2
   909  0000AF                     lcdInit@i_979:
   910                           	opt stack 0
   911  0000AF                     ___wmul@multiplicand:
   912                           	opt stack 0
   913  0000AF                     ___llmod@divisor:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x4F
   917  0000AF                     	ds	2
   918  0000B1                     lcdInit@i_980:
   919                           	opt stack 0
   920  0000B1                     ___wmul@product:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x51
   924  0000B1                     	ds	2
   925  0000B3                     ??___llmod:
   926  0000B3                     ?___ftmul:
   927                           	opt stack 0
   928  0000B3                     lcdInit@i_981:
   929                           	opt stack 0
   930  0000B3                     ___ftmul@f1:
   931                           	opt stack 0
   932                           
   933                           ; 3 bytes @ 0x53
   934  0000B3                     	ds	1
   935  0000B4                     ___llmod@counter:
   936                           	opt stack 0
   937                           
   938                           ; 1 bytes @ 0x54
   939  0000B4                     	ds	2
   940  0000B6                     ___ftmul@f2:
   941                           	opt stack 0
   942                           
   943                           ; 3 bytes @ 0x56
   944  0000B6                     	ds	3
   945  0000B9                     ??___ftmul:
   946                           
   947                           ; 0 bytes @ 0x59
   948  0000B9                     	ds	3
   949  0000BC                     ___ftmul@exp:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x5C
   953  0000BC                     	ds	1
   954  0000BD                     ___ftmul@f3_as_product:
   955                           	opt stack 0
   956                           
   957                           ; 3 bytes @ 0x5D
   958  0000BD                     	ds	3
   959  0000C0                     ___ftmul@cntr:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x60
   963  0000C0                     	ds	1
   964  0000C1                     ___ftmul@sign:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x61
   968  0000C1                     	ds	1
   969  0000C2                     ??_showDistance:
   970  0000C2                     
   971                           ; 0 bytes @ 0x62
   972  0000C2                     	ds	1
   973                           
   974                           	psect	cstackCOMRAM
   975  000001                     __pcstackCOMRAM:
   976                           	opt stack 0
   977  000001                     ??i2_isdigit:
   978  000001                     ?i2_read:
   979                           	opt stack 0
   980  000001                     ?i2___awmod:
   981                           	opt stack 0
   982  000001                     ?i2___ftpack:
   983                           	opt stack 0
   984  000001                     ?i2___ftneg:
   985                           	opt stack 0
   986  000001                     ?i2__div_to_l_:
   987                           	opt stack 0
   988  000001                     ?i2__tdiv_to_l_:
   989                           	opt stack 0
   990  000001                     ?i2___lldiv:
   991                           	opt stack 0
   992  000001                     i2writeDigit@n:
   993                           	opt stack 0
   994  000001                     i2read@channel:
   995                           	opt stack 0
   996  000001                     i2___awmod@dividend:
   997                           	opt stack 0
   998  000001                     i2__div_to_l_@f1:
   999                           	opt stack 0
  1000  000001                     i2___ftpack@arg:
  1001                           	opt stack 0
  1002  000001                     i2__tdiv_to_l_@f1:
  1003                           	opt stack 0
  1004  000001                     i2___ftneg@f1:
  1005                           	opt stack 0
  1006  000001                     i2___lldiv@dividend:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x0
  1010  000001                     	ds	1
  1011  000002                     i2writeByte@n:
  1012                           	opt stack 0
  1013  000002                     i2_isdigit$1329:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x1
  1017  000002                     	ds	1
  1018  000003                     ??i2_read:
  1019  000003                     ??i2_lcdWriteCmd:
  1020  000003                     i2lcdWriteChar@n:
  1021                           	opt stack 0
  1022  000003                     i2isdigit@c:
  1023                           	opt stack 0
  1024  000003                     i2___awmod@divisor:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x2
  1028  000003                     	ds	1
  1029  000004                     i2lcdWriteCmd@n:
  1030                           	opt stack 0
  1031  000004                     i2___ftpack@exp:
  1032                           	opt stack 0
  1033  000004                     i2lcdWriteStrC@s:
  1034                           	opt stack 0
  1035  000004                     i2__div_to_l_@f2:
  1036                           	opt stack 0
  1037  000004                     i2__tdiv_to_l_@f2:
  1038                           	opt stack 0
  1039                           
  1040                           ; 3 bytes @ 0x3
  1041  000004                     	ds	1
  1042  000005                     ??i2___awmod:
  1043  000005                     i2___ftpack@sign:
  1044                           	opt stack 0
  1045  000005                     i2read@value:
  1046                           	opt stack 0
  1047  000005                     i2lcdWriteCmd@i:
  1048                           	opt stack 0
  1049  000005                     i2___lldiv@divisor:
  1050                           	opt stack 0
  1051                           
  1052                           ; 4 bytes @ 0x4
  1053  000005                     	ds	1
  1054  000006                     ??i2___ftpack:
  1055  000006                     i2___awmod@counter:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x5
  1059  000006                     	ds	1
  1060  000007                     ??i2__div_to_l_:
  1061  000007                     ??i2__tdiv_to_l_:
  1062  000007                     i2lcdSetPos@y:
  1063                           	opt stack 0
  1064  000007                     i2___awmod@sign:
  1065                           	opt stack 0
  1066                           
  1067                           ; 1 bytes @ 0x6
  1068  000007                     	ds	1
  1069  000008                     ?i2___awdiv:
  1070                           	opt stack 0
  1071  000008                     i2lcdSetPos@p:
  1072                           	opt stack 0
  1073  000008                     i2___awdiv@dividend:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x7
  1077  000008                     	ds	1
  1078  000009                     ??i2___lldiv:
  1079  000009                     ?___lwtoft:
  1080                           	opt stack 0
  1081  000009                     ?i2___ftadd:
  1082                           	opt stack 0
  1083  000009                     ?i2___lltoft:
  1084                           	opt stack 0
  1085  000009                     i2lcdSetPos@x:
  1086                           	opt stack 0
  1087  000009                     ___lwtoft@c:
  1088                           	opt stack 0
  1089  000009                     i2___ftadd@f1:
  1090                           	opt stack 0
  1091  000009                     i2___lltoft@c:
  1092                           	opt stack 0
  1093                           
  1094                           ; 4 bytes @ 0x8
  1095  000009                     	ds	1
  1096  00000A                     i2___awdiv@divisor:
  1097                           	opt stack 0
  1098  00000A                     i2__tdiv_to_l_@quot:
  1099                           	opt stack 0
  1100  00000A                     i2___lldiv@quotient:
  1101                           	opt stack 0
  1102                           
  1103                           ; 4 bytes @ 0x9
  1104  00000A                     	ds	1
  1105  00000B                     i2__div_to_l_@quot:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0xA
  1109  00000B                     	ds	1
  1110  00000C                     ??___lwtoft:
  1111  00000C                     ??i2___awdiv:
  1112  00000C                     i2___ftadd@f2:
  1113                           	opt stack 0
  1114                           
  1115                           ; 3 bytes @ 0xB
  1116  00000C                     	ds	1
  1117  00000D                     ??i2___lltoft:
  1118  00000D                     i2___awdiv@counter:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0xC
  1122  00000D                     	ds	1
  1123  00000E                     i2___awdiv@sign:
  1124                           	opt stack 0
  1125  00000E                     i2__tdiv_to_l_@cntr:
  1126                           	opt stack 0
  1127  00000E                     i2___lldiv@counter:
  1128                           	opt stack 0
  1129  00000E                     i2___ftge@ff1:
  1130                           	opt stack 0
  1131                           
  1132                           ; 3 bytes @ 0xD
  1133  00000E                     	ds	1
  1134  00000F                     ??i2___ftadd:
  1135  00000F                     ?i2___llmod:
  1136                           	opt stack 0
  1137  00000F                     i2__div_to_l_@cntr:
  1138                           	opt stack 0
  1139  00000F                     i2__tdiv_to_l_@exp1:
  1140                           	opt stack 0
  1141  00000F                     i2___awdiv@quotient:
  1142                           	opt stack 0
  1143  00000F                     i2___llmod@dividend:
  1144                           	opt stack 0
  1145                           
  1146                           ; 4 bytes @ 0xE
  1147  00000F                     	ds	1
  1148  000010                     i2__div_to_l_@exp1:
  1149                           	opt stack 0
  1150                           
  1151                           ; 1 bytes @ 0xF
  1152  000010                     	ds	1
  1153  000011                     ?i2___wmul:
  1154                           	opt stack 0
  1155  000011                     i2___lltoft@exp:
  1156                           	opt stack 0
  1157  000011                     i2___wmul@multiplier:
  1158                           	opt stack 0
  1159  000011                     i2___ftge@ff2:
  1160                           	opt stack 0
  1161                           
  1162                           ; 3 bytes @ 0x10
  1163  000011                     	ds	1
  1164  000012                     i2___ftadd@sign:
  1165                           	opt stack 0
  1166                           
  1167                           ; 1 bytes @ 0x11
  1168  000012                     	ds	1
  1169  000013                     i2___ftadd@exp2:
  1170                           	opt stack 0
  1171  000013                     i2___wmul@multiplicand:
  1172                           	opt stack 0
  1173  000013                     i2___llmod@divisor:
  1174                           	opt stack 0
  1175                           
  1176                           ; 4 bytes @ 0x12
  1177  000013                     	ds	1
  1178  000014                     ??i2___ftge:
  1179  000014                     i2___ftadd@exp1:
  1180                           	opt stack 0
  1181                           
  1182                           ; 1 bytes @ 0x13
  1183  000014                     	ds	1
  1184  000015                     ?i2___ftsub:
  1185                           	opt stack 0
  1186  000015                     i2___wmul@product:
  1187                           	opt stack 0
  1188  000015                     i2___ftsub@f1:
  1189                           	opt stack 0
  1190                           
  1191                           ; 3 bytes @ 0x14
  1192  000015                     	ds	2
  1193  000017                     ??i2___llmod:
  1194  000017                     ?i2___ftmul:
  1195                           	opt stack 0
  1196  000017                     i2___ftmul@f1:
  1197                           	opt stack 0
  1198                           
  1199                           ; 3 bytes @ 0x16
  1200  000017                     	ds	1
  1201  000018                     i2___llmod@counter:
  1202                           	opt stack 0
  1203  000018                     i2___ftsub@f2:
  1204                           	opt stack 0
  1205                           
  1206                           ; 3 bytes @ 0x17
  1207  000018                     	ds	2
  1208  00001A                     i2___ftmul@f2:
  1209                           	opt stack 0
  1210                           
  1211                           ; 3 bytes @ 0x19
  1212  00001A                     	ds	1
  1213  00001B                     i2___asftsub@f1p:
  1214                           	opt stack 0
  1215                           
  1216                           ; 2 bytes @ 0x1A
  1217  00001B                     	ds	2
  1218  00001D                     ??i2___ftmul:
  1219  00001D                     i2___asftsub@f2:
  1220                           	opt stack 0
  1221                           
  1222                           ; 3 bytes @ 0x1C
  1223  00001D                     	ds	3
  1224  000020                     i2___ftmul@exp:
  1225                           	opt stack 0
  1226                           
  1227                           ; 1 bytes @ 0x1F
  1228  000020                     	ds	1
  1229  000021                     i2___ftmul@f3_as_product:
  1230                           	opt stack 0
  1231                           
  1232                           ; 3 bytes @ 0x20
  1233  000021                     	ds	3
  1234  000024                     i2___ftmul@cntr:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0x23
  1238  000024                     	ds	1
  1239  000025                     i2___ftmul@sign:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x24
  1243  000025                     	ds	1
  1244  000026                     ?i2_fround:
  1245                           	opt stack 0
  1246  000026                     ?i2_scale:
  1247                           	opt stack 0
  1248  000026                     ?i2___ftdiv:
  1249                           	opt stack 0
  1250  000026                     i2___asftmul@f1p:
  1251                           	opt stack 0
  1252  000026                     i2___ftdiv@f1:
  1253                           	opt stack 0
  1254                           
  1255                           ; 3 bytes @ 0x25
  1256  000026                     	ds	2
  1257  000028                     i2___asftmul@f2:
  1258                           	opt stack 0
  1259                           
  1260                           ; 3 bytes @ 0x27
  1261  000028                     	ds	1
  1262  000029                     i2___ftdiv@f2:
  1263                           	opt stack 0
  1264  000029                     i2_fround$2284:
  1265                           	opt stack 0
  1266  000029                     i2_scale$2285:
  1267                           	opt stack 0
  1268                           
  1269                           ; 3 bytes @ 0x28
  1270  000029                     	ds	2
  1271  00002B                     
  1272                           ; 0 bytes @ 0x2A
  1273  00002B                     	ds	1
  1274  00002C                     ??i2___ftdiv:
  1275  00002C                     i2scale@scl:
  1276                           	opt stack 0
  1277  00002C                     i2_fround$2283:
  1278                           	opt stack 0
  1279                           
  1280                           ; 3 bytes @ 0x2B
  1281  00002C                     	ds	1
  1282  00002D                     ?i2___fttol:
  1283                           	opt stack 0
  1284  00002D                     i2___fttol@f1:
  1285                           	opt stack 0
  1286                           
  1287                           ; 3 bytes @ 0x2C
  1288  00002D                     	ds	2
  1289  00002F                     i2fround@prec:
  1290                           	opt stack 0
  1291  00002F                     i2___ftdiv@cntr:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x2E
  1295  00002F                     	ds	1
  1296  000030                     i2___asftadd@f1p:
  1297                           	opt stack 0
  1298  000030                     i2___ftdiv@f3:
  1299                           	opt stack 0
  1300                           
  1301                           ; 3 bytes @ 0x2F
  1302  000030                     	ds	1
  1303  000031                     ??i2___fttol:
  1304                           
  1305                           ; 0 bytes @ 0x30
  1306  000031                     	ds	1
  1307  000032                     i2___asftadd@f2:
  1308                           	opt stack 0
  1309                           
  1310                           ; 3 bytes @ 0x31
  1311  000032                     	ds	1
  1312  000033                     i2___ftdiv@exp:
  1313                           	opt stack 0
  1314                           
  1315                           ; 1 bytes @ 0x32
  1316  000033                     	ds	1
  1317  000034                     i2___ftdiv@sign:
  1318                           	opt stack 0
  1319                           
  1320                           ; 1 bytes @ 0x33
  1321  000034                     	ds	1
  1322  000035                     ?_voltageToG:
  1323                           	opt stack 0
  1324  000035                     ?_pointToVoltage:
  1325                           	opt stack 0
  1326  000035                     pointToVoltage@point:
  1327                           	opt stack 0
  1328  000035                     voltageToG@voltage:
  1329                           	opt stack 0
  1330                           
  1331                           ; 3 bytes @ 0x34
  1332  000035                     	ds	1
  1333  000036                     i2___fttol@sign1:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x35
  1337  000036                     	ds	1
  1338  000037                     i2___fttol@lval:
  1339                           	opt stack 0
  1340                           
  1341                           ; 4 bytes @ 0x36
  1342  000037                     	ds	1
  1343  000038                     pointToVoltage@fPoint:
  1344                           	opt stack 0
  1345                           
  1346                           ; 3 bytes @ 0x37
  1347  000038                     	ds	3
  1348  00003B                     ?_read_accelerometer:
  1349                           	opt stack 0
  1350  00003B                     i2___fttol@exp1:
  1351                           	opt stack 0
  1352  00003B                     read_accelerometer@axis:
  1353                           	opt stack 0
  1354                           
  1355                           ; 2 bytes @ 0x3A
  1356  00003B                     	ds	3
  1357  00003E                     read_accelerometer@axis_point:
  1358                           	opt stack 0
  1359                           
  1360                           ; 2 bytes @ 0x3D
  1361  00003E                     	ds	2
  1362  000040                     ?_single_axis_measure:
  1363                           	opt stack 0
  1364  000040                     single_axis_measure@axis:
  1365                           	opt stack 0
  1366                           
  1367                           ; 2 bytes @ 0x3F
  1368  000040                     	ds	2
  1369  000042                     single_axis_measure@iteration:
  1370                           	opt stack 0
  1371                           
  1372                           ; 3 bytes @ 0x41
  1373  000042                     	ds	3
  1374  000045                     single_axis_measure@axis_read:
  1375                           	opt stack 0
  1376                           
  1377                           ; 3 bytes @ 0x44
  1378  000045                     	ds	3
  1379  000048                     single_axis_measure@medium_value:
  1380                           	opt stack 0
  1381                           
  1382                           ; 3 bytes @ 0x47
  1383  000048                     	ds	3
  1384  00004B                     single_axis_measure@i:
  1385                           	opt stack 0
  1386                           
  1387                           ; 2 bytes @ 0x4A
  1388  00004B                     	ds	2
  1389  00004D                     single_axis_measure@axis_sum:
  1390                           	opt stack 0
  1391                           
  1392                           ; 3 bytes @ 0x4C
  1393  00004D                     	ds	3
  1394  000050                     ?i2_sprintf:
  1395                           	opt stack 0
  1396  000050                     i2sprintf@sp:
  1397                           	opt stack 0
  1398                           
  1399                           ; 2 bytes @ 0x4F
  1400  000050                     	ds	2
  1401  000052                     i2sprintf@f:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0x51
  1405  000052                     	ds	5
  1406  000057                     ??i2_sprintf:
  1407                           
  1408                           ; 0 bytes @ 0x56
  1409  000057                     	ds	6
  1410  00005D                     ??_showAccelerometerVal:
  1411                           
  1412                           ; 0 bytes @ 0x5C
  1413  00005D                     	ds	1
  1414                           
  1415 ;;
  1416 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1417 ;;
  1418 ;; *************** function _main *****************
  1419 ;; Defined at:
  1420 ;;		line 24 in file "main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  argc            2  117[BANK1 ] int 
  1423 ;;  argv            3  119[BANK1 ] PTR PTR unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  i               2  123[BANK1 ] int 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  2  117[BANK1 ] int 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1435 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1436 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1437 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1438 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1439 ;;Total ram usage:        8 bytes
  1440 ;; Hardware stack levels required when called:   14
  1441 ;; This function calls:
  1442 ;;		_lcdInit
  1443 ;;		_setServo
  1444 ;;		_showDistance
  1445 ;; This function is called by:
  1446 ;;		Startup code after reset
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text0
  1451  004586                     __ptext0:
  1452                           	opt stack 0
  1453  004586                     _main:
  1454                           	opt stack 17
  1455                           
  1456                           ;main.c: 25: int i;
  1457                           ;main.c: 27: TRISB = 0b11111100;
  1458                           
  1459                           ;incstack = 0
  1460  004586  0EFC               	movlw	252
  1461  004588  6E93               	movwf	3987,c	;volatile
  1462                           
  1463                           ;main.c: 28: TRISD = 0x00;
  1464  00458A  0E00               	movlw	0
  1465  00458C  6E95               	movwf	3989,c	;volatile
  1466                           
  1467                           ;main.c: 29: TRISA = 0xff;
  1468  00458E  6892               	setf	3986,c	;volatile
  1469                           
  1470                           ;main.c: 34: INTCONbits.GIE = 1;
  1471  004590  8EF2               	bsf	intcon,7,c	;volatile
  1472                           
  1473                           ;main.c: 38: ANCON0 = 0b11111111;
  1474  004592  010F               	movlb	15	; () banked
  1475  004594  010F               	movlb	15	; () banked
  1476  004596  6948               	setf	72,b	;volatile
  1477                           
  1478                           ; BSR set to: 15
  1479                           ;main.c: 39: ANCON1 |= 0b00001111;
  1480  004598  0E0F               	movlw	15
  1481  00459A  010F               	movlb	15	; () banked
  1482  00459C  010F               	movlb	15	; () banked
  1483  00459E  1349               	iorwf	73,f,b	;volatile
  1484                           
  1485                           ; BSR set to: 15
  1486                           ;main.c: 41: lcdInit();
  1487  0045A0  ECC8  F02B         	call	_lcdInit	;wreg free
  1488  0045A4                     l8403:
  1489                           
  1490                           ;main.c: 44: {
  1491                           ;main.c: 45: showDistance();
  1492  0045A4  EC26  F033         	call	_showDistance	;wreg free
  1493                           
  1494                           ;main.c: 47: _delay((unsigned long)((50)*(12000000/4000.0)));
  1495  0045A8  0EC3               	movlw	195
  1496  0045AA  0101               	movlb	1	; () banked
  1497  0045AC  6F7A               	movwf	??_main& (0+255),b
  1498  0045AE  0ECD               	movlw	205
  1499  0045B0                     u7097:
  1500  0045B0  2EE8               	decfsz	wreg,f,c
  1501  0045B2  D7FE               	goto	u7097
  1502  0045B4  2F7A               	decfsz	??_main& (0+255),f,b
  1503  0045B6  D7FC               	goto	u7097
  1504  0045B8  F000               	nop	
  1505                           
  1506                           ;main.c: 48: _delay((unsigned long)((50)*(12000000/4000.0)));
  1507  0045BA  0EC3               	movlw	195
  1508  0045BC  0101               	movlb	1	; () banked
  1509  0045BE  6F7A               	movwf	??_main& (0+255),b
  1510  0045C0  0ECD               	movlw	205
  1511  0045C2                     u7107:
  1512  0045C2  2EE8               	decfsz	wreg,f,c
  1513  0045C4  D7FE               	goto	u7107
  1514  0045C6  2F7A               	decfsz	??_main& (0+255),f,b
  1515  0045C8  D7FC               	goto	u7107
  1516  0045CA  F000               	nop	
  1517                           
  1518                           ;main.c: 51: for(i = 1; i < 180; i+=15)
  1519  0045CC  0E00               	movlw	0
  1520  0045CE  0101               	movlb	1	; () banked
  1521  0045D0  0101               	movlb	1	; () banked
  1522  0045D2  6F7C               	movwf	(main@i+1)& (0+255),b
  1523  0045D4  0E01               	movlw	1
  1524  0045D6  0101               	movlb	1	; () banked
  1525  0045D8  6F7B               	movwf	main@i& (0+255),b
  1526  0045DA                     
  1527                           ; BSR set to: 1
  1528  0045DA  0101               	movlb	1	; () banked
  1529  0045DC  0101               	movlb	1	; () banked
  1530  0045DE  517C               	movf	(main@i+1)& (0+255),w,b
  1531  0045E0  0A80               	xorlw	128
  1532  0045E2  0F80               	addlw	-128
  1533  0045E4  0EB4               	movlw	180
  1534  0045E6  B4D8               	btfsc	status,2,c
  1535  0045E8  5D7B               	subwf	main@i& (0+255),w,b
  1536  0045EA  B0D8               	btfsc	status,0,c
  1537  0045EC  D05F               	goto	l8439
  1538                           
  1539                           ; BSR set to: 1
  1540                           ;main.c: 52: {
  1541                           ;main.c: 53: setServo(i);
  1542                           
  1543                           ; BSR set to: 1
  1544                           
  1545                           ; BSR set to: 1
  1546  0045EE  C17B  F09D         	movff	main@i,setServo@degree
  1547  0045F2  C17C  F09E         	movff	main@i+1,setServo@degree+1
  1548  0045F6  ECF6  F029         	call	_setServo	;wreg free
  1549                           
  1550                           ;main.c: 54: _delay((unsigned long)((50)*(12000000/4000.0)));
  1551  0045FA  0EC3               	movlw	195
  1552  0045FC  0101               	movlb	1	; () banked
  1553  0045FE  6F7A               	movwf	??_main& (0+255),b
  1554  004600  0ECD               	movlw	205
  1555  004602                     u7117:
  1556  004602  2EE8               	decfsz	wreg,f,c
  1557  004604  D7FE               	goto	u7117
  1558  004606  2F7A               	decfsz	??_main& (0+255),f,b
  1559  004608  D7FC               	goto	u7117
  1560  00460A  F000               	nop	
  1561                           
  1562                           ;main.c: 55: _delay((unsigned long)((50)*(12000000/4000.0)));
  1563  00460C  0EC3               	movlw	195
  1564  00460E  0101               	movlb	1	; () banked
  1565  004610  6F7A               	movwf	??_main& (0+255),b
  1566  004612  0ECD               	movlw	205
  1567  004614                     u7127:
  1568  004614  2EE8               	decfsz	wreg,f,c
  1569  004616  D7FE               	goto	u7127
  1570  004618  2F7A               	decfsz	??_main& (0+255),f,b
  1571  00461A  D7FC               	goto	u7127
  1572  00461C  F000               	nop	
  1573                           
  1574                           ;main.c: 56: _delay((unsigned long)((50)*(12000000/4000.0)));
  1575  00461E  0EC3               	movlw	195
  1576  004620  0101               	movlb	1	; () banked
  1577  004622  6F7A               	movwf	??_main& (0+255),b
  1578  004624  0ECD               	movlw	205
  1579  004626                     u7137:
  1580  004626  2EE8               	decfsz	wreg,f,c
  1581  004628  D7FE               	goto	u7137
  1582  00462A  2F7A               	decfsz	??_main& (0+255),f,b
  1583  00462C  D7FC               	goto	u7137
  1584  00462E  F000               	nop	
  1585                           
  1586                           ;main.c: 57: _delay((unsigned long)((50)*(12000000/4000.0)));
  1587  004630  0EC3               	movlw	195
  1588  004632  0101               	movlb	1	; () banked
  1589  004634  6F7A               	movwf	??_main& (0+255),b
  1590  004636  0ECD               	movlw	205
  1591  004638                     u7147:
  1592  004638  2EE8               	decfsz	wreg,f,c
  1593  00463A  D7FE               	goto	u7147
  1594  00463C  2F7A               	decfsz	??_main& (0+255),f,b
  1595  00463E  D7FC               	goto	u7147
  1596  004640  F000               	nop	
  1597                           
  1598                           ;main.c: 58: _delay((unsigned long)((50)*(12000000/4000.0)));
  1599  004642  0EC3               	movlw	195
  1600  004644  0101               	movlb	1	; () banked
  1601  004646  6F7A               	movwf	??_main& (0+255),b
  1602  004648  0ECD               	movlw	205
  1603  00464A                     u7157:
  1604  00464A  2EE8               	decfsz	wreg,f,c
  1605  00464C  D7FE               	goto	u7157
  1606  00464E  2F7A               	decfsz	??_main& (0+255),f,b
  1607  004650  D7FC               	goto	u7157
  1608  004652  F000               	nop	
  1609                           
  1610                           ;main.c: 59: _delay((unsigned long)((50)*(12000000/4000.0)));
  1611  004654  0EC3               	movlw	195
  1612  004656  0101               	movlb	1	; () banked
  1613  004658  6F7A               	movwf	??_main& (0+255),b
  1614  00465A  0ECD               	movlw	205
  1615  00465C                     u7167:
  1616  00465C  2EE8               	decfsz	wreg,f,c
  1617  00465E  D7FE               	goto	u7167
  1618  004660  2F7A               	decfsz	??_main& (0+255),f,b
  1619  004662  D7FC               	goto	u7167
  1620  004664  F000               	nop	
  1621                           
  1622                           ;main.c: 60: _delay((unsigned long)((50)*(12000000/4000.0)));
  1623  004666  0EC3               	movlw	195
  1624  004668  0101               	movlb	1	; () banked
  1625  00466A  6F7A               	movwf	??_main& (0+255),b
  1626  00466C  0ECD               	movlw	205
  1627  00466E                     u7177:
  1628  00466E  2EE8               	decfsz	wreg,f,c
  1629  004670  D7FE               	goto	u7177
  1630  004672  2F7A               	decfsz	??_main& (0+255),f,b
  1631  004674  D7FC               	goto	u7177
  1632  004676  F000               	nop	
  1633                           
  1634                           ;main.c: 61: _delay((unsigned long)((50)*(12000000/4000.0)));
  1635  004678  0EC3               	movlw	195
  1636  00467A  0101               	movlb	1	; () banked
  1637  00467C  6F7A               	movwf	??_main& (0+255),b
  1638  00467E  0ECD               	movlw	205
  1639  004680                     u7187:
  1640  004680  2EE8               	decfsz	wreg,f,c
  1641  004682  D7FE               	goto	u7187
  1642  004684  2F7A               	decfsz	??_main& (0+255),f,b
  1643  004686  D7FC               	goto	u7187
  1644  004688  F000               	nop	
  1645                           
  1646                           ;main.c: 62: _delay((unsigned long)((50)*(12000000/4000.0)));
  1647  00468A  0EC3               	movlw	195
  1648  00468C  0101               	movlb	1	; () banked
  1649  00468E  6F7A               	movwf	??_main& (0+255),b
  1650  004690  0ECD               	movlw	205
  1651  004692                     u7197:
  1652  004692  2EE8               	decfsz	wreg,f,c
  1653  004694  D7FE               	goto	u7197
  1654  004696  2F7A               	decfsz	??_main& (0+255),f,b
  1655  004698  D7FC               	goto	u7197
  1656  00469A  F000               	nop	
  1657  00469C  0E0F               	movlw	15
  1658  00469E  0101               	movlb	1	; () banked
  1659  0046A0  0101               	movlb	1	; () banked
  1660  0046A2  277B               	addwf	main@i& (0+255),f,b
  1661  0046A4  0E00               	movlw	0
  1662  0046A6  0101               	movlb	1	; () banked
  1663  0046A8  237C               	addwfc	(main@i+1)& (0+255),f,b
  1664  0046AA  D797               	goto	L1
  1665  0046AC                     l8439:
  1666                           
  1667                           ; BSR set to: 1
  1668                           ;main.c: 63: }
  1669                           ;main.c: 65: for(i = 180; i > 1; i-=15)
  1670  0046AC  0E00               	movlw	0
  1671  0046AE  0101               	movlb	1	; () banked
  1672  0046B0  0101               	movlb	1	; () banked
  1673  0046B2  6F7C               	movwf	(main@i+1)& (0+255),b
  1674  0046B4  0EB4               	movlw	180
  1675  0046B6  0101               	movlb	1	; () banked
  1676  0046B8  6F7B               	movwf	main@i& (0+255),b
  1677  0046BA                     
  1678                           ; BSR set to: 1
  1679  0046BA  0101               	movlb	1	; () banked
  1680  0046BC  0101               	movlb	1	; () banked
  1681  0046BE  517C               	movf	(main@i+1)& (0+255),w,b
  1682  0046C0  0A80               	xorlw	128
  1683  0046C2  6EF3               	movwf	prodl,c
  1684  0046C4  0E80               	movlw	128
  1685  0046C6  5CF3               	subwf	prodl,w,c
  1686  0046C8  0E02               	movlw	2
  1687  0046CA  B4D8               	btfsc	status,2,c
  1688  0046CC  5D7B               	subwf	main@i& (0+255),w,b
  1689  0046CE  A0D8               	btfss	status,0,c
  1690  0046D0  D769               	goto	l8403
  1691                           
  1692                           ; BSR set to: 1
  1693                           ;main.c: 66: {
  1694                           ;main.c: 67: setServo(i);
  1695                           
  1696                           ; BSR set to: 1
  1697                           
  1698                           ; BSR set to: 1
  1699  0046D2  C17B  F09D         	movff	main@i,setServo@degree
  1700  0046D6  C17C  F09E         	movff	main@i+1,setServo@degree+1
  1701  0046DA  ECF6  F029         	call	_setServo	;wreg free
  1702                           
  1703                           ;main.c: 68: _delay((unsigned long)((50)*(12000000/4000.0)));
  1704  0046DE  0EC3               	movlw	195
  1705  0046E0  0101               	movlb	1	; () banked
  1706  0046E2  6F7A               	movwf	??_main& (0+255),b
  1707  0046E4  0ECD               	movlw	205
  1708  0046E6                     u7207:
  1709  0046E6  2EE8               	decfsz	wreg,f,c
  1710  0046E8  D7FE               	goto	u7207
  1711  0046EA  2F7A               	decfsz	??_main& (0+255),f,b
  1712  0046EC  D7FC               	goto	u7207
  1713  0046EE  F000               	nop	
  1714                           
  1715                           ;main.c: 69: _delay((unsigned long)((50)*(12000000/4000.0)));
  1716  0046F0  0EC3               	movlw	195
  1717  0046F2  0101               	movlb	1	; () banked
  1718  0046F4  6F7A               	movwf	??_main& (0+255),b
  1719  0046F6  0ECD               	movlw	205
  1720  0046F8                     u7217:
  1721  0046F8  2EE8               	decfsz	wreg,f,c
  1722  0046FA  D7FE               	goto	u7217
  1723  0046FC  2F7A               	decfsz	??_main& (0+255),f,b
  1724  0046FE  D7FC               	goto	u7217
  1725  004700  F000               	nop	
  1726                           
  1727                           ;main.c: 70: _delay((unsigned long)((50)*(12000000/4000.0)));
  1728  004702  0EC3               	movlw	195
  1729  004704  0101               	movlb	1	; () banked
  1730  004706  6F7A               	movwf	??_main& (0+255),b
  1731  004708  0ECD               	movlw	205
  1732  00470A                     u7227:
  1733  00470A  2EE8               	decfsz	wreg,f,c
  1734  00470C  D7FE               	goto	u7227
  1735  00470E  2F7A               	decfsz	??_main& (0+255),f,b
  1736  004710  D7FC               	goto	u7227
  1737  004712  F000               	nop	
  1738                           
  1739                           ;main.c: 71: _delay((unsigned long)((50)*(12000000/4000.0)));
  1740  004714  0EC3               	movlw	195
  1741  004716  0101               	movlb	1	; () banked
  1742  004718  6F7A               	movwf	??_main& (0+255),b
  1743  00471A  0ECD               	movlw	205
  1744  00471C                     u7237:
  1745  00471C  2EE8               	decfsz	wreg,f,c
  1746  00471E  D7FE               	goto	u7237
  1747  004720  2F7A               	decfsz	??_main& (0+255),f,b
  1748  004722  D7FC               	goto	u7237
  1749  004724  F000               	nop	
  1750                           
  1751                           ;main.c: 72: _delay((unsigned long)((50)*(12000000/4000.0)));
  1752  004726  0EC3               	movlw	195
  1753  004728  0101               	movlb	1	; () banked
  1754  00472A  6F7A               	movwf	??_main& (0+255),b
  1755  00472C  0ECD               	movlw	205
  1756  00472E                     u7247:
  1757  00472E  2EE8               	decfsz	wreg,f,c
  1758  004730  D7FE               	goto	u7247
  1759  004732  2F7A               	decfsz	??_main& (0+255),f,b
  1760  004734  D7FC               	goto	u7247
  1761  004736  F000               	nop	
  1762                           
  1763                           ;main.c: 73: _delay((unsigned long)((50)*(12000000/4000.0)));
  1764  004738  0EC3               	movlw	195
  1765  00473A  0101               	movlb	1	; () banked
  1766  00473C  6F7A               	movwf	??_main& (0+255),b
  1767  00473E  0ECD               	movlw	205
  1768  004740                     u7257:
  1769  004740  2EE8               	decfsz	wreg,f,c
  1770  004742  D7FE               	goto	u7257
  1771  004744  2F7A               	decfsz	??_main& (0+255),f,b
  1772  004746  D7FC               	goto	u7257
  1773  004748  F000               	nop	
  1774                           
  1775                           ;main.c: 74: _delay((unsigned long)((50)*(12000000/4000.0)));
  1776  00474A  0EC3               	movlw	195
  1777  00474C  0101               	movlb	1	; () banked
  1778  00474E  6F7A               	movwf	??_main& (0+255),b
  1779  004750  0ECD               	movlw	205
  1780  004752                     u7267:
  1781  004752  2EE8               	decfsz	wreg,f,c
  1782  004754  D7FE               	goto	u7267
  1783  004756  2F7A               	decfsz	??_main& (0+255),f,b
  1784  004758  D7FC               	goto	u7267
  1785  00475A  F000               	nop	
  1786                           
  1787                           ;main.c: 75: _delay((unsigned long)((50)*(12000000/4000.0)));
  1788  00475C  0EC3               	movlw	195
  1789  00475E  0101               	movlb	1	; () banked
  1790  004760  6F7A               	movwf	??_main& (0+255),b
  1791  004762  0ECD               	movlw	205
  1792  004764                     u7277:
  1793  004764  2EE8               	decfsz	wreg,f,c
  1794  004766  D7FE               	goto	u7277
  1795  004768  2F7A               	decfsz	??_main& (0+255),f,b
  1796  00476A  D7FC               	goto	u7277
  1797  00476C  F000               	nop	
  1798                           
  1799                           ;main.c: 76: _delay((unsigned long)((50)*(12000000/4000.0)));
  1800  00476E  0EC3               	movlw	195
  1801  004770  0101               	movlb	1	; () banked
  1802  004772  6F7A               	movwf	??_main& (0+255),b
  1803  004774  0ECD               	movlw	205
  1804  004776                     u7287:
  1805  004776  2EE8               	decfsz	wreg,f,c
  1806  004778  D7FE               	goto	u7287
  1807  00477A  2F7A               	decfsz	??_main& (0+255),f,b
  1808  00477C  D7FC               	goto	u7287
  1809  00477E  F000               	nop	
  1810  004780  0101               	movlb	1	; () banked
  1811  004782  0EF1               	movlw	241
  1812  004784  0101               	movlb	1	; () banked
  1813  004786  277B               	addwf	main@i& (0+255),f,b
  1814  004788  0EFF               	movlw	255
  1815  00478A  0101               	movlb	1	; () banked
  1816  00478C  237C               	addwfc	(main@i+1)& (0+255),f,b
  1817  00478E  D795               	goto	L2
  1818  004790                     __end_of_main:
  1819                           	opt stack 0
  1820                           prodl	equ	0xFF3
  1821                           intcon	equ	0xFF2
  1822                           wreg	equ	0xFE8
  1823                           status	equ	0xFD8
  1824                           
  1825 ;; *************** function _showDistance *****************
  1826 ;; Defined at:
  1827 ;;		line 116 in file "main.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  buffer         10  107[BANK1 ] unsigned char [10]
  1832 ;; Return value:  Size  Location     Type
  1833 ;;		None               void
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1842 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1843 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1844 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;Total ram usage:       11 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:   12
  1848 ;; This function calls:
  1849 ;;		_lcdClear
  1850 ;;		_lcdSetPos
  1851 ;;		_lcdWriteStrC
  1852 ;;		_readDistance
  1853 ;;		_sprintf
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text1
  1860  00664C                     __ptext1:
  1861                           	opt stack 0
  1862  00664C                     _showDistance:
  1863                           	opt stack 18
  1864                           
  1865                           ;main.c: 118: char buffer [10];
  1866                           ;main.c: 119: lcdClear();
  1867                           
  1868                           ; BSR set to: 1
  1869                           ;incstack = 0
  1870  00664C  EC37  F038         	call	_lcdClear	;wreg free
  1871                           
  1872                           ;main.c: 120: lcdSetPos(0,0);
  1873  006650  0100               	movlb	0	; () banked
  1874  006652  6FC2               	movwf	??_showDistance& (0+255),b
  1875  006654  0E00               	movlw	0
  1876  006656  0100               	movlb	0	; () banked
  1877  006658  0100               	movlb	0	; () banked
  1878  00665A  6FA3               	movwf	lcdSetPos@y& (0+255),b
  1879  00665C  0100               	movlb	0	; () banked
  1880  00665E  51C2               	movf	??_showDistance& (0+255),w,b
  1881  006660  0E00               	movlw	0
  1882  006662  EC06  F035         	call	_lcdSetPos
  1883                           
  1884                           ;main.c: 121: lcdWriteStrC("Distance: [cm/uS]");
  1885  006666  0E0F               	movlw	high STR_1
  1886  006668  0100               	movlb	0	; () banked
  1887  00666A  0100               	movlb	0	; () banked
  1888  00666C  6FA1               	movwf	(lcdWriteStrC@s+1)& (0+255),b
  1889  00666E  0E77               	movlw	low STR_1
  1890  006670  0100               	movlb	0	; () banked
  1891  006672  0100               	movlb	0	; () banked
  1892  006674  6FA0               	movwf	lcdWriteStrC@s& (0+255),b
  1893  006676  ECD5  F034         	call	_lcdWriteStrC	;wreg free
  1894                           
  1895                           ;main.c: 122: lcdSetPos(0,1);
  1896  00667A  0100               	movlb	0	; () banked
  1897  00667C  6FC2               	movwf	??_showDistance& (0+255),b
  1898  00667E  0E01               	movlw	1
  1899  006680  0100               	movlb	0	; () banked
  1900  006682  0100               	movlb	0	; () banked
  1901  006684  6FA3               	movwf	lcdSetPos@y& (0+255),b
  1902  006686  0100               	movlb	0	; () banked
  1903  006688  51C2               	movf	??_showDistance& (0+255),w,b
  1904  00668A  0E00               	movlw	0
  1905  00668C  EC06  F035         	call	_lcdSetPos
  1906                           
  1907                           ;main.c: 123: sprintf(buffer,"%3.3f",readDistance());
  1908  006690  0101               	movlb	1	; () banked
  1909  006692  0E01               	movlw	high showDistance@buffer
  1910  006694  0101               	movlb	1	; () banked
  1911  006696  0101               	movlb	1	; () banked
  1912  006698  6F3A               	movwf	(sprintf@sp+1)& (0+255),b
  1913  00669A  0101               	movlb	1	; () banked
  1914  00669C  0E6B               	movlw	low showDistance@buffer
  1915  00669E  0101               	movlb	1	; () banked
  1916  0066A0  0101               	movlb	1	; () banked
  1917  0066A2  6F39               	movwf	sprintf@sp& (0+255),b
  1918  0066A4  0E0F               	movlw	high STR_2
  1919  0066A6  0101               	movlb	1	; () banked
  1920  0066A8  0101               	movlb	1	; () banked
  1921  0066AA  6F3C               	movwf	(sprintf@f+1)& (0+255),b
  1922  0066AC  0ECB               	movlw	low STR_2
  1923  0066AE  0101               	movlb	1	; () banked
  1924  0066B0  0101               	movlb	1	; () banked
  1925  0066B2  6F3B               	movwf	sprintf@f& (0+255),b
  1926  0066B4  ECBA  F021         	call	_readDistance	;wreg free
  1927  0066B8  C126  F13D         	movff	?_readDistance,?_sprintf+4
  1928  0066BC  C127  F13E         	movff	?_readDistance+1,?_sprintf+5
  1929  0066C0  C128  F13F         	movff	?_readDistance+2,?_sprintf+6
  1930  0066C4  ECE9  F007         	call	_sprintf	;wreg free
  1931                           
  1932                           ;main.c: 124: lcdWriteStrC(buffer);
  1933  0066C8  0101               	movlb	1	; () banked
  1934  0066CA  0E01               	movlw	high showDistance@buffer
  1935  0066CC  0100               	movlb	0	; () banked
  1936  0066CE  0100               	movlb	0	; () banked
  1937  0066D0  6FA1               	movwf	(lcdWriteStrC@s+1)& (0+255),b
  1938  0066D2  0101               	movlb	1	; () banked
  1939  0066D4  0E6B               	movlw	low showDistance@buffer
  1940  0066D6  0100               	movlb	0	; () banked
  1941  0066D8  0100               	movlb	0	; () banked
  1942  0066DA  6FA0               	movwf	lcdWriteStrC@s& (0+255),b
  1943  0066DC  ECD5  F034         	call	_lcdWriteStrC	;wreg free
  1944  0066E0  0012               	return	
  1945  0066E2                     __end_of_showDistance:
  1946                           	opt stack 0
  1947                           prodl	equ	0xFF3
  1948                           intcon	equ	0xFF2
  1949                           wreg	equ	0xFE8
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function _sprintf *****************
  1953 ;; Defined at:
  1954 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\doprnt.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  sp              2   57[BANK1 ] PTR unsigned char 
  1957 ;;		 -> showAccelerometerVal@buffer(10), showTempLight@buffer(10), showDistance@buffer(10), 
  1958 ;;  f               2   59[BANK1 ] PTR const unsigned char 
  1959 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_4(10), 
  1960 ;;		 -> STR_3(12), STR_2(6), 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  vd              4   77[BANK1 ] unsigned long 
  1963 ;;  vd              4   81[BANK1 ] unsigned long 
  1964 ;;  _val            5   94[BANK1 ] struct .
  1965 ;;  fval            3  101[BANK1 ] struct .
  1966 ;;  integ           3   87[BANK1 ] struct .
  1967 ;;  ival            3    0        struct .
  1968 ;;  prec            2  104[BANK1 ] int 
  1969 ;;  exp             2   99[BANK1 ] int 
  1970 ;;  width           2   92[BANK1 ] int 
  1971 ;;  flag            2   90[BANK1 ] unsigned short 
  1972 ;;  ap              2   85[BANK1 ] PTR void [1]
  1973 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  1974 ;;  c               1  106[BANK1 ] char 
  1975 ;;  d               1    0        unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  2   57[BANK1 ] int 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1985 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1986 ;;      Locals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1987 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1988 ;;      Totals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;Total ram usage:       50 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:   11
  1992 ;; This function calls:
  1993 ;;		___asftadd
  1994 ;;		___asftmul
  1995 ;;		___asftsub
  1996 ;;		___awdiv
  1997 ;;		___ftge
  1998 ;;		___ftmul
  1999 ;;		___ftneg
  2000 ;;		___fttol
  2001 ;;		___lldiv
  2002 ;;		___llmod
  2003 ;;		___lltoft
  2004 ;;		___wmul
  2005 ;;		__div_to_l_
  2006 ;;		__tdiv_to_l_
  2007 ;;		_fround
  2008 ;;		_isdigit
  2009 ;;		_scale
  2010 ;; This function is called by:
  2011 ;;		_showDistance
  2012 ;;		_showTempLight
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text2
  2017  000FD2                     __ptext2:
  2018                           	opt stack 0
  2019  000FD2                     _sprintf:
  2020                           	opt stack 18
  2021                           
  2022                           ;doprnt.c: 494: va_list ap;
  2023                           ;doprnt.c: 499: signed char c;
  2024                           ;doprnt.c: 501: int width;
  2025                           ;doprnt.c: 504: int prec;
  2026                           ;doprnt.c: 508: unsigned short flag;
  2027                           ;doprnt.c: 515: char d;
  2028                           ;doprnt.c: 516: double fval, integ;
  2029                           ;doprnt.c: 517: int exp;
  2030                           ;doprnt.c: 518: double ival;
  2031                           ;doprnt.c: 519: union {
  2032                           ;doprnt.c: 520: unsigned long _val;
  2033                           ;doprnt.c: 521: struct {
  2034                           ;doprnt.c: 522: const char * _cp;
  2035                           ;doprnt.c: 523: unsigned _len;
  2036                           ;doprnt.c: 524: } _str;
  2037                           ;doprnt.c: 525: } _val;
  2038                           ;doprnt.c: 542: *ap = __va_start();
  2039                           
  2040                           ;incstack = 0
  2041  000FD2  0101               	movlb	1	; () banked
  2042  000FD4  0E01               	movlw	high (?_sprintf+4)
  2043  000FD6  0101               	movlb	1	; () banked
  2044  000FD8  0101               	movlb	1	; () banked
  2045  000FDA  6F56               	movwf	(sprintf@ap+1)& (0+255),b
  2046  000FDC  0101               	movlb	1	; () banked
  2047  000FDE  0E3D               	movlw	low (?_sprintf+4)
  2048  000FE0  0101               	movlb	1	; () banked
  2049  000FE2  0101               	movlb	1	; () banked
  2050  000FE4  6F55               	movwf	sprintf@ap& (0+255),b
  2051                           
  2052                           ;doprnt.c: 545: while(c = *f++) {
  2053  000FE6  EFE8  F00E         	goto	l7889
  2054  000FEA                     l7599:
  2055                           
  2056                           ; BSR set to: 1
  2057                           ;doprnt.c: 547: if(c != '%')
  2058  000FEA  0101               	movlb	1	; () banked
  2059  000FEC  0101               	movlb	1	; () banked
  2060  000FEE  516A               	movf	sprintf@c& (0+255),w,b
  2061  000FF0  0A25               	xorlw	37
  2062  000FF2  B4D8               	btfsc	status,2,c
  2063  000FF4  D00D               	goto	l7605
  2064                           
  2065                           ; BSR set to: 1
  2066                           ;doprnt.c: 549: {
  2067                           ;doprnt.c: 550: ((*sp++ = (c)));
  2068  000FF6  C139  FFD9         	movff	sprintf@sp,fsr2l
  2069  000FFA  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  2070  000FFE  0101               	movlb	1	; () banked
  2071  001000  C16A  FFDF         	movff	sprintf@c,indf2
  2072                           
  2073                           ; BSR set to: 1
  2074  001004  0101               	movlb	1	; () banked
  2075  001006  0101               	movlb	1	; () banked
  2076  001008  4B39               	infsnz	sprintf@sp& (0+255),f,b
  2077  00100A  2B3A               	incf	(sprintf@sp+1)& (0+255),f,b
  2078                           
  2079                           ;doprnt.c: 551: continue;
  2080  00100C  EFE8  F00E         	goto	l7889
  2081  001010                     l7605:
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;doprnt.c: 552: }
  2085                           ;doprnt.c: 555: width = 0;
  2086  001010  0E00               	movlw	0
  2087  001012  0101               	movlb	1	; () banked
  2088  001014  0101               	movlb	1	; () banked
  2089  001016  6F5D               	movwf	(sprintf@width+1)& (0+255),b
  2090  001018  0E00               	movlw	0
  2091  00101A  0101               	movlb	1	; () banked
  2092  00101C  6F5C               	movwf	sprintf@width& (0+255),b
  2093                           
  2094                           ;doprnt.c: 557: flag = 0;
  2095  00101E  0E00               	movlw	0
  2096  001020  0101               	movlb	1	; () banked
  2097  001022  0101               	movlb	1	; () banked
  2098  001024  6F5B               	movwf	(sprintf@flag+1)& (0+255),b
  2099  001026  0E00               	movlw	0
  2100  001028  0101               	movlb	1	; () banked
  2101  00102A  6F5A               	movwf	sprintf@flag& (0+255),b
  2102                           
  2103                           ; BSR set to: 1
  2104                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2105  00102C  0101               	movlb	1	; () banked
  2106  00102E  C13B  FFF6         	movff	sprintf@f,tblptrl
  2107  001032  0101               	movlb	1	; () banked
  2108  001034  C13C  FFF7         	movff	sprintf@f+1,tblptrh
  2109  001038  0E00               	movlw	low (__mediumconst shr (0+16))
  2110  00103A  6EF8               	movwf	tblptru,c
  2111  00103C  0008               	tblrd		*
  2112  00103E  50F5               	movf	tablat,w,c
  2113  001040  ECDF  F035         	call	_isdigit
  2114  001044  A0D8               	btfss	status,0,c
  2115  001046  D050               	goto	l7619
  2116                           
  2117                           ;doprnt.c: 607: width = 0;
  2118  001048  0E00               	movlw	0
  2119  00104A  0101               	movlb	1	; () banked
  2120  00104C  0101               	movlb	1	; () banked
  2121  00104E  6F5D               	movwf	(sprintf@width+1)& (0+255),b
  2122  001050  0E00               	movlw	0
  2123  001052  0101               	movlb	1	; () banked
  2124  001054  6F5C               	movwf	sprintf@width& (0+255),b
  2125  001056                     l7611:
  2126                           
  2127                           ;doprnt.c: 609: width *= 10;
  2128  001056  C15C  F0AD         	movff	sprintf@width,___wmul@multiplier
  2129  00105A  C15D  F0AE         	movff	sprintf@width+1,___wmul@multiplier+1
  2130  00105E  0E00               	movlw	0
  2131  001060  0100               	movlb	0	; () banked
  2132  001062  0100               	movlb	0	; () banked
  2133  001064  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2134  001066  0E0A               	movlw	10
  2135  001068  0100               	movlb	0	; () banked
  2136  00106A  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  2137  00106C  ECA4  F034         	call	___wmul	;wreg free
  2138  001070  0100               	movlb	0	; () banked
  2139  001072  C0AD  F15C         	movff	?___wmul,sprintf@width
  2140  001076  0100               	movlb	0	; () banked
  2141  001078  C0AE  F15D         	movff	?___wmul+1,sprintf@width+1
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;doprnt.c: 610: width += *f++ - '0';
  2145  00107C  0ED0               	movlw	208
  2146  00107E  0101               	movlb	1	; () banked
  2147  001080  6F40               	movwf	??_sprintf& (0+255),b
  2148  001082  0EFF               	movlw	255
  2149  001084  6F41               	movwf	(??_sprintf+1)& (0+255),b
  2150  001086  0101               	movlb	1	; () banked
  2151  001088  C13B  FFF6         	movff	sprintf@f,tblptrl
  2152  00108C  0101               	movlb	1	; () banked
  2153  00108E  C13C  FFF7         	movff	sprintf@f+1,tblptrh
  2154  001092  0E00               	movlw	low (__mediumconst shr (0+16))
  2155  001094  6EF8               	movwf	tblptru,c
  2156  001096  0008               	tblrd		*
  2157  001098  50F5               	movf	tablat,w,c
  2158  00109A  0101               	movlb	1	; () banked
  2159  00109C  6F42               	movwf	(??_sprintf+2)& (0+255),b
  2160  00109E  6B43               	clrf	(??_sprintf+3)& (0+255),b
  2161  0010A0  0101               	movlb	1	; () banked
  2162  0010A2  5140               	movf	??_sprintf& (0+255),w,b
  2163  0010A4  0101               	movlb	1	; () banked
  2164  0010A6  2742               	addwf	(??_sprintf+2)& (0+255),f,b
  2165  0010A8  0101               	movlb	1	; () banked
  2166  0010AA  5141               	movf	(??_sprintf+1)& (0+255),w,b
  2167  0010AC  0101               	movlb	1	; () banked
  2168  0010AE  2343               	addwfc	(??_sprintf+3)& (0+255),f,b
  2169  0010B0  0101               	movlb	1	; () banked
  2170  0010B2  5142               	movf	(??_sprintf+2)& (0+255),w,b
  2171  0010B4  0101               	movlb	1	; () banked
  2172  0010B6  0101               	movlb	1	; () banked
  2173  0010B8  275C               	addwf	sprintf@width& (0+255),f,b
  2174  0010BA  0101               	movlb	1	; () banked
  2175  0010BC  5143               	movf	(??_sprintf+3)& (0+255),w,b
  2176  0010BE  0101               	movlb	1	; () banked
  2177  0010C0  0101               	movlb	1	; () banked
  2178  0010C2  235D               	addwfc	(sprintf@width+1)& (0+255),f,b
  2179                           
  2180                           ; BSR set to: 1
  2181  0010C4  0101               	movlb	1	; () banked
  2182  0010C6  0101               	movlb	1	; () banked
  2183  0010C8  4B3B               	infsnz	sprintf@f& (0+255),f,b
  2184  0010CA  2B3C               	incf	(sprintf@f+1)& (0+255),f,b
  2185                           
  2186                           ; BSR set to: 1
  2187                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2188  0010CC  0101               	movlb	1	; () banked
  2189  0010CE  C13B  FFF6         	movff	sprintf@f,tblptrl
  2190  0010D2  0101               	movlb	1	; () banked
  2191  0010D4  C13C  FFF7         	movff	sprintf@f+1,tblptrh
  2192  0010D8  0E00               	movlw	low (__mediumconst shr (0+16))
  2193  0010DA  6EF8               	movwf	tblptru,c
  2194  0010DC  0008               	tblrd		*
  2195  0010DE  50F5               	movf	tablat,w,c
  2196  0010E0  ECDF  F035         	call	_isdigit
  2197  0010E4  B0D8               	btfsc	status,0,c
  2198  0010E6  D7B7               	goto	l7611
  2199  0010E8                     l7619:
  2200                           
  2201                           ;doprnt.c: 617: }
  2202                           ;doprnt.c: 620: if(*f == '.') {
  2203  0010E8  0101               	movlb	1	; () banked
  2204  0010EA  C13B  FFF6         	movff	sprintf@f,tblptrl
  2205  0010EE  0101               	movlb	1	; () banked
  2206  0010F0  C13C  FFF7         	movff	sprintf@f+1,tblptrh
  2207  0010F4  0E00               	movlw	low (__mediumconst shr (0+16))
  2208  0010F6  6EF8               	movwf	tblptru,c
  2209  0010F8  0008               	tblrd		*
  2210  0010FA  50F5               	movf	tablat,w,c
  2211  0010FC  0A2E               	xorlw	46
  2212  0010FE  A4D8               	btfss	status,2,c
  2213  001100  D04C               	goto	l7631
  2214                           
  2215                           ; BSR set to: 1
  2216                           ;doprnt.c: 621: flag |= 0x4000;
  2217  001102  0101               	movlb	1	; () banked
  2218  001104  0101               	movlb	1	; () banked
  2219  001106  8D5B               	bsf	(sprintf@flag+1)& (0+255),6,b
  2220                           
  2221                           ;doprnt.c: 622: f++;
  2222  001108  0101               	movlb	1	; () banked
  2223  00110A  0101               	movlb	1	; () banked
  2224  00110C  4B3B               	infsnz	sprintf@f& (0+255),f,b
  2225  00110E  2B3C               	incf	(sprintf@f+1)& (0+255),f,b
  2226                           
  2227                           ; BSR set to: 1
  2228                           ;doprnt.c: 629: {
  2229                           ;doprnt.c: 630: prec = 0;
  2230  001110  0E00               	movlw	0
  2231  001112  0101               	movlb	1	; () banked
  2232  001114  0101               	movlb	1	; () banked
  2233  001116  6F69               	movwf	(sprintf@prec+1)& (0+255),b
  2234  001118  0E00               	movlw	0
  2235  00111A  0101               	movlb	1	; () banked
  2236  00111C  6F68               	movwf	sprintf@prec& (0+255),b
  2237                           
  2238                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  2239  00111E  D02E               	goto	l7629
  2240  001120                     l7625:
  2241                           
  2242                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  2243  001120  C168  F0AD         	movff	sprintf@prec,___wmul@multiplier
  2244  001124  C169  F0AE         	movff	sprintf@prec+1,___wmul@multiplier+1
  2245  001128  0E00               	movlw	0
  2246  00112A  0100               	movlb	0	; () banked
  2247  00112C  0100               	movlb	0	; () banked
  2248  00112E  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2249  001130  0E0A               	movlw	10
  2250  001132  0100               	movlb	0	; () banked
  2251  001134  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  2252  001136  ECA4  F034         	call	___wmul	;wreg free
  2253  00113A  0101               	movlb	1	; () banked
  2254  00113C  C13B  FFF6         	movff	sprintf@f,tblptrl
  2255  001140  0101               	movlb	1	; () banked
  2256  001142  C13C  FFF7         	movff	sprintf@f+1,tblptrh
  2257  001146  0E00               	movlw	low (__mediumconst shr (0+16))
  2258  001148  6EF8               	movwf	tblptru,c
  2259  00114A  0008               	tblrd		*
  2260  00114C  50F5               	movf	tablat,w,c
  2261  00114E  0100               	movlb	0	; () banked
  2262  001150  0100               	movlb	0	; () banked
  2263  001152  27AD               	addwf	?___wmul& (0+255),f,b
  2264  001154  0E00               	movlw	0
  2265  001156  0100               	movlb	0	; () banked
  2266  001158  23AE               	addwfc	(?___wmul+1)& (0+255),f,b
  2267  00115A  0ED0               	movlw	208
  2268  00115C  0100               	movlb	0	; () banked
  2269  00115E  0100               	movlb	0	; () banked
  2270  001160  25AD               	addwf	?___wmul& (0+255),w,b
  2271  001162  0101               	movlb	1	; () banked
  2272  001164  0101               	movlb	1	; () banked
  2273  001166  6F68               	movwf	sprintf@prec& (0+255),b
  2274  001168  0EFF               	movlw	255
  2275  00116A  0100               	movlb	0	; () banked
  2276  00116C  0100               	movlb	0	; () banked
  2277  00116E  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  2278  001170  0101               	movlb	1	; () banked
  2279  001172  6F69               	movwf	(sprintf@prec+1)& (0+255),b
  2280                           
  2281                           ; BSR set to: 1
  2282  001174  0101               	movlb	1	; () banked
  2283  001176  0101               	movlb	1	; () banked
  2284  001178  4B3B               	infsnz	sprintf@f& (0+255),f,b
  2285  00117A  2B3C               	incf	(sprintf@f+1)& (0+255),f,b
  2286  00117C                     l7629:
  2287                           
  2288                           ; BSR set to: 1
  2289  00117C  0101               	movlb	1	; () banked
  2290  00117E  C13B  FFF6         	movff	sprintf@f,tblptrl
  2291  001182  0101               	movlb	1	; () banked
  2292  001184  C13C  FFF7         	movff	sprintf@f+1,tblptrh
  2293  001188  0E00               	movlw	low (__mediumconst shr (0+16))
  2294  00118A  6EF8               	movwf	tblptru,c
  2295  00118C  0008               	tblrd		*
  2296  00118E  50F5               	movf	tablat,w,c
  2297  001190  ECDF  F035         	call	_isdigit
  2298  001194  A0D8               	btfss	status,0,c
  2299  001196  D010               	goto	l7639
  2300  001198  D7C3               	goto	l7625
  2301  00119A                     l7631:
  2302                           
  2303                           ;doprnt.c: 635: prec = 0;
  2304  00119A  0E00               	movlw	0
  2305  00119C  0101               	movlb	1	; () banked
  2306  00119E  0101               	movlb	1	; () banked
  2307  0011A0  6F69               	movwf	(sprintf@prec+1)& (0+255),b
  2308  0011A2  0E00               	movlw	0
  2309  0011A4  0101               	movlb	1	; () banked
  2310  0011A6  6F68               	movwf	sprintf@prec& (0+255),b
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;doprnt.c: 637: flag |= 0x1000;
  2314  0011A8  0101               	movlb	1	; () banked
  2315  0011AA  0101               	movlb	1	; () banked
  2316  0011AC  895B               	bsf	(sprintf@flag+1)& (0+255),4,b
  2317  0011AE  D004               	goto	l7639
  2318  0011B0                     l7635:
  2319                           
  2320                           ; BSR set to: 1
  2321                           ;doprnt.c: 672: flag |= 0x400;
  2322  0011B0  0101               	movlb	1	; () banked
  2323  0011B2  0101               	movlb	1	; () banked
  2324  0011B4  855B               	bsf	(sprintf@flag+1)& (0+255),2,b
  2325                           
  2326                           ;doprnt.c: 673: break;
  2327  0011B6  D027               	goto	l7641
  2328  0011B8                     l7639:
  2329  0011B8  0101               	movlb	1	; () banked
  2330  0011BA  0101               	movlb	1	; () banked
  2331  0011BC  513B               	movf	sprintf@f& (0+255),w,b
  2332  0011BE  0101               	movlb	1	; () banked
  2333  0011C0  6F40               	movwf	??_sprintf& (0+255),b
  2334  0011C2  0101               	movlb	1	; () banked
  2335  0011C4  0101               	movlb	1	; () banked
  2336  0011C6  513C               	movf	(sprintf@f+1)& (0+255),w,b
  2337  0011C8  0101               	movlb	1	; () banked
  2338  0011CA  6F41               	movwf	(??_sprintf+1)& (0+255),b
  2339  0011CC  0101               	movlb	1	; () banked
  2340  0011CE  4B3B               	infsnz	sprintf@f& (0+255),f,b
  2341  0011D0  2B3C               	incf	(sprintf@f+1)& (0+255),f,b
  2342  0011D2  C140  FFF6         	movff	??_sprintf,tblptrl
  2343  0011D6  C141  FFF7         	movff	??_sprintf+1,tblptrh
  2344  0011DA  0E00               	movlw	low (__mediumconst shr (0+16))
  2345  0011DC  6EF8               	movwf	tblptru,c
  2346  0011DE  0008               	tblrd		*
  2347  0011E0  0101               	movlb	1	; () banked
  2348  0011E2  CFF5 F16A          	movff	tablat,sprintf@c
  2349  0011E6  0101               	movlb	1	; () banked
  2350  0011E8  516A               	movf	sprintf@c& (0+255),w,b
  2351                           
  2352                           ; Switch size 1, requested type "space"
  2353                           ; Number of cases is 4, Range of values is 0 to 105
  2354                           ; switch strategies available:
  2355                           ; Name         Instructions Cycles
  2356                           ; simple_byte           13     7 (average)
  2357                           ;	Chosen strategy is simple_byte
  2358  0011EA  0A00               	xorlw	0	; case 0
  2359  0011EC  B4D8               	btfsc	status,2,c
  2360  0011EE  EF03  F00F         	goto	l7891
  2361  0011F2  0A64               	xorlw	100	; case 100
  2362  0011F4  B4D8               	btfsc	status,2,c
  2363  0011F6  D007               	goto	l7641
  2364  0011F8  0A02               	xorlw	2	; case 102
  2365  0011FA  B4D8               	btfsc	status,2,c
  2366  0011FC  D7D9               	goto	l7635
  2367  0011FE  0A0F               	xorlw	15	; case 105
  2368  001200  A4D8               	btfss	status,2,c
  2369  001202  EFE8  F00E         	goto	l7889
  2370  001206                     l7641:
  2371                           
  2372                           ; BSR set to: 1
  2373                           ;doprnt.c: 834: if(flag & (0x700)) {
  2374  001206  0E07               	movlw	7
  2375  001208  0101               	movlb	1	; () banked
  2376  00120A  0101               	movlb	1	; () banked
  2377  00120C  155B               	andwf	(sprintf@flag+1)& (0+255),w,b
  2378  00120E  B4D8               	btfsc	status,2,c
  2379  001210  EF1C  F00D         	goto	l7809
  2380                           
  2381                           ; BSR set to: 1
  2382                           ;doprnt.c: 836: if(flag & 0x1000)
  2383  001214  0101               	movlb	1	; () banked
  2384  001216  0101               	movlb	1	; () banked
  2385  001218  A95B               	btfss	(sprintf@flag+1)& (0+255),4,b
  2386  00121A  D007               	goto	l7647
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;doprnt.c: 838: prec = 6;
  2390  00121C  0E00               	movlw	0
  2391  00121E  0101               	movlb	1	; () banked
  2392  001220  0101               	movlb	1	; () banked
  2393  001222  6F69               	movwf	(sprintf@prec+1)& (0+255),b
  2394  001224  0E06               	movlw	6
  2395  001226  0101               	movlb	1	; () banked
  2396  001228  6F68               	movwf	sprintf@prec& (0+255),b
  2397  00122A                     l7647:
  2398                           
  2399                           ; BSR set to: 1
  2400                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2401  00122A  C155  FFD9         	movff	sprintf@ap,fsr2l
  2402  00122E  C156  FFDA         	movff	sprintf@ap+1,fsr2h
  2403  001232  0101               	movlb	1	; () banked
  2404  001234  CFDE F165          	movff	postinc2,sprintf@fval
  2405  001238  0101               	movlb	1	; () banked
  2406  00123A  CFDE F166          	movff	postinc2,sprintf@fval+1
  2407  00123E  0101               	movlb	1	; () banked
  2408  001240  CFDD F167          	movff	postdec2,sprintf@fval+2
  2409                           
  2410                           ; BSR set to: 1
  2411  001244  0E03               	movlw	3
  2412  001246  0101               	movlb	1	; () banked
  2413  001248  0101               	movlb	1	; () banked
  2414  00124A  2755               	addwf	sprintf@ap& (0+255),f,b
  2415  00124C  0E00               	movlw	0
  2416  00124E  0101               	movlb	1	; () banked
  2417  001250  2356               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2418                           
  2419                           ; BSR set to: 1
  2420                           ;doprnt.c: 840: if(fval < 0.0) {
  2421  001252  0101               	movlb	1	; () banked
  2422  001254  0101               	movlb	1	; () banked
  2423  001256  5167               	movf	(sprintf@fval+2)& (0+255),w,b
  2424  001258  0A80               	xorlw	128
  2425  00125A  0F80               	addlw	128
  2426  00125C  E107               	bnz	u5865
  2427  00125E  0E00               	movlw	0
  2428  001260  0101               	movlb	1	; () banked
  2429  001262  5D66               	subwf	(sprintf@fval+1)& (0+255),w,b
  2430  001264  E103               	bnz	u5865
  2431  001266  0E00               	movlw	0
  2432  001268  0101               	movlb	1	; () banked
  2433  00126A  5D65               	subwf	sprintf@fval& (0+255),w,b
  2434  00126C                     u5865:
  2435  00126C  B0D8               	btfsc	status,0,c
  2436  00126E  D012               	goto	l7657
  2437                           
  2438                           ; BSR set to: 1
  2439                           ;doprnt.c: 841: fval = -fval;
  2440  001270  C165  F09D         	movff	sprintf@fval,___ftneg@f1
  2441  001274  C166  F09E         	movff	sprintf@fval+1,___ftneg@f1+1
  2442  001278  C167  F09F         	movff	sprintf@fval+2,___ftneg@f1+2
  2443  00127C  EC44  F037         	call	___ftneg	;wreg free
  2444  001280  C09D  F165         	movff	?___ftneg,sprintf@fval
  2445  001284  C09E  F166         	movff	?___ftneg+1,sprintf@fval+1
  2446  001288  C09F  F167         	movff	?___ftneg+2,sprintf@fval+2
  2447                           
  2448                           ;doprnt.c: 842: flag |= 0x03;
  2449  00128C  0E03               	movlw	3
  2450  00128E  0101               	movlb	1	; () banked
  2451  001290  0101               	movlb	1	; () banked
  2452  001292  135A               	iorwf	sprintf@flag& (0+255),f,b
  2453  001294                     l7657:
  2454                           
  2455                           ; BSR set to: 1
  2456                           ;doprnt.c: 843: }
  2457                           ;doprnt.c: 844: exp = 0;
  2458  001294  0E00               	movlw	0
  2459  001296  0101               	movlb	1	; () banked
  2460  001298  0101               	movlb	1	; () banked
  2461  00129A  6F64               	movwf	(sprintf@exp+1)& (0+255),b
  2462  00129C  0E00               	movlw	0
  2463  00129E  0101               	movlb	1	; () banked
  2464  0012A0  6F63               	movwf	sprintf@exp& (0+255),b
  2465                           
  2466                           ; BSR set to: 1
  2467                           ;doprnt.c: 845: if( fval!=0) {
  2468  0012A2  0E7F               	movlw	127
  2469  0012A4  0101               	movlb	1	; () banked
  2470  0012A6  0101               	movlb	1	; () banked
  2471  0012A8  1567               	andwf	(sprintf@fval+2)& (0+255),w,b
  2472  0012AA  0101               	movlb	1	; () banked
  2473  0012AC  1166               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2474  0012AE  0101               	movlb	1	; () banked
  2475  0012B0  1165               	iorwf	sprintf@fval& (0+255),w,b
  2476  0012B2  B4D8               	btfsc	status,2,c
  2477  0012B4  D0B7               	goto	l7685
  2478                           
  2479                           ; BSR set to: 1
  2480                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2481  0012B6  0E82               	movlw	130
  2482  0012B8  0101               	movlb	1	; () banked
  2483  0012BA  6F40               	movwf	??_sprintf& (0+255),b
  2484  0012BC  0EFF               	movlw	255
  2485  0012BE  6F41               	movwf	(??_sprintf+1)& (0+255),b
  2486  0012C0  0101               	movlb	1	; () banked
  2487  0012C2  C165  F142         	movff	sprintf@fval,??_sprintf+2
  2488  0012C6  0101               	movlb	1	; () banked
  2489  0012C8  C166  F143         	movff	sprintf@fval+1,??_sprintf+3
  2490  0012CC  0101               	movlb	1	; () banked
  2491  0012CE  C167  F144         	movff	sprintf@fval+2,??_sprintf+4
  2492  0012D2  0101               	movlb	1	; () banked
  2493  0012D4  C168  F145         	movff	sprintf@fval+3,??_sprintf+5
  2494  0012D8  0E10               	movlw	16
  2495  0012DA  D006               	goto	u5880
  2496  0012DC                     u5885:
  2497  0012DC  0101               	movlb	1	; () banked
  2498  0012DE  90D8               	bcf	status,0,c
  2499  0012E0  3345               	rrcf	(??_sprintf+5)& (0+255),f,b
  2500  0012E2  3344               	rrcf	(??_sprintf+4)& (0+255),f,b
  2501  0012E4  3343               	rrcf	(??_sprintf+3)& (0+255),f,b
  2502  0012E6  3342               	rrcf	(??_sprintf+2)& (0+255),f,b
  2503  0012E8                     u5880:
  2504  0012E8  2EE8               	decfsz	wreg,f,c
  2505  0012EA  D7F8               	goto	u5885
  2506  0012EC  0101               	movlb	1	; () banked
  2507  0012EE  5142               	movf	(??_sprintf+2)& (0+255),w,b
  2508  0012F0  0101               	movlb	1	; () banked
  2509  0012F2  2540               	addwf	??_sprintf& (0+255),w,b
  2510  0012F4  0101               	movlb	1	; () banked
  2511  0012F6  0101               	movlb	1	; () banked
  2512  0012F8  6F63               	movwf	sprintf@exp& (0+255),b
  2513  0012FA  0101               	movlb	1	; () banked
  2514  0012FC  0101               	movlb	1	; () banked
  2515  0012FE  0E00               	movlw	0
  2516  001300  2141               	addwfc	(??_sprintf+1)& (0+255),w,b
  2517  001302  6F64               	movwf	(sprintf@exp+1)& (0+255),b
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;doprnt.c: 847: exp--;
  2521  001304  0101               	movlb	1	; () banked
  2522  001306  0101               	movlb	1	; () banked
  2523  001308  0763               	decf	sprintf@exp& (0+255),f,b
  2524  00130A  A0D8               	btfss	status,0,c
  2525  00130C  0764               	decf	(sprintf@exp+1)& (0+255),f,b
  2526                           
  2527                           ; BSR set to: 1
  2528                           ;doprnt.c: 848: exp *= 3;
  2529  00130E  C163  F0AD         	movff	sprintf@exp,___wmul@multiplier
  2530  001312  C164  F0AE         	movff	sprintf@exp+1,___wmul@multiplier+1
  2531  001316  0E00               	movlw	0
  2532  001318  0100               	movlb	0	; () banked
  2533  00131A  0100               	movlb	0	; () banked
  2534  00131C  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2535  00131E  0E03               	movlw	3
  2536  001320  0100               	movlb	0	; () banked
  2537  001322  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  2538  001324  ECA4  F034         	call	___wmul	;wreg free
  2539  001328  0100               	movlb	0	; () banked
  2540  00132A  C0AD  F163         	movff	?___wmul,sprintf@exp
  2541  00132E  0100               	movlb	0	; () banked
  2542  001330  C0AE  F164         	movff	?___wmul+1,sprintf@exp+1
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;doprnt.c: 849: exp /= 10;
  2546  001334  C163  F0A4         	movff	sprintf@exp,___awdiv@dividend
  2547  001338  C164  F0A5         	movff	sprintf@exp+1,___awdiv@dividend+1
  2548  00133C  0E00               	movlw	0
  2549  00133E  0100               	movlb	0	; () banked
  2550  001340  0100               	movlb	0	; () banked
  2551  001342  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  2552  001344  0E0A               	movlw	10
  2553  001346  0100               	movlb	0	; () banked
  2554  001348  6FA6               	movwf	___awdiv@divisor& (0+255),b
  2555  00134A  EC92  F02A         	call	___awdiv	;wreg free
  2556  00134E  0100               	movlb	0	; () banked
  2557  001350  C0A4  F163         	movff	?___awdiv,sprintf@exp
  2558  001354  0100               	movlb	0	; () banked
  2559  001356  C0A5  F164         	movff	?___awdiv+1,sprintf@exp+1
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;doprnt.c: 850: if(exp < 0)
  2563  00135A  0101               	movlb	1	; () banked
  2564  00135C  0101               	movlb	1	; () banked
  2565  00135E  5164               	movf	(sprintf@exp+1)& (0+255),w,b
  2566  001360  0A80               	xorlw	128
  2567  001362  6EF3               	movwf	prodl,c
  2568  001364  0E80               	movlw	128
  2569  001366  5CF3               	subwf	prodl,w,c
  2570  001368  0E00               	movlw	0
  2571  00136A  B4D8               	btfsc	status,2,c
  2572  00136C  5D63               	subwf	sprintf@exp& (0+255),w,b
  2573  00136E  B0D8               	btfsc	status,0,c
  2574  001370  D005               	goto	l7673
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;doprnt.c: 851: exp--;
  2578  001372  0101               	movlb	1	; () banked
  2579  001374  0101               	movlb	1	; () banked
  2580  001376  0763               	decf	sprintf@exp& (0+255),f,b
  2581  001378  A0D8               	btfss	status,0,c
  2582  00137A  0764               	decf	(sprintf@exp+1)& (0+255),f,b
  2583  00137C                     l7673:
  2584                           
  2585                           ; BSR set to: 1
  2586                           ;doprnt.c: 855: integ = scale(-exp);
  2587  00137C  0101               	movlb	1	; () banked
  2588  00137E  0101               	movlb	1	; () banked
  2589  001380  5163               	movf	sprintf@exp& (0+255),w,b
  2590  001382  0800               	sublw	0
  2591  001384  EC6F  F015         	call	_scale
  2592  001388  C100  F157         	movff	?_scale,sprintf@integ
  2593  00138C  C101  F158         	movff	?_scale+1,sprintf@integ+1
  2594  001390  C102  F159         	movff	?_scale+2,sprintf@integ+2
  2595                           
  2596                           ;doprnt.c: 856: integ *= fval;
  2597  001394  0101               	movlb	1	; () banked
  2598  001396  0E01               	movlw	high sprintf@integ
  2599  001398  0101               	movlb	1	; () banked
  2600  00139A  0101               	movlb	1	; () banked
  2601  00139C  6F01               	movwf	(___asftmul@f1p+1)& (0+255),b
  2602  00139E  0101               	movlb	1	; () banked
  2603  0013A0  0E57               	movlw	low sprintf@integ
  2604  0013A2  0101               	movlb	1	; () banked
  2605  0013A4  0101               	movlb	1	; () banked
  2606  0013A6  6F00               	movwf	___asftmul@f1p& (0+255),b
  2607  0013A8  C165  F102         	movff	sprintf@fval,___asftmul@f2
  2608  0013AC  C166  F103         	movff	sprintf@fval+1,___asftmul@f2+1
  2609  0013B0  C167  F104         	movff	sprintf@fval+2,___asftmul@f2+2
  2610  0013B4  EC87  F036         	call	___asftmul	;wreg free
  2611                           
  2612                           ;doprnt.c: 857: if(integ < 1.0)
  2613  0013B8  C157  F09D         	movff	sprintf@integ,___ftge@ff1
  2614  0013BC  C158  F09E         	movff	sprintf@integ+1,___ftge@ff1+1
  2615  0013C0  C159  F09F         	movff	sprintf@integ+2,___ftge@ff1+2
  2616  0013C4  0E00               	movlw	0
  2617  0013C6  0100               	movlb	0	; () banked
  2618  0013C8  0100               	movlb	0	; () banked
  2619  0013CA  6FA0               	movwf	___ftge@ff2& (0+255),b
  2620  0013CC  0E80               	movlw	128
  2621  0013CE  0100               	movlb	0	; () banked
  2622  0013D0  0100               	movlb	0	; () banked
  2623  0013D2  6FA1               	movwf	(___ftge@ff2+1)& (0+255),b
  2624  0013D4  0E3F               	movlw	63
  2625  0013D6  0100               	movlb	0	; () banked
  2626  0013D8  0100               	movlb	0	; () banked
  2627  0013DA  6FA2               	movwf	(___ftge@ff2+2)& (0+255),b
  2628  0013DC  EC63  F02F         	call	___ftge	;wreg free
  2629  0013E0  B0D8               	btfsc	status,0,c
  2630  0013E2  D006               	goto	l7681
  2631                           
  2632                           ;doprnt.c: 858: exp--;
  2633  0013E4  0101               	movlb	1	; () banked
  2634  0013E6  0101               	movlb	1	; () banked
  2635  0013E8  0763               	decf	sprintf@exp& (0+255),f,b
  2636  0013EA  A0D8               	btfss	status,0,c
  2637  0013EC  0764               	decf	(sprintf@exp+1)& (0+255),f,b
  2638  0013EE  D01A               	goto	l7685
  2639  0013F0                     l7681:
  2640                           
  2641                           ;doprnt.c: 859: else if(integ >= 10.0)
  2642  0013F0  C157  F09D         	movff	sprintf@integ,___ftge@ff1
  2643  0013F4  C158  F09E         	movff	sprintf@integ+1,___ftge@ff1+1
  2644  0013F8  C159  F09F         	movff	sprintf@integ+2,___ftge@ff1+2
  2645  0013FC  0E00               	movlw	0
  2646  0013FE  0100               	movlb	0	; () banked
  2647  001400  0100               	movlb	0	; () banked
  2648  001402  6FA0               	movwf	___ftge@ff2& (0+255),b
  2649  001404  0E20               	movlw	32
  2650  001406  0100               	movlb	0	; () banked
  2651  001408  0100               	movlb	0	; () banked
  2652  00140A  6FA1               	movwf	(___ftge@ff2+1)& (0+255),b
  2653  00140C  0E41               	movlw	65
  2654  00140E  0100               	movlb	0	; () banked
  2655  001410  0100               	movlb	0	; () banked
  2656  001412  6FA2               	movwf	(___ftge@ff2+2)& (0+255),b
  2657  001414  EC63  F02F         	call	___ftge	;wreg free
  2658  001418  A0D8               	btfss	status,0,c
  2659  00141A  D004               	goto	l7685
  2660                           
  2661                           ;doprnt.c: 860: exp++;
  2662  00141C  0101               	movlb	1	; () banked
  2663  00141E  0101               	movlb	1	; () banked
  2664  001420  4B63               	infsnz	sprintf@exp& (0+255),f,b
  2665  001422  2B64               	incf	(sprintf@exp+1)& (0+255),f,b
  2666  001424                     l7685:
  2667                           
  2668                           ;doprnt.c: 861: }
  2669                           ;doprnt.c: 1121: if(prec <= 12)
  2670  001424  0101               	movlb	1	; () banked
  2671  001426  0101               	movlb	1	; () banked
  2672  001428  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  2673  00142A  0A80               	xorlw	128
  2674  00142C  6EF3               	movwf	prodl,c
  2675  00142E  0E80               	movlw	128
  2676  001430  5CF3               	subwf	prodl,w,c
  2677  001432  0E0D               	movlw	13
  2678  001434  B4D8               	btfsc	status,2,c
  2679  001436  5D68               	subwf	sprintf@prec& (0+255),w,b
  2680  001438  B0D8               	btfsc	status,0,c
  2681  00143A  D017               	goto	l7689
  2682                           
  2683                           ; BSR set to: 1
  2684                           ;doprnt.c: 1122: fval += fround(prec);
  2685  00143C  0101               	movlb	1	; () banked
  2686  00143E  0E01               	movlw	high sprintf@fval
  2687  001440  0101               	movlb	1	; () banked
  2688  001442  0101               	movlb	1	; () banked
  2689  001444  6F0D               	movwf	(___asftadd@f1p+1)& (0+255),b
  2690  001446  0101               	movlb	1	; () banked
  2691  001448  0E65               	movlw	low sprintf@fval
  2692  00144A  0101               	movlb	1	; () banked
  2693  00144C  0101               	movlb	1	; () banked
  2694  00144E  6F0C               	movwf	___asftadd@f1p& (0+255),b
  2695  001450  0101               	movlb	1	; () banked
  2696  001452  0101               	movlb	1	; () banked
  2697  001454  5168               	movf	sprintf@prec& (0+255),w,b
  2698  001456  ECC7  F01A         	call	_fround
  2699  00145A  C100  F10E         	movff	?_fround,___asftadd@f2
  2700  00145E  C101  F10F         	movff	?_fround+1,___asftadd@f2+1
  2701  001462  C102  F110         	movff	?_fround+2,___asftadd@f2+2
  2702  001466  ECA8  F036         	call	___asftadd	;wreg free
  2703  00146A                     l7689:
  2704                           
  2705                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2706  00146A  0101               	movlb	1	; () banked
  2707  00146C  0101               	movlb	1	; () banked
  2708  00146E  5164               	movf	(sprintf@exp+1)& (0+255),w,b
  2709  001470  0A80               	xorlw	128
  2710  001472  6EF3               	movwf	prodl,c
  2711  001474  0E80               	movlw	128
  2712  001476  5CF3               	subwf	prodl,w,c
  2713  001478  0E0A               	movlw	10
  2714  00147A  B4D8               	btfsc	status,2,c
  2715  00147C  5D63               	subwf	sprintf@exp& (0+255),w,b
  2716  00147E  B0D8               	btfsc	status,0,c
  2717  001480  D02B               	goto	l7697
  2718                           
  2719                           ; BSR set to: 1
  2720  001482  0E7F               	movlw	127
  2721  001484  0101               	movlb	1	; () banked
  2722  001486  0101               	movlb	1	; () banked
  2723  001488  1567               	andwf	(sprintf@fval+2)& (0+255),w,b
  2724  00148A  0101               	movlb	1	; () banked
  2725  00148C  1166               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2726  00148E  0101               	movlb	1	; () banked
  2727  001490  1165               	iorwf	sprintf@fval& (0+255),w,b
  2728  001492  B4D8               	btfsc	status,2,c
  2729  001494  D077               	goto	l7713
  2730                           
  2731                           ; BSR set to: 1
  2732  001496  C165  F107         	movff	sprintf@fval,___fttol@f1
  2733  00149A  C166  F108         	movff	sprintf@fval+1,___fttol@f1+1
  2734  00149E  C167  F109         	movff	sprintf@fval+2,___fttol@f1+2
  2735  0014A2  EC69  F026         	call	___fttol	;wreg free
  2736  0014A6  C107  F140         	movff	?___fttol,??_sprintf
  2737  0014AA  C108  F141         	movff	?___fttol+1,??_sprintf+1
  2738  0014AE  C109  F142         	movff	?___fttol+2,??_sprintf+2
  2739  0014B2  C10A  F143         	movff	?___fttol+3,??_sprintf+3
  2740  0014B6  0101               	movlb	1	; () banked
  2741  0014B8  5143               	movf	(??_sprintf+3)& (0+255),w,b
  2742  0014BA  1140               	iorwf	??_sprintf& (0+255),w,b
  2743  0014BC  1141               	iorwf	(??_sprintf+1)& (0+255),w,b
  2744  0014BE  1142               	iorwf	(??_sprintf+2)& (0+255),w,b
  2745  0014C0  A4D8               	btfss	status,2,c
  2746  0014C2  D060               	goto	l7713
  2747                           
  2748                           ; BSR set to: 1
  2749  0014C4  0101               	movlb	1	; () banked
  2750  0014C6  0101               	movlb	1	; () banked
  2751  0014C8  5164               	movf	(sprintf@exp+1)& (0+255),w,b
  2752  0014CA  0A80               	xorlw	128
  2753  0014CC  0F80               	addlw	-128
  2754  0014CE  0E02               	movlw	2
  2755  0014D0  B4D8               	btfsc	status,2,c
  2756  0014D2  5D63               	subwf	sprintf@exp& (0+255),w,b
  2757  0014D4  A0D8               	btfss	status,0,c
  2758  0014D6  D056               	goto	l7713
  2759  0014D8                     l7697:
  2760                           
  2761                           ; BSR set to: 1
  2762                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2763  0014D8  C157  F09D         	movff	sprintf@integ,___ftge@ff1
  2764  0014DC  C158  F09E         	movff	sprintf@integ+1,___ftge@ff1+1
  2765  0014E0  C159  F09F         	movff	sprintf@integ+2,___ftge@ff1+2
  2766  0014E4  0E70               	movlw	112
  2767  0014E6  0100               	movlb	0	; () banked
  2768  0014E8  0100               	movlb	0	; () banked
  2769  0014EA  6FA0               	movwf	___ftge@ff2& (0+255),b
  2770  0014EC  0E89               	movlw	137
  2771  0014EE  0100               	movlb	0	; () banked
  2772  0014F0  0100               	movlb	0	; () banked
  2773  0014F2  6FA1               	movwf	(___ftge@ff2+1)& (0+255),b
  2774  0014F4  0E40               	movlw	64
  2775  0014F6  0100               	movlb	0	; () banked
  2776  0014F8  0100               	movlb	0	; () banked
  2777  0014FA  6FA2               	movwf	(___ftge@ff2+2)& (0+255),b
  2778  0014FC  EC63  F02F         	call	___ftge	;wreg free
  2779  001500  B0D8               	btfsc	status,0,c
  2780  001502  D003               	goto	l7701
  2781                           
  2782                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2783  001504  0101               	movlb	1	; () banked
  2784  001506  0EF7               	movlw	247
  2785  001508  D002               	goto	L3
  2786  00150A                     l7701:
  2787                           
  2788                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2789  00150A  0101               	movlb	1	; () banked
  2790  00150C  0EF8               	movlw	248
  2791  00150E                     L3:
  2792  00150E  0101               	movlb	1	; () banked
  2793  001510  2763               	addwf	sprintf@exp& (0+255),f,b
  2794  001512  0EFF               	movlw	255
  2795  001514  0101               	movlb	1	; () banked
  2796  001516  2364               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2797                           
  2798                           ; BSR set to: 1
  2799                           ;doprnt.c: 1133: }
  2800                           ;doprnt.c: 1134: integ = scale(exp);
  2801                           
  2802                           ; BSR set to: 1
  2803  001518  0101               	movlb	1	; () banked
  2804  00151A  0101               	movlb	1	; () banked
  2805  00151C  5163               	movf	sprintf@exp& (0+255),w,b
  2806  00151E  EC6F  F015         	call	_scale
  2807  001522  C100  F157         	movff	?_scale,sprintf@integ
  2808  001526  C101  F158         	movff	?_scale+1,sprintf@integ+1
  2809  00152A  C102  F159         	movff	?_scale+2,sprintf@integ+2
  2810                           
  2811                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2812  00152E  C165  F09D         	movff	sprintf@fval,__tdiv_to_l_@f1
  2813  001532  C166  F09E         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  2814  001536  C167  F09F         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  2815  00153A  C157  F0A0         	movff	sprintf@integ,__tdiv_to_l_@f2
  2816  00153E  C158  F0A1         	movff	sprintf@integ+1,__tdiv_to_l_@f2+1
  2817  001542  C159  F0A2         	movff	sprintf@integ+2,__tdiv_to_l_@f2+2
  2818  001546  EC9D  F020         	call	__tdiv_to_l_	;wreg free
  2819  00154A  C09D  F149         	movff	?__tdiv_to_l_,_sprintf$1054
  2820  00154E  C09E  F14A         	movff	?__tdiv_to_l_+1,_sprintf$1054+1
  2821  001552  C09F  F14B         	movff	?__tdiv_to_l_+2,_sprintf$1054+2
  2822  001556  C0A0  F14C         	movff	?__tdiv_to_l_+3,_sprintf$1054+3
  2823  00155A  C149  F15E         	movff	_sprintf$1054,sprintf@_val
  2824  00155E  C14A  F15F         	movff	_sprintf$1054+1,sprintf@_val+1
  2825  001562  C14B  F160         	movff	_sprintf$1054+2,sprintf@_val+2
  2826  001566  C14C  F161         	movff	_sprintf$1054+3,sprintf@_val+3
  2827                           
  2828                           ;doprnt.c: 1138: fval = 0.0;
  2829  00156A  0E00               	movlw	0
  2830  00156C  0101               	movlb	1	; () banked
  2831  00156E  0101               	movlb	1	; () banked
  2832  001570  6F65               	movwf	sprintf@fval& (0+255),b
  2833  001572  0E00               	movlw	0
  2834  001574  0101               	movlb	1	; () banked
  2835  001576  0101               	movlb	1	; () banked
  2836  001578  6F66               	movwf	(sprintf@fval+1)& (0+255),b
  2837  00157A  0E00               	movlw	0
  2838  00157C  0101               	movlb	1	; () banked
  2839  00157E  0101               	movlb	1	; () banked
  2840  001580  6F67               	movwf	(sprintf@fval+2)& (0+255),b
  2841                           
  2842                           ;doprnt.c: 1139: } else {
  2843  001582  D033               	goto	l7719
  2844  001584                     l7713:
  2845                           
  2846                           ; BSR set to: 1
  2847                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2848  001584  C165  F107         	movff	sprintf@fval,___fttol@f1
  2849  001588  C166  F108         	movff	sprintf@fval+1,___fttol@f1+1
  2850  00158C  C167  F109         	movff	sprintf@fval+2,___fttol@f1+2
  2851  001590  EC69  F026         	call	___fttol	;wreg free
  2852  001594  C107  F15E         	movff	?___fttol,sprintf@_val
  2853  001598  C108  F15F         	movff	?___fttol+1,sprintf@_val+1
  2854  00159C  C109  F160         	movff	?___fttol+2,sprintf@_val+2
  2855  0015A0  C10A  F161         	movff	?___fttol+3,sprintf@_val+3
  2856                           
  2857                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2858  0015A4  0101               	movlb	1	; () banked
  2859  0015A6  0E01               	movlw	high sprintf@fval
  2860  0015A8  0101               	movlb	1	; () banked
  2861  0015AA  0101               	movlb	1	; () banked
  2862  0015AC  6F13               	movwf	(___asftsub@f1p+1)& (0+255),b
  2863  0015AE  0101               	movlb	1	; () banked
  2864  0015B0  0E65               	movlw	low sprintf@fval
  2865  0015B2  0101               	movlb	1	; () banked
  2866  0015B4  0101               	movlb	1	; () banked
  2867  0015B6  6F12               	movwf	___asftsub@f1p& (0+255),b
  2868  0015B8  C15E  F0A5         	movff	sprintf@_val,___lltoft@c
  2869  0015BC  C15F  F0A6         	movff	sprintf@_val+1,___lltoft@c+1
  2870  0015C0  C160  F0A7         	movff	sprintf@_val+2,___lltoft@c+2
  2871  0015C4  C161  F0A8         	movff	sprintf@_val+3,___lltoft@c+3
  2872  0015C8  EC3E  F032         	call	___lltoft	;wreg free
  2873  0015CC  C0A5  F114         	movff	?___lltoft,___asftsub@f2
  2874  0015D0  C0A6  F115         	movff	?___lltoft+1,___asftsub@f2+1
  2875  0015D4  C0A7  F116         	movff	?___lltoft+2,___asftsub@f2+2
  2876  0015D8  EC45  F036         	call	___asftsub	;wreg free
  2877                           
  2878                           ;doprnt.c: 1142: exp = 0;
  2879  0015DC  0E00               	movlw	0
  2880  0015DE  0101               	movlb	1	; () banked
  2881  0015E0  0101               	movlb	1	; () banked
  2882  0015E2  6F64               	movwf	(sprintf@exp+1)& (0+255),b
  2883  0015E4  0E00               	movlw	0
  2884  0015E6  0101               	movlb	1	; () banked
  2885  0015E8  6F63               	movwf	sprintf@exp& (0+255),b
  2886  0015EA                     l7719:
  2887                           
  2888                           ; BSR set to: 1
  2889                           ;doprnt.c: 1143: }
  2890                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2891  0015EA  0101               	movlb	1	; () banked
  2892  0015EC  6F40               	movwf	??_sprintf& (0+255),b
  2893  0015EE  0E01               	movlw	1
  2894  0015F0  0101               	movlb	1	; () banked
  2895  0015F2  0101               	movlb	1	; () banked
  2896  0015F4  6F6A               	movwf	sprintf@c& (0+255),b
  2897  0015F6  0101               	movlb	1	; () banked
  2898  0015F8  5140               	movf	??_sprintf& (0+255),w,b
  2899  0015FA                     
  2900                           ; BSR set to: 1
  2901  0015FA  0101               	movlb	1	; () banked
  2902  0015FC  0101               	movlb	1	; () banked
  2903  0015FE  516A               	movf	sprintf@c& (0+255),w,b
  2904  001600  0A0A               	xorlw	10
  2905  001602  B4D8               	btfsc	status,2,c
  2906  001604  D024               	goto	l7733
  2907                           
  2908                           ; BSR set to: 1
  2909                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2910                           
  2911                           ; BSR set to: 1
  2912                           
  2913                           ; BSR set to: 1
  2914  001606  0101               	movlb	1	; () banked
  2915  001608  0101               	movlb	1	; () banked
  2916  00160A  516A               	movf	sprintf@c& (0+255),w,b
  2917  00160C  0D04               	mullw	4
  2918  00160E  0E01               	movlw	low _dpowers
  2919  001610  24F3               	addwf	prodl,w,c
  2920  001612  6EF6               	movwf	tblptrl,c
  2921  001614  0E0F               	movlw	high _dpowers
  2922  001616  20F4               	addwfc	prodh,w,c
  2923  001618  6EF7               	movwf	tblptrh,c
  2924  00161A  6AF8               	clrf	tblptru,c
  2925  00161C  0E00               	movlw	low (__mediumconst shr (0+16))
  2926  00161E  22F8               	addwfc	tblptru,f,c
  2927  001620  0009               	tblrd		*+
  2928  001622  50F5               	movf	tablat,w,c
  2929  001624  0101               	movlb	1	; () banked
  2930  001626  0101               	movlb	1	; () banked
  2931  001628  5D5E               	subwf	sprintf@_val& (0+255),w,b
  2932  00162A  0009               	tblrd		*+
  2933  00162C  50F5               	movf	tablat,w,c
  2934  00162E  0101               	movlb	1	; () banked
  2935  001630  595F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2936  001632  0009               	tblrd		*+
  2937  001634  50F5               	movf	tablat,w,c
  2938  001636  0101               	movlb	1	; () banked
  2939  001638  5960               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2940  00163A  0009               	tblrd		*+
  2941  00163C  50F5               	movf	tablat,w,c
  2942  00163E  0101               	movlb	1	; () banked
  2943  001640  5961               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2944  001642  A0D8               	btfss	status,0,c
  2945  001644  D004               	goto	l7733
  2946                           
  2947                           ; BSR set to: 1
  2948                           
  2949                           ; BSR set to: 1
  2950                           
  2951                           ; BSR set to: 1
  2952                           ;doprnt.c: 1147: break;
  2953  001646  0101               	movlb	1	; () banked
  2954  001648  0101               	movlb	1	; () banked
  2955  00164A  2B6A               	incf	sprintf@c& (0+255),f,b
  2956  00164C  D7D6               	goto	L4
  2957  00164E                     l7733:
  2958                           
  2959                           ; BSR set to: 1
  2960                           ;doprnt.c: 1151: width -= prec + c + exp;
  2961  00164E  0101               	movlb	1	; () banked
  2962  001650  C16A  F140         	movff	sprintf@c,??_sprintf
  2963  001654  0101               	movlb	1	; () banked
  2964  001656  6B41               	clrf	(??_sprintf+1)& (0+255),b
  2965  001658  BF40               	btfsc	??_sprintf& (0+255),7,b
  2966  00165A  0741               	decf	(??_sprintf+1)& (0+255),f,b
  2967  00165C  0101               	movlb	1	; () banked
  2968  00165E  0101               	movlb	1	; () banked
  2969  001660  5168               	movf	sprintf@prec& (0+255),w,b
  2970  001662  0101               	movlb	1	; () banked
  2971  001664  2740               	addwf	??_sprintf& (0+255),f,b
  2972  001666  0101               	movlb	1	; () banked
  2973  001668  0101               	movlb	1	; () banked
  2974  00166A  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  2975  00166C  0101               	movlb	1	; () banked
  2976  00166E  2341               	addwfc	(??_sprintf+1)& (0+255),f,b
  2977  001670  0101               	movlb	1	; () banked
  2978  001672  0101               	movlb	1	; () banked
  2979  001674  5163               	movf	sprintf@exp& (0+255),w,b
  2980  001676  0101               	movlb	1	; () banked
  2981  001678  2740               	addwf	??_sprintf& (0+255),f,b
  2982  00167A  0101               	movlb	1	; () banked
  2983  00167C  0101               	movlb	1	; () banked
  2984  00167E  5164               	movf	(sprintf@exp+1)& (0+255),w,b
  2985  001680  0101               	movlb	1	; () banked
  2986  001682  2341               	addwfc	(??_sprintf+1)& (0+255),f,b
  2987  001684  0101               	movlb	1	; () banked
  2988  001686  5140               	movf	??_sprintf& (0+255),w,b
  2989  001688  0101               	movlb	1	; () banked
  2990  00168A  0101               	movlb	1	; () banked
  2991  00168C  5F5C               	subwf	sprintf@width& (0+255),f,b
  2992  00168E  0101               	movlb	1	; () banked
  2993  001690  5141               	movf	(??_sprintf+1)& (0+255),w,b
  2994  001692  0101               	movlb	1	; () banked
  2995  001694  0101               	movlb	1	; () banked
  2996  001696  5B5D               	subwfb	(sprintf@width+1)& (0+255),f,b
  2997                           
  2998                           ;doprnt.c: 1152: if(
  2999                           ;doprnt.c: 1156: prec)
  3000  001698  0101               	movlb	1	; () banked
  3001  00169A  0101               	movlb	1	; () banked
  3002  00169C  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  3003  00169E  1168               	iorwf	sprintf@prec& (0+255),w,b
  3004  0016A0  B4D8               	btfsc	status,2,c
  3005  0016A2  D005               	goto	l7737
  3006                           
  3007                           ; BSR set to: 1
  3008                           ;doprnt.c: 1157: width--;
  3009  0016A4  0101               	movlb	1	; () banked
  3010  0016A6  0101               	movlb	1	; () banked
  3011  0016A8  075C               	decf	sprintf@width& (0+255),f,b
  3012  0016AA  A0D8               	btfss	status,0,c
  3013  0016AC  075D               	decf	(sprintf@width+1)& (0+255),f,b
  3014  0016AE                     l7737:
  3015                           
  3016                           ; BSR set to: 1
  3017                           ;doprnt.c: 1158: if(flag & 0x03)
  3018  0016AE  0E03               	movlw	3
  3019  0016B0  0101               	movlb	1	; () banked
  3020  0016B2  0101               	movlb	1	; () banked
  3021  0016B4  155A               	andwf	sprintf@flag& (0+255),w,b
  3022  0016B6  0101               	movlb	1	; () banked
  3023  0016B8  6F40               	movwf	??_sprintf& (0+255),b
  3024  0016BA  0E00               	movlw	0
  3025  0016BC  0101               	movlb	1	; () banked
  3026  0016BE  0101               	movlb	1	; () banked
  3027  0016C0  155B               	andwf	(sprintf@flag+1)& (0+255),w,b
  3028  0016C2  0101               	movlb	1	; () banked
  3029  0016C4  6F41               	movwf	(??_sprintf+1)& (0+255),b
  3030  0016C6  0101               	movlb	1	; () banked
  3031  0016C8  5141               	movf	(??_sprintf+1)& (0+255),w,b
  3032  0016CA  1140               	iorwf	??_sprintf& (0+255),w,b
  3033  0016CC  B4D8               	btfsc	status,2,c
  3034  0016CE  D010               	goto	l7747
  3035  0016D0  D00A               	goto	L5
  3036  0016D2                     l7741:
  3037                           
  3038                           ; BSR set to: 1
  3039                           ;doprnt.c: 1190: ((*sp++ = (' ')));
  3040  0016D2  C139  FFD9         	movff	sprintf@sp,fsr2l
  3041  0016D6  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  3042  0016DA  0E20               	movlw	32
  3043  0016DC  6EDF               	movwf	indf2,c
  3044                           
  3045                           ; BSR set to: 1
  3046  0016DE  0101               	movlb	1	; () banked
  3047  0016E0  0101               	movlb	1	; () banked
  3048  0016E2  4B39               	infsnz	sprintf@sp& (0+255),f,b
  3049  0016E4  2B3A               	incf	(sprintf@sp+1)& (0+255),f,b
  3050  0016E6                     L5:
  3051                           
  3052                           ; BSR set to: 1
  3053                           ;doprnt.c: 1191: width--;
  3054  0016E6  0101               	movlb	1	; () banked
  3055  0016E8  0101               	movlb	1	; () banked
  3056  0016EA  075C               	decf	sprintf@width& (0+255),f,b
  3057  0016EC  A0D8               	btfss	status,0,c
  3058  0016EE  075D               	decf	(sprintf@width+1)& (0+255),f,b
  3059  0016F0                     l7747:
  3060                           
  3061                           ; BSR set to: 1
  3062  0016F0  0101               	movlb	1	; () banked
  3063  0016F2  0101               	movlb	1	; () banked
  3064  0016F4  515D               	movf	(sprintf@width+1)& (0+255),w,b
  3065  0016F6  0A80               	xorlw	128
  3066  0016F8  6EF3               	movwf	prodl,c
  3067  0016FA  0E80               	movlw	128
  3068  0016FC  5CF3               	subwf	prodl,w,c
  3069  0016FE  0E01               	movlw	1
  3070  001700  B4D8               	btfsc	status,2,c
  3071  001702  5D5C               	subwf	sprintf@width& (0+255),w,b
  3072  001704  B0D8               	btfsc	status,0,c
  3073  001706  D7E5               	goto	l7741
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;doprnt.c: 1192: }
  3077                           ;doprnt.c: 1197: if(flag & 0x03)
  3078                           
  3079                           ; BSR set to: 1
  3080  001708  0E03               	movlw	3
  3081  00170A  0101               	movlb	1	; () banked
  3082  00170C  0101               	movlb	1	; () banked
  3083  00170E  155A               	andwf	sprintf@flag& (0+255),w,b
  3084  001710  0101               	movlb	1	; () banked
  3085  001712  6F40               	movwf	??_sprintf& (0+255),b
  3086  001714  0E00               	movlw	0
  3087  001716  0101               	movlb	1	; () banked
  3088  001718  0101               	movlb	1	; () banked
  3089  00171A  155B               	andwf	(sprintf@flag+1)& (0+255),w,b
  3090  00171C  0101               	movlb	1	; () banked
  3091  00171E  6F41               	movwf	(??_sprintf+1)& (0+255),b
  3092  001720  0101               	movlb	1	; () banked
  3093  001722  5141               	movf	(??_sprintf+1)& (0+255),w,b
  3094  001724  1140               	iorwf	??_sprintf& (0+255),w,b
  3095  001726  B4D8               	btfsc	status,2,c
  3096  001728  D061               	goto	l7763
  3097                           
  3098                           ; BSR set to: 1
  3099                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  3100  00172A  C139  FFD9         	movff	sprintf@sp,fsr2l
  3101  00172E  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  3102  001732  0E2D               	movlw	45
  3103  001734  D056               	goto	L6
  3104  001736                     l7755:
  3105                           
  3106                           ; BSR set to: 1
  3107                           ;doprnt.c: 1209: {
  3108                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  3109  001736  C15E  F09D         	movff	sprintf@_val,___lldiv@dividend
  3110  00173A  C15F  F09E         	movff	sprintf@_val+1,___lldiv@dividend+1
  3111  00173E  C160  F09F         	movff	sprintf@_val+2,___lldiv@dividend+2
  3112  001742  C161  F0A0         	movff	sprintf@_val+3,___lldiv@dividend+3
  3113  001746  0101               	movlb	1	; () banked
  3114  001748  0101               	movlb	1	; () banked
  3115  00174A  516A               	movf	sprintf@c& (0+255),w,b
  3116  00174C  0D04               	mullw	4
  3117  00174E  0E01               	movlw	low _dpowers
  3118  001750  24F3               	addwf	prodl,w,c
  3119  001752  6EF6               	movwf	tblptrl,c
  3120  001754  0E0F               	movlw	high _dpowers
  3121  001756  20F4               	addwfc	prodh,w,c
  3122  001758  6EF7               	movwf	tblptrh,c
  3123  00175A  6AF8               	clrf	tblptru,c
  3124  00175C  0E00               	movlw	low (__mediumconst shr (0+16))
  3125  00175E  22F8               	addwfc	tblptru,f,c
  3126  001760  0009               	tblrd		*+
  3127  001762  0100               	movlb	0	; () banked
  3128  001764  CFF5 F0A1          	movff	tablat,___lldiv@divisor
  3129  001768  0009               	tblrd		*+
  3130  00176A  0100               	movlb	0	; () banked
  3131  00176C  CFF5 F0A2          	movff	tablat,___lldiv@divisor+1
  3132  001770  0009               	tblrd		*+
  3133  001772  0100               	movlb	0	; () banked
  3134  001774  CFF5 F0A3          	movff	tablat,___lldiv@divisor+2
  3135  001778  000A               	tblrd		*-
  3136  00177A  0100               	movlb	0	; () banked
  3137  00177C  CFF5 F0A4          	movff	tablat,___lldiv@divisor+3
  3138  001780  EC67  F02D         	call	___lldiv	;wreg free
  3139  001784  C09D  F14D         	movff	?___lldiv,sprintf@vd
  3140  001788  C09E  F14E         	movff	?___lldiv+1,sprintf@vd+1
  3141  00178C  C09F  F14F         	movff	?___lldiv+2,sprintf@vd+2
  3142  001790  C0A0  F150         	movff	?___lldiv+3,sprintf@vd+3
  3143                           
  3144                           ;doprnt.c: 1211: vd %= 10;
  3145  001794  C14D  F0AB         	movff	sprintf@vd,___llmod@dividend
  3146  001798  C14E  F0AC         	movff	sprintf@vd+1,___llmod@dividend+1
  3147  00179C  C14F  F0AD         	movff	sprintf@vd+2,___llmod@dividend+2
  3148  0017A0  C150  F0AE         	movff	sprintf@vd+3,___llmod@dividend+3
  3149  0017A4  0E0A               	movlw	10
  3150  0017A6  0100               	movlb	0	; () banked
  3151  0017A8  0100               	movlb	0	; () banked
  3152  0017AA  6FAF               	movwf	___llmod@divisor& (0+255),b
  3153  0017AC  0E00               	movlw	0
  3154  0017AE  0100               	movlb	0	; () banked
  3155  0017B0  6FB0               	movwf	(___llmod@divisor+1)& (0+255),b
  3156  0017B2  0E00               	movlw	0
  3157  0017B4  0100               	movlb	0	; () banked
  3158  0017B6  6FB1               	movwf	(___llmod@divisor+2)& (0+255),b
  3159  0017B8  0E00               	movlw	0
  3160  0017BA  0100               	movlb	0	; () banked
  3161  0017BC  6FB2               	movwf	(___llmod@divisor+3)& (0+255),b
  3162  0017BE  ECC2  F030         	call	___llmod	;wreg free
  3163  0017C2  C0AB  F14D         	movff	?___llmod,sprintf@vd
  3164  0017C6  C0AC  F14E         	movff	?___llmod+1,sprintf@vd+1
  3165  0017CA  C0AD  F14F         	movff	?___llmod+2,sprintf@vd+2
  3166  0017CE  C0AE  F150         	movff	?___llmod+3,sprintf@vd+3
  3167                           
  3168                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  3169  0017D2  0101               	movlb	1	; () banked
  3170  0017D4  0101               	movlb	1	; () banked
  3171  0017D6  514D               	movf	sprintf@vd& (0+255),w,b
  3172  0017D8  0F30               	addlw	48
  3173  0017DA  C139  FFD9         	movff	sprintf@sp,fsr2l
  3174  0017DE  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  3175  0017E2                     L6:
  3176  0017E2  6EDF               	movwf	indf2,c
  3177                           
  3178                           ; BSR set to: 1
  3179  0017E4  0101               	movlb	1	; () banked
  3180  0017E6  0101               	movlb	1	; () banked
  3181  0017E8  4B39               	infsnz	sprintf@sp& (0+255),f,b
  3182  0017EA  2B3A               	incf	(sprintf@sp+1)& (0+255),f,b
  3183  0017EC                     l7763:
  3184                           
  3185                           ; BSR set to: 1
  3186  0017EC  0101               	movlb	1	; () banked
  3187  0017EE  0101               	movlb	1	; () banked
  3188  0017F0  076A               	decf	sprintf@c& (0+255),f,b
  3189  0017F2  0101               	movlb	1	; () banked
  3190  0017F4  296A               	incf	sprintf@c& (0+255),w,b
  3191  0017F6  B4D8               	btfsc	status,2,c
  3192  0017F8  D010               	goto	l7771
  3193  0017FA  D79D               	goto	l7755
  3194  0017FC                     l7765:
  3195                           
  3196                           ; BSR set to: 1
  3197                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  3198  0017FC  C139  FFD9         	movff	sprintf@sp,fsr2l
  3199  001800  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  3200  001804  0E30               	movlw	48
  3201  001806  6EDF               	movwf	indf2,c
  3202                           
  3203                           ; BSR set to: 1
  3204  001808  0101               	movlb	1	; () banked
  3205  00180A  0101               	movlb	1	; () banked
  3206  00180C  4B39               	infsnz	sprintf@sp& (0+255),f,b
  3207  00180E  2B3A               	incf	(sprintf@sp+1)& (0+255),f,b
  3208                           
  3209                           ; BSR set to: 1
  3210                           ;doprnt.c: 1218: exp--;
  3211  001810  0101               	movlb	1	; () banked
  3212  001812  0101               	movlb	1	; () banked
  3213  001814  0763               	decf	sprintf@exp& (0+255),f,b
  3214  001816  A0D8               	btfss	status,0,c
  3215  001818  0764               	decf	(sprintf@exp+1)& (0+255),f,b
  3216  00181A                     l7771:
  3217                           
  3218                           ; BSR set to: 1
  3219  00181A  0101               	movlb	1	; () banked
  3220  00181C  0101               	movlb	1	; () banked
  3221  00181E  5164               	movf	(sprintf@exp+1)& (0+255),w,b
  3222  001820  0A80               	xorlw	128
  3223  001822  6EF3               	movwf	prodl,c
  3224  001824  0E80               	movlw	128
  3225  001826  5CF3               	subwf	prodl,w,c
  3226  001828  0E01               	movlw	1
  3227  00182A  B4D8               	btfsc	status,2,c
  3228  00182C  5D63               	subwf	sprintf@exp& (0+255),w,b
  3229  00182E  B0D8               	btfsc	status,0,c
  3230  001830  D7E5               	goto	l7765
  3231                           
  3232                           ; BSR set to: 1
  3233                           ;doprnt.c: 1219: }
  3234                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3235                           
  3236                           ; BSR set to: 1
  3237  001832  0101               	movlb	1	; () banked
  3238  001834  0101               	movlb	1	; () banked
  3239  001836  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  3240  001838  0A80               	xorlw	128
  3241  00183A  0F80               	addlw	-128
  3242  00183C  0E09               	movlw	9
  3243  00183E  B4D8               	btfsc	status,2,c
  3244  001840  5D68               	subwf	sprintf@prec& (0+255),w,b
  3245  001842  A0D8               	btfss	status,0,c
  3246  001844  D009               	goto	l337
  3247                           
  3248                           ; BSR set to: 1
  3249                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3250  001846  0101               	movlb	1	; () banked
  3251  001848  6F40               	movwf	??_sprintf& (0+255),b
  3252  00184A  0E08               	movlw	8
  3253  00184C  0101               	movlb	1	; () banked
  3254  00184E  0101               	movlb	1	; () banked
  3255  001850  6F6A               	movwf	sprintf@c& (0+255),b
  3256  001852  0101               	movlb	1	; () banked
  3257  001854  5140               	movf	??_sprintf& (0+255),w,b
  3258  001856  D002               	goto	l7777
  3259  001858                     l337:
  3260                           
  3261                           ; BSR set to: 1
  3262                           ;doprnt.c: 1222: else
  3263                           ;doprnt.c: 1223: c = prec;
  3264  001858  C168  F16A         	movff	sprintf@prec,sprintf@c
  3265  00185C                     l7777:
  3266                           
  3267                           ; BSR set to: 1
  3268                           ;doprnt.c: 1224: prec -= c;
  3269  00185C  0101               	movlb	1	; () banked
  3270  00185E  0101               	movlb	1	; () banked
  3271  001860  516A               	movf	sprintf@c& (0+255),w,b
  3272  001862  0101               	movlb	1	; () banked
  3273  001864  0101               	movlb	1	; () banked
  3274  001866  5F68               	subwf	sprintf@prec& (0+255),f,b
  3275  001868  0E00               	movlw	0
  3276  00186A  0101               	movlb	1	; () banked
  3277  00186C  BF6A               	btfsc	sprintf@c& (0+255),7,b
  3278  00186E  0EFF               	movlw	255
  3279  001870  0101               	movlb	1	; () banked
  3280  001872  0101               	movlb	1	; () banked
  3281  001874  5B69               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3282                           
  3283                           ; BSR set to: 1
  3284                           ;doprnt.c: 1228: if(c)
  3285  001876  0101               	movlb	1	; () banked
  3286  001878  0101               	movlb	1	; () banked
  3287  00187A  516A               	movf	sprintf@c& (0+255),w,b
  3288  00187C  B4D8               	btfsc	status,2,c
  3289  00187E  D00A               	goto	l7785
  3290                           
  3291                           ; BSR set to: 1
  3292                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  3293  001880  C139  FFD9         	movff	sprintf@sp,fsr2l
  3294  001884  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  3295  001888  0E2E               	movlw	46
  3296  00188A  6EDF               	movwf	indf2,c
  3297                           
  3298                           ; BSR set to: 1
  3299  00188C  0101               	movlb	1	; () banked
  3300  00188E  0101               	movlb	1	; () banked
  3301  001890  4B39               	infsnz	sprintf@sp& (0+255),f,b
  3302  001892  2B3A               	incf	(sprintf@sp+1)& (0+255),f,b
  3303  001894                     l7785:
  3304                           
  3305                           ; BSR set to: 1
  3306                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3307  001894  0101               	movlb	1	; () banked
  3308  001896  0101               	movlb	1	; () banked
  3309  001898  516A               	movf	sprintf@c& (0+255),w,b
  3310  00189A  EC6F  F015         	call	_scale
  3311  00189E  C100  F146         	movff	?_scale,_sprintf$1693
  3312  0018A2  C101  F147         	movff	?_scale+1,_sprintf$1693+1
  3313  0018A6  C102  F148         	movff	?_scale+2,_sprintf$1693+2
  3314                           
  3315                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3316  0018AA  C165  F0B6         	movff	sprintf@fval,___ftmul@f2
  3317  0018AE  C166  F0B7         	movff	sprintf@fval+1,___ftmul@f2+1
  3318  0018B2  C167  F0B8         	movff	sprintf@fval+2,___ftmul@f2+2
  3319  0018B6  C146  F0B3         	movff	_sprintf$1693,___ftmul@f1
  3320  0018BA  C147  F0B4         	movff	_sprintf$1693+1,___ftmul@f1+1
  3321  0018BE  C148  F0B5         	movff	_sprintf$1693+2,___ftmul@f1+2
  3322  0018C2  ECC8  F023         	call	___ftmul	;wreg free
  3323  0018C6  C0B3  F107         	movff	?___ftmul,___fttol@f1
  3324  0018CA  C0B4  F108         	movff	?___ftmul+1,___fttol@f1+1
  3325  0018CE  C0B5  F109         	movff	?___ftmul+2,___fttol@f1+2
  3326  0018D2  EC69  F026         	call	___fttol	;wreg free
  3327  0018D6  C107  F15E         	movff	?___fttol,sprintf@_val
  3328  0018DA  C108  F15F         	movff	?___fttol+1,sprintf@_val+1
  3329  0018DE  C109  F160         	movff	?___fttol+2,sprintf@_val+2
  3330  0018E2  C10A  F161         	movff	?___fttol+3,sprintf@_val+3
  3331                           
  3332                           ;doprnt.c: 1237: while(c--) {
  3333  0018E6  D08A               	goto	l7799
  3334  0018E8                     l7789:
  3335                           
  3336                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  3337  0018E8  C15E  F09D         	movff	sprintf@_val,___lldiv@dividend
  3338  0018EC  C15F  F09E         	movff	sprintf@_val+1,___lldiv@dividend+1
  3339  0018F0  C160  F09F         	movff	sprintf@_val+2,___lldiv@dividend+2
  3340  0018F4  C161  F0A0         	movff	sprintf@_val+3,___lldiv@dividend+3
  3341  0018F8  0101               	movlb	1	; () banked
  3342  0018FA  0101               	movlb	1	; () banked
  3343  0018FC  516A               	movf	sprintf@c& (0+255),w,b
  3344  0018FE  0D04               	mullw	4
  3345  001900  0E01               	movlw	low _dpowers
  3346  001902  24F3               	addwf	prodl,w,c
  3347  001904  6EF6               	movwf	tblptrl,c
  3348  001906  0E0F               	movlw	high _dpowers
  3349  001908  20F4               	addwfc	prodh,w,c
  3350  00190A  6EF7               	movwf	tblptrh,c
  3351  00190C  6AF8               	clrf	tblptru,c
  3352  00190E  0E00               	movlw	low (__mediumconst shr (0+16))
  3353  001910  22F8               	addwfc	tblptru,f,c
  3354  001912  0009               	tblrd		*+
  3355  001914  0100               	movlb	0	; () banked
  3356  001916  CFF5 F0A1          	movff	tablat,___lldiv@divisor
  3357  00191A  0009               	tblrd		*+
  3358  00191C  0100               	movlb	0	; () banked
  3359  00191E  CFF5 F0A2          	movff	tablat,___lldiv@divisor+1
  3360  001922  0009               	tblrd		*+
  3361  001924  0100               	movlb	0	; () banked
  3362  001926  CFF5 F0A3          	movff	tablat,___lldiv@divisor+2
  3363  00192A  000A               	tblrd		*-
  3364  00192C  0100               	movlb	0	; () banked
  3365  00192E  CFF5 F0A4          	movff	tablat,___lldiv@divisor+3
  3366  001932  EC67  F02D         	call	___lldiv	;wreg free
  3367  001936  C09D  F151         	movff	?___lldiv,sprintf@vd_1056
  3368  00193A  C09E  F152         	movff	?___lldiv+1,sprintf@vd_1056+1
  3369  00193E  C09F  F153         	movff	?___lldiv+2,sprintf@vd_1056+2
  3370  001942  C0A0  F154         	movff	?___lldiv+3,sprintf@vd_1056+3
  3371                           
  3372                           ;doprnt.c: 1239: vd %= 10;
  3373  001946  C151  F0AB         	movff	sprintf@vd_1056,___llmod@dividend
  3374  00194A  C152  F0AC         	movff	sprintf@vd_1056+1,___llmod@dividend+1
  3375  00194E  C153  F0AD         	movff	sprintf@vd_1056+2,___llmod@dividend+2
  3376  001952  C154  F0AE         	movff	sprintf@vd_1056+3,___llmod@dividend+3
  3377  001956  0E0A               	movlw	10
  3378  001958  0100               	movlb	0	; () banked
  3379  00195A  0100               	movlb	0	; () banked
  3380  00195C  6FAF               	movwf	___llmod@divisor& (0+255),b
  3381  00195E  0E00               	movlw	0
  3382  001960  0100               	movlb	0	; () banked
  3383  001962  6FB0               	movwf	(___llmod@divisor+1)& (0+255),b
  3384  001964  0E00               	movlw	0
  3385  001966  0100               	movlb	0	; () banked
  3386  001968  6FB1               	movwf	(___llmod@divisor+2)& (0+255),b
  3387  00196A  0E00               	movlw	0
  3388  00196C  0100               	movlb	0	; () banked
  3389  00196E  6FB2               	movwf	(___llmod@divisor+3)& (0+255),b
  3390  001970  ECC2  F030         	call	___llmod	;wreg free
  3391  001974  C0AB  F151         	movff	?___llmod,sprintf@vd_1056
  3392  001978  C0AC  F152         	movff	?___llmod+1,sprintf@vd_1056+1
  3393  00197C  C0AD  F153         	movff	?___llmod+2,sprintf@vd_1056+2
  3394  001980  C0AE  F154         	movff	?___llmod+3,sprintf@vd_1056+3
  3395                           
  3396                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  3397  001984  0101               	movlb	1	; () banked
  3398  001986  0101               	movlb	1	; () banked
  3399  001988  5151               	movf	sprintf@vd_1056& (0+255),w,b
  3400  00198A  0F30               	addlw	48
  3401  00198C  C139  FFD9         	movff	sprintf@sp,fsr2l
  3402  001990  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  3403  001994  6EDF               	movwf	indf2,c
  3404                           
  3405                           ; BSR set to: 1
  3406  001996  0101               	movlb	1	; () banked
  3407  001998  0101               	movlb	1	; () banked
  3408  00199A  4B39               	infsnz	sprintf@sp& (0+255),f,b
  3409  00199C  2B3A               	incf	(sprintf@sp+1)& (0+255),f,b
  3410                           
  3411                           ; BSR set to: 1
  3412                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  3413  00199E  C15E  F0AB         	movff	sprintf@_val,___llmod@dividend
  3414  0019A2  C15F  F0AC         	movff	sprintf@_val+1,___llmod@dividend+1
  3415  0019A6  C160  F0AD         	movff	sprintf@_val+2,___llmod@dividend+2
  3416  0019AA  C161  F0AE         	movff	sprintf@_val+3,___llmod@dividend+3
  3417  0019AE  0101               	movlb	1	; () banked
  3418  0019B0  0101               	movlb	1	; () banked
  3419  0019B2  516A               	movf	sprintf@c& (0+255),w,b
  3420  0019B4  0D04               	mullw	4
  3421  0019B6  0E01               	movlw	low _dpowers
  3422  0019B8  24F3               	addwf	prodl,w,c
  3423  0019BA  6EF6               	movwf	tblptrl,c
  3424  0019BC  0E0F               	movlw	high _dpowers
  3425  0019BE  20F4               	addwfc	prodh,w,c
  3426  0019C0  6EF7               	movwf	tblptrh,c
  3427  0019C2  6AF8               	clrf	tblptru,c
  3428  0019C4  0E00               	movlw	low (__mediumconst shr (0+16))
  3429  0019C6  22F8               	addwfc	tblptru,f,c
  3430  0019C8  0009               	tblrd		*+
  3431  0019CA  0100               	movlb	0	; () banked
  3432  0019CC  CFF5 F0AF          	movff	tablat,___llmod@divisor
  3433  0019D0  0009               	tblrd		*+
  3434  0019D2  0100               	movlb	0	; () banked
  3435  0019D4  CFF5 F0B0          	movff	tablat,___llmod@divisor+1
  3436  0019D8  0009               	tblrd		*+
  3437  0019DA  0100               	movlb	0	; () banked
  3438  0019DC  CFF5 F0B1          	movff	tablat,___llmod@divisor+2
  3439  0019E0  000A               	tblrd		*-
  3440  0019E2  0100               	movlb	0	; () banked
  3441  0019E4  CFF5 F0B2          	movff	tablat,___llmod@divisor+3
  3442  0019E8  ECC2  F030         	call	___llmod	;wreg free
  3443  0019EC  C0AB  F15E         	movff	?___llmod,sprintf@_val
  3444  0019F0  C0AC  F15F         	movff	?___llmod+1,sprintf@_val+1
  3445  0019F4  C0AD  F160         	movff	?___llmod+2,sprintf@_val+2
  3446  0019F8  C0AE  F161         	movff	?___llmod+3,sprintf@_val+3
  3447  0019FC                     l7799:
  3448  0019FC  0101               	movlb	1	; () banked
  3449  0019FE  0101               	movlb	1	; () banked
  3450  001A00  076A               	decf	sprintf@c& (0+255),f,b
  3451  001A02  0101               	movlb	1	; () banked
  3452  001A04  296A               	incf	sprintf@c& (0+255),w,b
  3453  001A06  B4D8               	btfsc	status,2,c
  3454  001A08  D010               	goto	l7807
  3455  001A0A  D76E               	goto	l7789
  3456  001A0C                     l7801:
  3457                           
  3458                           ; BSR set to: 1
  3459                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  3460  001A0C  C139  FFD9         	movff	sprintf@sp,fsr2l
  3461  001A10  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  3462  001A14  0E30               	movlw	48
  3463  001A16  6EDF               	movwf	indf2,c
  3464                           
  3465                           ; BSR set to: 1
  3466  001A18  0101               	movlb	1	; () banked
  3467  001A1A  0101               	movlb	1	; () banked
  3468  001A1C  4B39               	infsnz	sprintf@sp& (0+255),f,b
  3469  001A1E  2B3A               	incf	(sprintf@sp+1)& (0+255),f,b
  3470                           
  3471                           ; BSR set to: 1
  3472                           ;doprnt.c: 1246: prec--;
  3473  001A20  0101               	movlb	1	; () banked
  3474  001A22  0101               	movlb	1	; () banked
  3475  001A24  0768               	decf	sprintf@prec& (0+255),f,b
  3476  001A26  A0D8               	btfss	status,0,c
  3477  001A28  0769               	decf	(sprintf@prec+1)& (0+255),f,b
  3478  001A2A                     l7807:
  3479                           
  3480                           ; BSR set to: 1
  3481  001A2A  0101               	movlb	1	; () banked
  3482  001A2C  0101               	movlb	1	; () banked
  3483  001A2E  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  3484  001A30  1168               	iorwf	sprintf@prec& (0+255),w,b
  3485  001A32  B4D8               	btfsc	status,2,c
  3486  001A34  D1CD               	goto	l7889
  3487  001A36  D7EA               	goto	l7801
  3488  001A38                     l7809:
  3489                           
  3490                           ; BSR set to: 1
  3491                           ;doprnt.c: 1255: }
  3492                           ;doprnt.c: 1262: {
  3493                           ;doprnt.c: 1268: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3494  001A38  C155  FFD9         	movff	sprintf@ap,fsr2l
  3495  001A3C  C156  FFDA         	movff	sprintf@ap+1,fsr2h
  3496  001A40  0101               	movlb	1	; () banked
  3497  001A42  CFDE F15E          	movff	postinc2,sprintf@_val
  3498  001A46  0101               	movlb	1	; () banked
  3499  001A48  CFDD F15F          	movff	postdec2,sprintf@_val+1
  3500  001A4C  0101               	movlb	1	; () banked
  3501  001A4E  0E00               	movlw	0
  3502  001A50  0101               	movlb	1	; () banked
  3503  001A52  BF5F               	btfsc	(sprintf@_val+1)& (0+255),7,b
  3504  001A54  0EFF               	movlw	-1
  3505  001A56  0101               	movlb	1	; () banked
  3506  001A58  6F60               	movwf	(sprintf@_val+2)& (0+255),b
  3507  001A5A  0101               	movlb	1	; () banked
  3508  001A5C  6F61               	movwf	(sprintf@_val+3)& (0+255),b
  3509                           
  3510                           ; BSR set to: 1
  3511  001A5E  0E02               	movlw	2
  3512  001A60  0101               	movlb	1	; () banked
  3513  001A62  0101               	movlb	1	; () banked
  3514  001A64  2755               	addwf	sprintf@ap& (0+255),f,b
  3515  001A66  0E00               	movlw	0
  3516  001A68  0101               	movlb	1	; () banked
  3517  001A6A  2356               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3518                           
  3519                           ; BSR set to: 1
  3520                           ;doprnt.c: 1270: if((long)_val._val < 0) {
  3521  001A6C  0101               	movlb	1	; () banked
  3522  001A6E  0101               	movlb	1	; () banked
  3523  001A70  5161               	movf	(sprintf@_val+3)& (0+255),w,b
  3524  001A72  0A80               	xorlw	128
  3525  001A74  0F80               	addlw	128
  3526  001A76  E10B               	bnz	u6115
  3527  001A78  0E00               	movlw	0
  3528  001A7A  0101               	movlb	1	; () banked
  3529  001A7C  5D60               	subwf	(sprintf@_val+2)& (0+255),w,b
  3530  001A7E  E107               	bnz	u6115
  3531  001A80  0E00               	movlw	0
  3532  001A82  0101               	movlb	1	; () banked
  3533  001A84  5D5F               	subwf	(sprintf@_val+1)& (0+255),w,b
  3534  001A86  E103               	bnz	u6115
  3535  001A88  0E00               	movlw	0
  3536  001A8A  0101               	movlb	1	; () banked
  3537  001A8C  5D5E               	subwf	sprintf@_val& (0+255),w,b
  3538  001A8E                     u6115:
  3539  001A8E  B0D8               	btfsc	status,0,c
  3540  001A90  D014               	goto	l7819
  3541                           
  3542                           ; BSR set to: 1
  3543                           ;doprnt.c: 1271: flag |= 0x03;
  3544  001A92  0E03               	movlw	3
  3545  001A94  0101               	movlb	1	; () banked
  3546  001A96  0101               	movlb	1	; () banked
  3547  001A98  135A               	iorwf	sprintf@flag& (0+255),f,b
  3548                           
  3549                           ; BSR set to: 1
  3550                           ;doprnt.c: 1272: _val._val = -_val._val;
  3551  001A9A  0101               	movlb	1	; () banked
  3552  001A9C  0101               	movlb	1	; () banked
  3553  001A9E  1F61               	comf	(sprintf@_val+3)& (0+255),f,b
  3554  001AA0  0101               	movlb	1	; () banked
  3555  001AA2  1F60               	comf	(sprintf@_val+2)& (0+255),f,b
  3556  001AA4  0101               	movlb	1	; () banked
  3557  001AA6  1F5F               	comf	(sprintf@_val+1)& (0+255),f,b
  3558  001AA8  0101               	movlb	1	; () banked
  3559  001AAA  6D5E               	negf	sprintf@_val& (0+255),b
  3560  001AAC  0E00               	movlw	0
  3561  001AAE  0101               	movlb	1	; () banked
  3562  001AB0  235F               	addwfc	(sprintf@_val+1)& (0+255),f,b
  3563  001AB2  0101               	movlb	1	; () banked
  3564  001AB4  2360               	addwfc	(sprintf@_val+2)& (0+255),f,b
  3565  001AB6  0101               	movlb	1	; () banked
  3566  001AB8  2361               	addwfc	(sprintf@_val+3)& (0+255),f,b
  3567  001ABA                     l7819:
  3568                           
  3569                           ; BSR set to: 1
  3570                           ;doprnt.c: 1273: }
  3571                           ;doprnt.c: 1275: }
  3572                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  3573  001ABA  0101               	movlb	1	; () banked
  3574  001ABC  0101               	movlb	1	; () banked
  3575  001ABE  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  3576  001AC0  1168               	iorwf	sprintf@prec& (0+255),w,b
  3577  001AC2  A4D8               	btfss	status,2,c
  3578  001AC4  D00C               	goto	l7825
  3579                           
  3580                           ; BSR set to: 1
  3581  001AC6  0101               	movlb	1	; () banked
  3582  001AC8  0101               	movlb	1	; () banked
  3583  001ACA  5161               	movf	(sprintf@_val+3)& (0+255),w,b
  3584  001ACC  115E               	iorwf	sprintf@_val& (0+255),w,b
  3585  001ACE  115F               	iorwf	(sprintf@_val+1)& (0+255),w,b
  3586  001AD0  1160               	iorwf	(sprintf@_val+2)& (0+255),w,b
  3587  001AD2  A4D8               	btfss	status,2,c
  3588  001AD4  D004               	goto	l7825
  3589                           
  3590                           ; BSR set to: 1
  3591                           ;doprnt.c: 1300: prec++;
  3592  001AD6  0101               	movlb	1	; () banked
  3593  001AD8  0101               	movlb	1	; () banked
  3594  001ADA  4B68               	infsnz	sprintf@prec& (0+255),f,b
  3595  001ADC  2B69               	incf	(sprintf@prec+1)& (0+255),f,b
  3596  001ADE                     l7825:
  3597                           
  3598                           ; BSR set to: 1
  3599                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3600  001ADE  0101               	movlb	1	; () banked
  3601  001AE0  6F40               	movwf	??_sprintf& (0+255),b
  3602  001AE2  0E01               	movlw	1
  3603  001AE4  0101               	movlb	1	; () banked
  3604  001AE6  0101               	movlb	1	; () banked
  3605  001AE8  6F6A               	movwf	sprintf@c& (0+255),b
  3606  001AEA  0101               	movlb	1	; () banked
  3607  001AEC  5140               	movf	??_sprintf& (0+255),w,b
  3608  001AEE                     
  3609                           ; BSR set to: 1
  3610  001AEE  0101               	movlb	1	; () banked
  3611  001AF0  0101               	movlb	1	; () banked
  3612  001AF2  516A               	movf	sprintf@c& (0+255),w,b
  3613  001AF4  0A0A               	xorlw	10
  3614  001AF6  B4D8               	btfsc	status,2,c
  3615  001AF8  D024               	goto	l7839
  3616                           
  3617                           ; BSR set to: 1
  3618                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3619                           
  3620                           ; BSR set to: 1
  3621                           
  3622                           ; BSR set to: 1
  3623  001AFA  0101               	movlb	1	; () banked
  3624  001AFC  0101               	movlb	1	; () banked
  3625  001AFE  516A               	movf	sprintf@c& (0+255),w,b
  3626  001B00  0D04               	mullw	4
  3627  001B02  0E01               	movlw	low _dpowers
  3628  001B04  24F3               	addwf	prodl,w,c
  3629  001B06  6EF6               	movwf	tblptrl,c
  3630  001B08  0E0F               	movlw	high _dpowers
  3631  001B0A  20F4               	addwfc	prodh,w,c
  3632  001B0C  6EF7               	movwf	tblptrh,c
  3633  001B0E  6AF8               	clrf	tblptru,c
  3634  001B10  0E00               	movlw	low (__mediumconst shr (0+16))
  3635  001B12  22F8               	addwfc	tblptru,f,c
  3636  001B14  0009               	tblrd		*+
  3637  001B16  50F5               	movf	tablat,w,c
  3638  001B18  0101               	movlb	1	; () banked
  3639  001B1A  0101               	movlb	1	; () banked
  3640  001B1C  5D5E               	subwf	sprintf@_val& (0+255),w,b
  3641  001B1E  0009               	tblrd		*+
  3642  001B20  50F5               	movf	tablat,w,c
  3643  001B22  0101               	movlb	1	; () banked
  3644  001B24  595F               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3645  001B26  0009               	tblrd		*+
  3646  001B28  50F5               	movf	tablat,w,c
  3647  001B2A  0101               	movlb	1	; () banked
  3648  001B2C  5960               	subwfb	(sprintf@_val+2)& (0+255),w,b
  3649  001B2E  0009               	tblrd		*+
  3650  001B30  50F5               	movf	tablat,w,c
  3651  001B32  0101               	movlb	1	; () banked
  3652  001B34  5961               	subwfb	(sprintf@_val+3)& (0+255),w,b
  3653  001B36  A0D8               	btfss	status,0,c
  3654  001B38  D004               	goto	l7839
  3655                           
  3656                           ; BSR set to: 1
  3657                           
  3658                           ; BSR set to: 1
  3659                           
  3660                           ; BSR set to: 1
  3661                           ;doprnt.c: 1316: break;
  3662  001B3A  0101               	movlb	1	; () banked
  3663  001B3C  0101               	movlb	1	; () banked
  3664  001B3E  2B6A               	incf	sprintf@c& (0+255),f,b
  3665  001B40  D7D6               	goto	L7
  3666  001B42                     l7839:
  3667                           
  3668                           ; BSR set to: 1
  3669                           ;doprnt.c: 1348: if(c < prec)
  3670  001B42  0E80               	movlw	128
  3671  001B44  0101               	movlb	1	; () banked
  3672  001B46  0101               	movlb	1	; () banked
  3673  001B48  BF6A               	btfsc	sprintf@c& (0+255),7,b
  3674  001B4A  0E7F               	movlw	127
  3675  001B4C  6F40               	movwf	??_sprintf& (0+255),b
  3676  001B4E  0101               	movlb	1	; () banked
  3677  001B50  0101               	movlb	1	; () banked
  3678  001B52  5168               	movf	sprintf@prec& (0+255),w,b
  3679  001B54  0101               	movlb	1	; () banked
  3680  001B56  0101               	movlb	1	; () banked
  3681  001B58  5D6A               	subwf	sprintf@c& (0+255),w,b
  3682  001B5A  0101               	movlb	1	; () banked
  3683  001B5C  0101               	movlb	1	; () banked
  3684  001B5E  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  3685  001B60  0A80               	xorlw	128
  3686  001B62  0101               	movlb	1	; () banked
  3687  001B64  5940               	subwfb	??_sprintf& (0+255),w,b
  3688  001B66  B0D8               	btfsc	status,0,c
  3689  001B68  D003               	goto	l7843
  3690                           
  3691                           ; BSR set to: 1
  3692                           ;doprnt.c: 1349: c = prec;
  3693  001B6A  C168  F16A         	movff	sprintf@prec,sprintf@c
  3694  001B6E  D020               	goto	l7847
  3695  001B70                     l7843:
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;doprnt.c: 1350: else if(prec < c)
  3699  001B70  0101               	movlb	1	; () banked
  3700  001B72  0101               	movlb	1	; () banked
  3701  001B74  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  3702  001B76  0A80               	xorlw	128
  3703  001B78  0101               	movlb	1	; () banked
  3704  001B7A  6F40               	movwf	??_sprintf& (0+255),b
  3705  001B7C  0101               	movlb	1	; () banked
  3706  001B7E  0101               	movlb	1	; () banked
  3707  001B80  516A               	movf	sprintf@c& (0+255),w,b
  3708  001B82  0101               	movlb	1	; () banked
  3709  001B84  0101               	movlb	1	; () banked
  3710  001B86  5D68               	subwf	sprintf@prec& (0+255),w,b
  3711  001B88  0E80               	movlw	128
  3712  001B8A  0101               	movlb	1	; () banked
  3713  001B8C  0101               	movlb	1	; () banked
  3714  001B8E  BF6A               	btfsc	sprintf@c& (0+255),7,b
  3715  001B90  0E7F               	movlw	127
  3716  001B92  0101               	movlb	1	; () banked
  3717  001B94  5940               	subwfb	??_sprintf& (0+255),w,b
  3718  001B96  B0D8               	btfsc	status,0,c
  3719  001B98  D00B               	goto	l7847
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;doprnt.c: 1351: prec = c;
  3723  001B9A  0101               	movlb	1	; () banked
  3724  001B9C  0101               	movlb	1	; () banked
  3725  001B9E  516A               	movf	sprintf@c& (0+255),w,b
  3726  001BA0  0101               	movlb	1	; () banked
  3727  001BA2  0101               	movlb	1	; () banked
  3728  001BA4  6F68               	movwf	sprintf@prec& (0+255),b
  3729  001BA6  0101               	movlb	1	; () banked
  3730  001BA8  6B69               	clrf	(sprintf@prec+1)& (0+255),b
  3731  001BAA  0101               	movlb	1	; () banked
  3732  001BAC  BF68               	btfsc	sprintf@prec& (0+255),7,b
  3733  001BAE  0769               	decf	(sprintf@prec+1)& (0+255),f,b
  3734  001BB0                     l7847:
  3735                           
  3736                           ; BSR set to: 1
  3737                           ;doprnt.c: 1354: if(width && flag & 0x03)
  3738  001BB0  0101               	movlb	1	; () banked
  3739  001BB2  0101               	movlb	1	; () banked
  3740  001BB4  515D               	movf	(sprintf@width+1)& (0+255),w,b
  3741  001BB6  115C               	iorwf	sprintf@width& (0+255),w,b
  3742  001BB8  B4D8               	btfsc	status,2,c
  3743  001BBA  D016               	goto	l7853
  3744                           
  3745                           ; BSR set to: 1
  3746  001BBC  0E03               	movlw	3
  3747  001BBE  0101               	movlb	1	; () banked
  3748  001BC0  0101               	movlb	1	; () banked
  3749  001BC2  155A               	andwf	sprintf@flag& (0+255),w,b
  3750  001BC4  0101               	movlb	1	; () banked
  3751  001BC6  6F40               	movwf	??_sprintf& (0+255),b
  3752  001BC8  0E00               	movlw	0
  3753  001BCA  0101               	movlb	1	; () banked
  3754  001BCC  0101               	movlb	1	; () banked
  3755  001BCE  155B               	andwf	(sprintf@flag+1)& (0+255),w,b
  3756  001BD0  0101               	movlb	1	; () banked
  3757  001BD2  6F41               	movwf	(??_sprintf+1)& (0+255),b
  3758  001BD4  0101               	movlb	1	; () banked
  3759  001BD6  5141               	movf	(??_sprintf+1)& (0+255),w,b
  3760  001BD8  1140               	iorwf	??_sprintf& (0+255),w,b
  3761  001BDA  B4D8               	btfsc	status,2,c
  3762  001BDC  D005               	goto	l7853
  3763                           
  3764                           ; BSR set to: 1
  3765                           ;doprnt.c: 1355: width--;
  3766  001BDE  0101               	movlb	1	; () banked
  3767  001BE0  0101               	movlb	1	; () banked
  3768  001BE2  075C               	decf	sprintf@width& (0+255),f,b
  3769  001BE4  A0D8               	btfss	status,0,c
  3770  001BE6  075D               	decf	(sprintf@width+1)& (0+255),f,b
  3771  001BE8                     l7853:
  3772                           
  3773                           ; BSR set to: 1
  3774                           ;doprnt.c: 1357: if(flag & 0x4000) {
  3775  001BE8  0101               	movlb	1	; () banked
  3776  001BEA  0101               	movlb	1	; () banked
  3777  001BEC  AD5B               	btfss	(sprintf@flag+1)& (0+255),6,b
  3778  001BEE  D028               	goto	l7861
  3779                           
  3780                           ; BSR set to: 1
  3781                           ;doprnt.c: 1358: if(width > prec)
  3782  001BF0  0101               	movlb	1	; () banked
  3783  001BF2  0101               	movlb	1	; () banked
  3784  001BF4  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  3785  001BF6  0A80               	xorlw	128
  3786  001BF8  0101               	movlb	1	; () banked
  3787  001BFA  6F40               	movwf	??_sprintf& (0+255),b
  3788  001BFC  0101               	movlb	1	; () banked
  3789  001BFE  0101               	movlb	1	; () banked
  3790  001C00  515C               	movf	sprintf@width& (0+255),w,b
  3791  001C02  0101               	movlb	1	; () banked
  3792  001C04  0101               	movlb	1	; () banked
  3793  001C06  5D68               	subwf	sprintf@prec& (0+255),w,b
  3794  001C08  0101               	movlb	1	; () banked
  3795  001C0A  0101               	movlb	1	; () banked
  3796  001C0C  515D               	movf	(sprintf@width+1)& (0+255),w,b
  3797  001C0E  0A80               	xorlw	128
  3798  001C10  0101               	movlb	1	; () banked
  3799  001C12  5940               	subwfb	??_sprintf& (0+255),w,b
  3800  001C14  B0D8               	btfsc	status,0,c
  3801  001C16  D00D               	goto	l7859
  3802                           
  3803                           ; BSR set to: 1
  3804                           ;doprnt.c: 1359: width -= prec;
  3805  001C18  0101               	movlb	1	; () banked
  3806  001C1A  0101               	movlb	1	; () banked
  3807  001C1C  5168               	movf	sprintf@prec& (0+255),w,b
  3808  001C1E  0101               	movlb	1	; () banked
  3809  001C20  0101               	movlb	1	; () banked
  3810  001C22  5F5C               	subwf	sprintf@width& (0+255),f,b
  3811  001C24  0101               	movlb	1	; () banked
  3812  001C26  0101               	movlb	1	; () banked
  3813  001C28  5169               	movf	(sprintf@prec+1)& (0+255),w,b
  3814  001C2A  0101               	movlb	1	; () banked
  3815  001C2C  0101               	movlb	1	; () banked
  3816  001C2E  5B5D               	subwfb	(sprintf@width+1)& (0+255),f,b
  3817  001C30  D007               	goto	l7861
  3818  001C32                     l7859:
  3819                           
  3820                           ; BSR set to: 1
  3821                           ;doprnt.c: 1360: else
  3822                           ;doprnt.c: 1361: width = 0;
  3823  001C32  0E00               	movlw	0
  3824  001C34  0101               	movlb	1	; () banked
  3825  001C36  0101               	movlb	1	; () banked
  3826  001C38  6F5D               	movwf	(sprintf@width+1)& (0+255),b
  3827  001C3A  0E00               	movlw	0
  3828  001C3C  0101               	movlb	1	; () banked
  3829  001C3E  6F5C               	movwf	sprintf@width& (0+255),b
  3830  001C40                     l7861:
  3831                           
  3832                           ; BSR set to: 1
  3833                           ;doprnt.c: 1362: }
  3834                           ;doprnt.c: 1390: if(width > c)
  3835  001C40  0E80               	movlw	128
  3836  001C42  0101               	movlb	1	; () banked
  3837  001C44  0101               	movlb	1	; () banked
  3838  001C46  BF6A               	btfsc	sprintf@c& (0+255),7,b
  3839  001C48  0E7F               	movlw	127
  3840  001C4A  6F40               	movwf	??_sprintf& (0+255),b
  3841  001C4C  0101               	movlb	1	; () banked
  3842  001C4E  0101               	movlb	1	; () banked
  3843  001C50  515C               	movf	sprintf@width& (0+255),w,b
  3844  001C52  0101               	movlb	1	; () banked
  3845  001C54  0101               	movlb	1	; () banked
  3846  001C56  5D6A               	subwf	sprintf@c& (0+255),w,b
  3847  001C58  0101               	movlb	1	; () banked
  3848  001C5A  0101               	movlb	1	; () banked
  3849  001C5C  515D               	movf	(sprintf@width+1)& (0+255),w,b
  3850  001C5E  0A80               	xorlw	128
  3851  001C60  0101               	movlb	1	; () banked
  3852  001C62  5940               	subwfb	??_sprintf& (0+255),w,b
  3853  001C64  B0D8               	btfsc	status,0,c
  3854  001C66  D00E               	goto	l7865
  3855                           
  3856                           ; BSR set to: 1
  3857                           ;doprnt.c: 1391: width -= c;
  3858  001C68  0101               	movlb	1	; () banked
  3859  001C6A  0101               	movlb	1	; () banked
  3860  001C6C  516A               	movf	sprintf@c& (0+255),w,b
  3861  001C6E  0101               	movlb	1	; () banked
  3862  001C70  0101               	movlb	1	; () banked
  3863  001C72  5F5C               	subwf	sprintf@width& (0+255),f,b
  3864  001C74  0E00               	movlw	0
  3865  001C76  0101               	movlb	1	; () banked
  3866  001C78  BF6A               	btfsc	sprintf@c& (0+255),7,b
  3867  001C7A  0EFF               	movlw	255
  3868  001C7C  0101               	movlb	1	; () banked
  3869  001C7E  0101               	movlb	1	; () banked
  3870  001C80  5B5D               	subwfb	(sprintf@width+1)& (0+255),f,b
  3871  001C82  D007               	goto	l7867
  3872  001C84                     l7865:
  3873                           
  3874                           ; BSR set to: 1
  3875                           ;doprnt.c: 1392: else
  3876                           ;doprnt.c: 1393: width = 0;
  3877  001C84  0E00               	movlw	0
  3878  001C86  0101               	movlb	1	; () banked
  3879  001C88  0101               	movlb	1	; () banked
  3880  001C8A  6F5D               	movwf	(sprintf@width+1)& (0+255),b
  3881  001C8C  0E00               	movlw	0
  3882  001C8E  0101               	movlb	1	; () banked
  3883  001C90  6F5C               	movwf	sprintf@width& (0+255),b
  3884  001C92                     l7867:
  3885                           
  3886                           ; BSR set to: 1
  3887                           ;doprnt.c: 1431: {
  3888                           ;doprnt.c: 1433: if(width
  3889                           ;doprnt.c: 1437: )
  3890  001C92  0101               	movlb	1	; () banked
  3891  001C94  0101               	movlb	1	; () banked
  3892  001C96  515D               	movf	(sprintf@width+1)& (0+255),w,b
  3893  001C98  115C               	iorwf	sprintf@width& (0+255),w,b
  3894  001C9A  B4D8               	btfsc	status,2,c
  3895  001C9C  D014               	goto	l7875
  3896  001C9E                     l7869:
  3897                           
  3898                           ; BSR set to: 1
  3899                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  3900  001C9E  C139  FFD9         	movff	sprintf@sp,fsr2l
  3901  001CA2  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  3902  001CA6  0E20               	movlw	32
  3903  001CA8  6EDF               	movwf	indf2,c
  3904                           
  3905                           ; BSR set to: 1
  3906  001CAA  0101               	movlb	1	; () banked
  3907  001CAC  0101               	movlb	1	; () banked
  3908  001CAE  4B39               	infsnz	sprintf@sp& (0+255),f,b
  3909  001CB0  2B3A               	incf	(sprintf@sp+1)& (0+255),f,b
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;doprnt.c: 1440: while(--width);
  3913  001CB2  0101               	movlb	1	; () banked
  3914  001CB4  0101               	movlb	1	; () banked
  3915  001CB6  075C               	decf	sprintf@width& (0+255),f,b
  3916  001CB8  A0D8               	btfss	status,0,c
  3917  001CBA  075D               	decf	(sprintf@width+1)& (0+255),f,b
  3918  001CBC  0101               	movlb	1	; () banked
  3919  001CBE  515D               	movf	(sprintf@width+1)& (0+255),w,b
  3920  001CC0  115C               	iorwf	sprintf@width& (0+255),w,b
  3921  001CC2  A4D8               	btfss	status,2,c
  3922  001CC4  D7EC               	goto	l7869
  3923  001CC6                     l7875:
  3924                           
  3925                           ; BSR set to: 1
  3926                           ;doprnt.c: 1447: if(flag & 0x03)
  3927  001CC6  0E03               	movlw	3
  3928  001CC8  0101               	movlb	1	; () banked
  3929  001CCA  0101               	movlb	1	; () banked
  3930  001CCC  155A               	andwf	sprintf@flag& (0+255),w,b
  3931  001CCE  0101               	movlb	1	; () banked
  3932  001CD0  6F40               	movwf	??_sprintf& (0+255),b
  3933  001CD2  0E00               	movlw	0
  3934  001CD4  0101               	movlb	1	; () banked
  3935  001CD6  0101               	movlb	1	; () banked
  3936  001CD8  155B               	andwf	(sprintf@flag+1)& (0+255),w,b
  3937  001CDA  0101               	movlb	1	; () banked
  3938  001CDC  6F41               	movwf	(??_sprintf+1)& (0+255),b
  3939  001CDE  0101               	movlb	1	; () banked
  3940  001CE0  5141               	movf	(??_sprintf+1)& (0+255),w,b
  3941  001CE2  1140               	iorwf	??_sprintf& (0+255),w,b
  3942  001CE4  B4D8               	btfsc	status,2,c
  3943  001CE6  D069               	goto	l7887
  3944                           
  3945                           ; BSR set to: 1
  3946                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3947  001CE8  C139  FFD9         	movff	sprintf@sp,fsr2l
  3948  001CEC  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  3949  001CF0  0E2D               	movlw	45
  3950  001CF2  6EDF               	movwf	indf2,c
  3951  001CF4  D05E               	goto	L8
  3952  001CF6                     l7881:
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;doprnt.c: 1487: {
  3956                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3957  001CF6  0101               	movlb	1	; () banked
  3958  001CF8  C168  F140         	movff	sprintf@prec,??_sprintf
  3959  001CFC  0101               	movlb	1	; () banked
  3960  001CFE  C169  F141         	movff	sprintf@prec+1,??_sprintf+1
  3961  001D02  0101               	movlb	1	; () banked
  3962  001D04  90D8               	bcf	status,0,c
  3963  001D06  3740               	rlcf	??_sprintf& (0+255),f,b
  3964  001D08  3741               	rlcf	(??_sprintf+1)& (0+255),f,b
  3965  001D0A  0101               	movlb	1	; () banked
  3966  001D0C  90D8               	bcf	status,0,c
  3967  001D0E  3740               	rlcf	??_sprintf& (0+255),f,b
  3968  001D10  3741               	rlcf	(??_sprintf+1)& (0+255),f,b
  3969  001D12  0E01               	movlw	low _dpowers
  3970  001D14  0101               	movlb	1	; () banked
  3971  001D16  2540               	addwf	??_sprintf& (0+255),w,b
  3972  001D18  6EF6               	movwf	tblptrl,c
  3973  001D1A  0E0F               	movlw	high _dpowers
  3974  001D1C  2141               	addwfc	(??_sprintf+1)& (0+255),w,b
  3975  001D1E  6EF7               	movwf	tblptrh,c
  3976  001D20  6AF8               	clrf	tblptru,c
  3977  001D22  0E00               	movlw	low (__mediumconst shr (0+16))
  3978  001D24  22F8               	addwfc	tblptru,f,c
  3979  001D26  0009               	tblrd		*+
  3980  001D28  0100               	movlb	0	; () banked
  3981  001D2A  CFF5 F0A1          	movff	tablat,___lldiv@divisor
  3982  001D2E  0009               	tblrd		*+
  3983  001D30  0100               	movlb	0	; () banked
  3984  001D32  CFF5 F0A2          	movff	tablat,___lldiv@divisor+1
  3985  001D36  0009               	tblrd		*+
  3986  001D38  0100               	movlb	0	; () banked
  3987  001D3A  CFF5 F0A3          	movff	tablat,___lldiv@divisor+2
  3988  001D3E  000A               	tblrd		*-
  3989  001D40  0100               	movlb	0	; () banked
  3990  001D42  CFF5 F0A4          	movff	tablat,___lldiv@divisor+3
  3991  001D46  C15E  F09D         	movff	sprintf@_val,___lldiv@dividend
  3992  001D4A  C15F  F09E         	movff	sprintf@_val+1,___lldiv@dividend+1
  3993  001D4E  C160  F09F         	movff	sprintf@_val+2,___lldiv@dividend+2
  3994  001D52  C161  F0A0         	movff	sprintf@_val+3,___lldiv@dividend+3
  3995  001D56  EC67  F02D         	call	___lldiv	;wreg free
  3996  001D5A  C09D  F0AB         	movff	?___lldiv,___llmod@dividend
  3997  001D5E  C09E  F0AC         	movff	?___lldiv+1,___llmod@dividend+1
  3998  001D62  C09F  F0AD         	movff	?___lldiv+2,___llmod@dividend+2
  3999  001D66  C0A0  F0AE         	movff	?___lldiv+3,___llmod@dividend+3
  4000  001D6A  0E0A               	movlw	10
  4001  001D6C  0100               	movlb	0	; () banked
  4002  001D6E  0100               	movlb	0	; () banked
  4003  001D70  6FAF               	movwf	___llmod@divisor& (0+255),b
  4004  001D72  0E00               	movlw	0
  4005  001D74  0100               	movlb	0	; () banked
  4006  001D76  6FB0               	movwf	(___llmod@divisor+1)& (0+255),b
  4007  001D78  0E00               	movlw	0
  4008  001D7A  0100               	movlb	0	; () banked
  4009  001D7C  6FB1               	movwf	(___llmod@divisor+2)& (0+255),b
  4010  001D7E  0E00               	movlw	0
  4011  001D80  0100               	movlb	0	; () banked
  4012  001D82  6FB2               	movwf	(___llmod@divisor+3)& (0+255),b
  4013  001D84  ECC2  F030         	call	___llmod	;wreg free
  4014  001D88  C0AB  F142         	movff	?___llmod,??_sprintf+2
  4015  001D8C  C0AC  F143         	movff	?___llmod+1,??_sprintf+3
  4016  001D90  C0AD  F144         	movff	?___llmod+2,??_sprintf+4
  4017  001D94  C0AE  F145         	movff	?___llmod+3,??_sprintf+5
  4018  001D98  0101               	movlb	1	; () banked
  4019  001D9A  5142               	movf	(??_sprintf+2)& (0+255),w,b
  4020  001D9C  0F30               	addlw	48
  4021  001D9E  0101               	movlb	1	; () banked
  4022  001DA0  0101               	movlb	1	; () banked
  4023  001DA2  6F6A               	movwf	sprintf@c& (0+255),b
  4024                           
  4025                           ; BSR set to: 1
  4026                           ;doprnt.c: 1532: }
  4027                           ;doprnt.c: 1533: ((*sp++ = (c)));
  4028  001DA4  C139  FFD9         	movff	sprintf@sp,fsr2l
  4029  001DA8  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  4030  001DAC  0101               	movlb	1	; () banked
  4031  001DAE  C16A  FFDF         	movff	sprintf@c,indf2
  4032  001DB2                     L8:
  4033                           
  4034                           ; BSR set to: 1
  4035  001DB2  0101               	movlb	1	; () banked
  4036  001DB4  0101               	movlb	1	; () banked
  4037  001DB6  4B39               	infsnz	sprintf@sp& (0+255),f,b
  4038  001DB8  2B3A               	incf	(sprintf@sp+1)& (0+255),f,b
  4039  001DBA                     l7887:
  4040                           
  4041                           ; BSR set to: 1
  4042  001DBA  0101               	movlb	1	; () banked
  4043  001DBC  0101               	movlb	1	; () banked
  4044  001DBE  0768               	decf	sprintf@prec& (0+255),f,b
  4045  001DC0  A0D8               	btfss	status,0,c
  4046  001DC2  0769               	decf	(sprintf@prec+1)& (0+255),f,b
  4047  001DC4  0101               	movlb	1	; () banked
  4048  001DC6  2968               	incf	sprintf@prec& (0+255),w,b
  4049  001DC8  B4D8               	btfsc	status,2,c
  4050  001DCA  2969               	incf	(sprintf@prec+1)& (0+255),w,b
  4051  001DCC  A4D8               	btfss	status,2,c
  4052  001DCE  D793               	goto	l7881
  4053  001DD0                     l7889:
  4054                           
  4055                           ; BSR set to: 1
  4056  001DD0  0101               	movlb	1	; () banked
  4057  001DD2  0101               	movlb	1	; () banked
  4058  001DD4  513B               	movf	sprintf@f& (0+255),w,b
  4059  001DD6  0101               	movlb	1	; () banked
  4060  001DD8  6F40               	movwf	??_sprintf& (0+255),b
  4061  001DDA  0101               	movlb	1	; () banked
  4062  001DDC  0101               	movlb	1	; () banked
  4063  001DDE  513C               	movf	(sprintf@f+1)& (0+255),w,b
  4064  001DE0  0101               	movlb	1	; () banked
  4065  001DE2  6F41               	movwf	(??_sprintf+1)& (0+255),b
  4066  001DE4  0101               	movlb	1	; () banked
  4067  001DE6  4B3B               	infsnz	sprintf@f& (0+255),f,b
  4068  001DE8  2B3C               	incf	(sprintf@f+1)& (0+255),f,b
  4069  001DEA  C140  FFF6         	movff	??_sprintf,tblptrl
  4070  001DEE  C141  FFF7         	movff	??_sprintf+1,tblptrh
  4071  001DF2  0E00               	movlw	low (__mediumconst shr (0+16))
  4072  001DF4  6EF8               	movwf	tblptru,c
  4073  001DF6  0008               	tblrd		*
  4074  001DF8  0101               	movlb	1	; () banked
  4075  001DFA  CFF5 F16A          	movff	tablat,sprintf@c
  4076  001DFE  0101               	movlb	1	; () banked
  4077  001E00  676A               	tstfsz	sprintf@c& (0+255),b
  4078  001E02  EFF5  F007         	goto	l7599
  4079  001E06                     l7891:
  4080                           
  4081                           ; BSR set to: 1
  4082                           ;doprnt.c: 1547: *sp = 0;
  4083  001E06  C139  FFD9         	movff	sprintf@sp,fsr2l
  4084  001E0A  C13A  FFDA         	movff	sprintf@sp+1,fsr2h
  4085  001E0E  0E00               	movlw	0
  4086  001E10  6EDF               	movwf	indf2,c
  4087  001E12  0012               	return	
  4088  001E14                     __end_of_sprintf:
  4089                           	opt stack 0
  4090                           tblptru	equ	0xFF8
  4091                           tblptrh	equ	0xFF7
  4092                           tblptrl	equ	0xFF6
  4093                           tablat	equ	0xFF5
  4094                           prodh	equ	0xFF4
  4095                           prodl	equ	0xFF3
  4096                           intcon	equ	0xFF2
  4097                           wreg	equ	0xFE8
  4098                           indf2	equ	0xFDF
  4099                           postinc2	equ	0xFDE
  4100                           postdec2	equ	0xFDD
  4101                           fsr2h	equ	0xFDA
  4102                           fsr2l	equ	0xFD9
  4103                           status	equ	0xFD8
  4104                           
  4105 ;; *************** function _scale *****************
  4106 ;; Defined at:
  4107 ;;		line 425 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\doprnt.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  scl             1    wreg     char 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  scl             1    6[BANK1 ] char 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  3    0[BANK1 ] char 
  4114 ;; Registers used:
  4115 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4121 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4122 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4124 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4125 ;;Total ram usage:        7 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    9
  4128 ;; This function calls:
  4129 ;;		___awdiv
  4130 ;;		___awmod
  4131 ;;		___ftmul
  4132 ;;		___wmul
  4133 ;; This function is called by:
  4134 ;;		_sprintf
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text3
  4139  002ADE                     __ptext3:
  4140                           	opt stack 0
  4141  002ADE                     _scale:
  4142                           	opt stack 19
  4143                           
  4144                           ; BSR set to: 1
  4145                           ;incstack = 0
  4146                           ;scale@scl stored from wreg
  4147  002ADE  CFE8 F106          	movff	wreg,scale@scl
  4148                           
  4149                           ;doprnt.c: 428: if(scl < 0) {
  4150  002AE2  0101               	movlb	1	; () banked
  4151  002AE4  0101               	movlb	1	; () banked
  4152  002AE6  AF06               	btfss	scale@scl& (0+255),7,b
  4153  002AE8  D196               	goto	l6963
  4154                           
  4155                           ; BSR set to: 1
  4156                           ;doprnt.c: 429: scl = -scl;
  4157  002AEA  0101               	movlb	1	; () banked
  4158  002AEC  0101               	movlb	1	; () banked
  4159  002AEE  6D06               	negf	scale@scl& (0+255),b
  4160                           
  4161                           ;doprnt.c: 430: if(scl>=110)
  4162  002AF0  0101               	movlb	1	; () banked
  4163  002AF2  0101               	movlb	1	; () banked
  4164  002AF4  5106               	movf	scale@scl& (0+255),w,b
  4165  002AF6  0A80               	xorlw	128
  4166  002AF8  0F12               	addlw	-238
  4167  002AFA  A0D8               	btfss	status,0,c
  4168  002AFC  D0E5               	goto	l6953
  4169                           
  4170                           ; BSR set to: 1
  4171                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4172  002AFE  0E00               	movlw	0
  4173  002B00  0100               	movlb	0	; () banked
  4174  002B02  0100               	movlb	0	; () banked
  4175  002B04  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4176  002B06  0E03               	movlw	3
  4177  002B08  0100               	movlb	0	; () banked
  4178  002B0A  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4179  002B0C  0E00               	movlw	0
  4180  002B0E  0100               	movlb	0	; () banked
  4181  002B10  0100               	movlb	0	; () banked
  4182  002B12  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  4183  002B14  0E0A               	movlw	10
  4184  002B16  0100               	movlb	0	; () banked
  4185  002B18  6FA6               	movwf	___awdiv@divisor& (0+255),b
  4186  002B1A  0E00               	movlw	0
  4187  002B1C  0100               	movlb	0	; () banked
  4188  002B1E  0100               	movlb	0	; () banked
  4189  002B20  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  4190  002B22  0E64               	movlw	100
  4191  002B24  0100               	movlb	0	; () banked
  4192  002B26  6F9F               	movwf	___awmod@divisor& (0+255),b
  4193  002B28  0101               	movlb	1	; () banked
  4194  002B2A  0101               	movlb	1	; () banked
  4195  002B2C  5106               	movf	scale@scl& (0+255),w,b
  4196  002B2E  0100               	movlb	0	; () banked
  4197  002B30  0100               	movlb	0	; () banked
  4198  002B32  6F9D               	movwf	___awmod@dividend& (0+255),b
  4199  002B34  0100               	movlb	0	; () banked
  4200  002B36  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  4201  002B38  0100               	movlb	0	; () banked
  4202  002B3A  BF9D               	btfsc	___awmod@dividend& (0+255),7,b
  4203  002B3C  079E               	decf	(___awmod@dividend+1)& (0+255),f,b
  4204  002B3E  ECE0  F02C         	call	___awmod	;wreg free
  4205  002B42  0100               	movlb	0	; () banked
  4206  002B44  C09D  F0A4         	movff	?___awmod,___awdiv@dividend
  4207  002B48  0100               	movlb	0	; () banked
  4208  002B4A  C09E  F0A5         	movff	?___awmod+1,___awdiv@dividend+1
  4209  002B4E  EC92  F02A         	call	___awdiv	;wreg free
  4210  002B52  0E09               	movlw	9
  4211  002B54  0100               	movlb	0	; () banked
  4212  002B56  0100               	movlb	0	; () banked
  4213  002B58  25A4               	addwf	?___awdiv& (0+255),w,b
  4214  002B5A  0100               	movlb	0	; () banked
  4215  002B5C  0100               	movlb	0	; () banked
  4216  002B5E  6FAD               	movwf	___wmul@multiplier& (0+255),b
  4217  002B60  0E00               	movlw	0
  4218  002B62  0100               	movlb	0	; () banked
  4219  002B64  0100               	movlb	0	; () banked
  4220  002B66  21A5               	addwfc	(?___awdiv+1)& (0+255),w,b
  4221  002B68  0100               	movlb	0	; () banked
  4222  002B6A  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  4223  002B6C  ECA4  F034         	call	___wmul	;wreg free
  4224  002B70  0E29               	movlw	low __npowers_
  4225  002B72  0100               	movlb	0	; () banked
  4226  002B74  0100               	movlb	0	; () banked
  4227  002B76  25AD               	addwf	?___wmul& (0+255),w,b
  4228  002B78  6EF6               	movwf	tblptrl,c
  4229  002B7A  0E0F               	movlw	high __npowers_
  4230  002B7C  0100               	movlb	0	; () banked
  4231  002B7E  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4232  002B80  6EF7               	movwf	tblptrh,c
  4233  002B82  6AF8               	clrf	tblptru,c
  4234  002B84  0E00               	movlw	low (__mediumconst shr (0+16))
  4235  002B86  22F8               	addwfc	tblptru,f,c
  4236  002B88  0009               	tblrd		*+
  4237  002B8A  0100               	movlb	0	; () banked
  4238  002B8C  CFF5 F0B6          	movff	tablat,___ftmul@f2
  4239  002B90  0009               	tblrd		*+
  4240  002B92  0100               	movlb	0	; () banked
  4241  002B94  CFF5 F0B7          	movff	tablat,___ftmul@f2+1
  4242  002B98  000A               	tblrd		*-
  4243  002B9A  0100               	movlb	0	; () banked
  4244  002B9C  CFF5 F0B8          	movff	tablat,___ftmul@f2+2
  4245  002BA0  0E00               	movlw	0
  4246  002BA2  0100               	movlb	0	; () banked
  4247  002BA4  0100               	movlb	0	; () banked
  4248  002BA6  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4249  002BA8  0E03               	movlw	3
  4250  002BAA  0100               	movlb	0	; () banked
  4251  002BAC  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4252  002BAE  0E00               	movlw	0
  4253  002BB0  0100               	movlb	0	; () banked
  4254  002BB2  0100               	movlb	0	; () banked
  4255  002BB4  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  4256  002BB6  0E64               	movlw	100
  4257  002BB8  0100               	movlb	0	; () banked
  4258  002BBA  6FA6               	movwf	___awdiv@divisor& (0+255),b
  4259  002BBC  0101               	movlb	1	; () banked
  4260  002BBE  0101               	movlb	1	; () banked
  4261  002BC0  5106               	movf	scale@scl& (0+255),w,b
  4262  002BC2  0100               	movlb	0	; () banked
  4263  002BC4  0100               	movlb	0	; () banked
  4264  002BC6  6FA4               	movwf	___awdiv@dividend& (0+255),b
  4265  002BC8  0100               	movlb	0	; () banked
  4266  002BCA  6BA5               	clrf	(___awdiv@dividend+1)& (0+255),b
  4267  002BCC  0100               	movlb	0	; () banked
  4268  002BCE  BFA4               	btfsc	___awdiv@dividend& (0+255),7,b
  4269  002BD0  07A5               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4270  002BD2  EC92  F02A         	call	___awdiv	;wreg free
  4271  002BD6  0E12               	movlw	18
  4272  002BD8  0100               	movlb	0	; () banked
  4273  002BDA  0100               	movlb	0	; () banked
  4274  002BDC  25A4               	addwf	?___awdiv& (0+255),w,b
  4275  002BDE  0100               	movlb	0	; () banked
  4276  002BE0  0100               	movlb	0	; () banked
  4277  002BE2  6FAD               	movwf	___wmul@multiplier& (0+255),b
  4278  002BE4  0E00               	movlw	0
  4279  002BE6  0100               	movlb	0	; () banked
  4280  002BE8  0100               	movlb	0	; () banked
  4281  002BEA  21A5               	addwfc	(?___awdiv+1)& (0+255),w,b
  4282  002BEC  0100               	movlb	0	; () banked
  4283  002BEE  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  4284  002BF0  ECA4  F034         	call	___wmul	;wreg free
  4285  002BF4  0E29               	movlw	low __npowers_
  4286  002BF6  0100               	movlb	0	; () banked
  4287  002BF8  0100               	movlb	0	; () banked
  4288  002BFA  25AD               	addwf	?___wmul& (0+255),w,b
  4289  002BFC  6EF6               	movwf	tblptrl,c
  4290  002BFE  0E0F               	movlw	high __npowers_
  4291  002C00  0100               	movlb	0	; () banked
  4292  002C02  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4293  002C04  6EF7               	movwf	tblptrh,c
  4294  002C06  6AF8               	clrf	tblptru,c
  4295  002C08  0E00               	movlw	low (__mediumconst shr (0+16))
  4296  002C0A  22F8               	addwfc	tblptru,f,c
  4297  002C0C  0009               	tblrd		*+
  4298  002C0E  0100               	movlb	0	; () banked
  4299  002C10  CFF5 F0B3          	movff	tablat,___ftmul@f1
  4300  002C14  0009               	tblrd		*+
  4301  002C16  0100               	movlb	0	; () banked
  4302  002C18  CFF5 F0B4          	movff	tablat,___ftmul@f1+1
  4303  002C1C  000A               	tblrd		*-
  4304  002C1E  0100               	movlb	0	; () banked
  4305  002C20  CFF5 F0B5          	movff	tablat,___ftmul@f1+2
  4306  002C24  ECC8  F023         	call	___ftmul	;wreg free
  4307  002C28  C0B3  F103         	movff	?___ftmul,_scale$1692
  4308  002C2C  C0B4  F104         	movff	?___ftmul+1,_scale$1692+1
  4309  002C30  C0B5  F105         	movff	?___ftmul+2,_scale$1692+2
  4310                           
  4311                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4312  002C34  C103  F0B3         	movff	_scale$1692,___ftmul@f1
  4313  002C38  C104  F0B4         	movff	_scale$1692+1,___ftmul@f1+1
  4314  002C3C  C105  F0B5         	movff	_scale$1692+2,___ftmul@f1+2
  4315  002C40  0E00               	movlw	0
  4316  002C42  0100               	movlb	0	; () banked
  4317  002C44  0100               	movlb	0	; () banked
  4318  002C46  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4319  002C48  0E03               	movlw	3
  4320  002C4A  0100               	movlb	0	; () banked
  4321  002C4C  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4322  002C4E  0E00               	movlw	0
  4323  002C50  0100               	movlb	0	; () banked
  4324  002C52  0100               	movlb	0	; () banked
  4325  002C54  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  4326  002C56  0E0A               	movlw	10
  4327  002C58  0100               	movlb	0	; () banked
  4328  002C5A  6F9F               	movwf	___awmod@divisor& (0+255),b
  4329  002C5C  0101               	movlb	1	; () banked
  4330  002C5E  0101               	movlb	1	; () banked
  4331  002C60  5106               	movf	scale@scl& (0+255),w,b
  4332  002C62  0100               	movlb	0	; () banked
  4333  002C64  0100               	movlb	0	; () banked
  4334  002C66  6F9D               	movwf	___awmod@dividend& (0+255),b
  4335  002C68  0100               	movlb	0	; () banked
  4336  002C6A  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  4337  002C6C  0100               	movlb	0	; () banked
  4338  002C6E  BF9D               	btfsc	___awmod@dividend& (0+255),7,b
  4339  002C70  079E               	decf	(___awmod@dividend+1)& (0+255),f,b
  4340  002C72  ECE0  F02C         	call	___awmod	;wreg free
  4341  002C76  0100               	movlb	0	; () banked
  4342  002C78  C09D  F0AD         	movff	?___awmod,___wmul@multiplier
  4343  002C7C  0100               	movlb	0	; () banked
  4344  002C7E  C09E  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  4345  002C82  ECA4  F034         	call	___wmul	;wreg free
  4346  002C86  0E29               	movlw	low __npowers_
  4347  002C88  0100               	movlb	0	; () banked
  4348  002C8A  0100               	movlb	0	; () banked
  4349  002C8C  25AD               	addwf	?___wmul& (0+255),w,b
  4350  002C8E  6EF6               	movwf	tblptrl,c
  4351  002C90  0E0F               	movlw	high __npowers_
  4352  002C92  0100               	movlb	0	; () banked
  4353  002C94  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4354  002C96  6EF7               	movwf	tblptrh,c
  4355  002C98  6AF8               	clrf	tblptru,c
  4356  002C9A  0E00               	movlw	low (__mediumconst shr (0+16))
  4357  002C9C  22F8               	addwfc	tblptru,f,c
  4358  002C9E  0009               	tblrd		*+
  4359  002CA0  0100               	movlb	0	; () banked
  4360  002CA2  CFF5 F0B6          	movff	tablat,___ftmul@f2
  4361  002CA6  0009               	tblrd		*+
  4362  002CA8  0100               	movlb	0	; () banked
  4363  002CAA  CFF5 F0B7          	movff	tablat,___ftmul@f2+1
  4364  002CAE  000A               	tblrd		*-
  4365  002CB0  0100               	movlb	0	; () banked
  4366  002CB2  CFF5 F0B8          	movff	tablat,___ftmul@f2+2
  4367  002CB6  ECC8  F023         	call	___ftmul	;wreg free
  4368  002CBA  C0B3  F100         	movff	?___ftmul,?_scale
  4369  002CBE  C0B4  F101         	movff	?___ftmul+1,?_scale+1
  4370  002CC2  C0B5  F102         	movff	?___ftmul+2,?_scale+2
  4371  002CC6  0012               	return	
  4372  002CC8                     l6953:
  4373                           
  4374                           ;doprnt.c: 432: else if(scl > 10)
  4375  002CC8  0101               	movlb	1	; () banked
  4376  002CCA  0101               	movlb	1	; () banked
  4377  002CCC  5106               	movf	scale@scl& (0+255),w,b
  4378  002CCE  0A80               	xorlw	128
  4379  002CD0  0F75               	addlw	-139
  4380  002CD2  A0D8               	btfss	status,0,c
  4381  002CD4  D086               	goto	l6959
  4382                           
  4383                           ; BSR set to: 1
  4384                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4385  002CD6  0E00               	movlw	0
  4386  002CD8  0100               	movlb	0	; () banked
  4387  002CDA  0100               	movlb	0	; () banked
  4388  002CDC  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4389  002CDE  0E03               	movlw	3
  4390  002CE0  0100               	movlb	0	; () banked
  4391  002CE2  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4392  002CE4  0E00               	movlw	0
  4393  002CE6  0100               	movlb	0	; () banked
  4394  002CE8  0100               	movlb	0	; () banked
  4395  002CEA  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  4396  002CEC  0E0A               	movlw	10
  4397  002CEE  0100               	movlb	0	; () banked
  4398  002CF0  6FA6               	movwf	___awdiv@divisor& (0+255),b
  4399  002CF2  0101               	movlb	1	; () banked
  4400  002CF4  0101               	movlb	1	; () banked
  4401  002CF6  5106               	movf	scale@scl& (0+255),w,b
  4402  002CF8  0100               	movlb	0	; () banked
  4403  002CFA  0100               	movlb	0	; () banked
  4404  002CFC  6FA4               	movwf	___awdiv@dividend& (0+255),b
  4405  002CFE  0100               	movlb	0	; () banked
  4406  002D00  6BA5               	clrf	(___awdiv@dividend+1)& (0+255),b
  4407  002D02  0100               	movlb	0	; () banked
  4408  002D04  BFA4               	btfsc	___awdiv@dividend& (0+255),7,b
  4409  002D06  07A5               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4410  002D08  EC92  F02A         	call	___awdiv	;wreg free
  4411  002D0C  0E09               	movlw	9
  4412  002D0E  0100               	movlb	0	; () banked
  4413  002D10  0100               	movlb	0	; () banked
  4414  002D12  25A4               	addwf	?___awdiv& (0+255),w,b
  4415  002D14  0100               	movlb	0	; () banked
  4416  002D16  0100               	movlb	0	; () banked
  4417  002D18  6FAD               	movwf	___wmul@multiplier& (0+255),b
  4418  002D1A  0E00               	movlw	0
  4419  002D1C  0100               	movlb	0	; () banked
  4420  002D1E  0100               	movlb	0	; () banked
  4421  002D20  21A5               	addwfc	(?___awdiv+1)& (0+255),w,b
  4422  002D22  0100               	movlb	0	; () banked
  4423  002D24  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  4424  002D26  ECA4  F034         	call	___wmul	;wreg free
  4425  002D2A  0E29               	movlw	low __npowers_
  4426  002D2C  0100               	movlb	0	; () banked
  4427  002D2E  0100               	movlb	0	; () banked
  4428  002D30  25AD               	addwf	?___wmul& (0+255),w,b
  4429  002D32  6EF6               	movwf	tblptrl,c
  4430  002D34  0E0F               	movlw	high __npowers_
  4431  002D36  0100               	movlb	0	; () banked
  4432  002D38  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4433  002D3A  6EF7               	movwf	tblptrh,c
  4434  002D3C  6AF8               	clrf	tblptru,c
  4435  002D3E  0E00               	movlw	low (__mediumconst shr (0+16))
  4436  002D40  22F8               	addwfc	tblptru,f,c
  4437  002D42  0009               	tblrd		*+
  4438  002D44  0100               	movlb	0	; () banked
  4439  002D46  CFF5 F0B3          	movff	tablat,___ftmul@f1
  4440  002D4A  0009               	tblrd		*+
  4441  002D4C  0100               	movlb	0	; () banked
  4442  002D4E  CFF5 F0B4          	movff	tablat,___ftmul@f1+1
  4443  002D52  000A               	tblrd		*-
  4444  002D54  0100               	movlb	0	; () banked
  4445  002D56  CFF5 F0B5          	movff	tablat,___ftmul@f1+2
  4446  002D5A  0E00               	movlw	0
  4447  002D5C  0100               	movlb	0	; () banked
  4448  002D5E  0100               	movlb	0	; () banked
  4449  002D60  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4450  002D62  0E03               	movlw	3
  4451  002D64  0100               	movlb	0	; () banked
  4452  002D66  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4453  002D68  0E00               	movlw	0
  4454  002D6A  0100               	movlb	0	; () banked
  4455  002D6C  0100               	movlb	0	; () banked
  4456  002D6E  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  4457  002D70  0E0A               	movlw	10
  4458  002D72  0100               	movlb	0	; () banked
  4459  002D74  6F9F               	movwf	___awmod@divisor& (0+255),b
  4460  002D76  0101               	movlb	1	; () banked
  4461  002D78  0101               	movlb	1	; () banked
  4462  002D7A  5106               	movf	scale@scl& (0+255),w,b
  4463  002D7C  0100               	movlb	0	; () banked
  4464  002D7E  0100               	movlb	0	; () banked
  4465  002D80  6F9D               	movwf	___awmod@dividend& (0+255),b
  4466  002D82  0100               	movlb	0	; () banked
  4467  002D84  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  4468  002D86  0100               	movlb	0	; () banked
  4469  002D88  BF9D               	btfsc	___awmod@dividend& (0+255),7,b
  4470  002D8A  079E               	decf	(___awmod@dividend+1)& (0+255),f,b
  4471  002D8C  ECE0  F02C         	call	___awmod	;wreg free
  4472  002D90  0100               	movlb	0	; () banked
  4473  002D92  C09D  F0AD         	movff	?___awmod,___wmul@multiplier
  4474  002D96  0100               	movlb	0	; () banked
  4475  002D98  C09E  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  4476  002D9C  ECA4  F034         	call	___wmul	;wreg free
  4477  002DA0  0E29               	movlw	low __npowers_
  4478  002DA2  0100               	movlb	0	; () banked
  4479  002DA4  0100               	movlb	0	; () banked
  4480  002DA6  25AD               	addwf	?___wmul& (0+255),w,b
  4481  002DA8  6EF6               	movwf	tblptrl,c
  4482  002DAA  0E0F               	movlw	high __npowers_
  4483  002DAC  0100               	movlb	0	; () banked
  4484  002DAE  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4485  002DB0  6EF7               	movwf	tblptrh,c
  4486  002DB2  6AF8               	clrf	tblptru,c
  4487  002DB4  0E00               	movlw	low (__mediumconst shr (0+16))
  4488  002DB6  22F8               	addwfc	tblptru,f,c
  4489  002DB8  0009               	tblrd		*+
  4490  002DBA  0100               	movlb	0	; () banked
  4491  002DBC  CFF5 F0B6          	movff	tablat,___ftmul@f2
  4492  002DC0  0009               	tblrd		*+
  4493  002DC2  0100               	movlb	0	; () banked
  4494  002DC4  CFF5 F0B7          	movff	tablat,___ftmul@f2+1
  4495  002DC8  000A               	tblrd		*-
  4496  002DCA  0100               	movlb	0	; () banked
  4497  002DCC  CFF5 F0B8          	movff	tablat,___ftmul@f2+2
  4498  002DD0  ECC8  F023         	call	___ftmul	;wreg free
  4499  002DD4  C0B3  F100         	movff	?___ftmul,?_scale
  4500  002DD8  C0B4  F101         	movff	?___ftmul+1,?_scale+1
  4501  002DDC  C0B5  F102         	movff	?___ftmul+2,?_scale+2
  4502  002DE0  0012               	return	
  4503  002DE2                     l6959:
  4504                           
  4505                           ;doprnt.c: 434: return _npowers_[scl];
  4506  002DE2  0101               	movlb	1	; () banked
  4507  002DE4  0101               	movlb	1	; () banked
  4508  002DE6  5106               	movf	scale@scl& (0+255),w,b
  4509  002DE8  0D03               	mullw	3
  4510  002DEA  0E29               	movlw	low __npowers_
  4511  002DEC  24F3               	addwf	prodl,w,c
  4512  002DEE  6EF6               	movwf	tblptrl,c
  4513  002DF0  0E0F               	movlw	high __npowers_
  4514  002DF2  20F4               	addwfc	prodh,w,c
  4515  002DF4  6EF7               	movwf	tblptrh,c
  4516  002DF6  6AF8               	clrf	tblptru,c
  4517  002DF8  0E00               	movlw	low (__mediumconst shr (0+16))
  4518  002DFA  22F8               	addwfc	tblptru,f,c
  4519  002DFC  0009               	tblrd		*+
  4520  002DFE  0101               	movlb	1	; () banked
  4521  002E00  CFF5 F100          	movff	tablat,?_scale
  4522  002E04  0009               	tblrd		*+
  4523  002E06  0101               	movlb	1	; () banked
  4524  002E08  CFF5 F101          	movff	tablat,?_scale+1
  4525  002E0C  000A               	tblrd		*-
  4526  002E0E  0101               	movlb	1	; () banked
  4527  002E10  CFF5 F102          	movff	tablat,?_scale+2
  4528  002E14  0012               	return	
  4529  002E16                     l6963:
  4530                           
  4531                           ; BSR set to: 1
  4532                           ;doprnt.c: 435: }
  4533                           ;doprnt.c: 436: if(scl>=110)
  4534  002E16  0101               	movlb	1	; () banked
  4535  002E18  0101               	movlb	1	; () banked
  4536  002E1A  5106               	movf	scale@scl& (0+255),w,b
  4537  002E1C  0A80               	xorlw	128
  4538  002E1E  0F12               	addlw	-238
  4539  002E20  A0D8               	btfss	status,0,c
  4540  002E22  D0E5               	goto	l6971
  4541                           
  4542                           ; BSR set to: 1
  4543                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4544  002E24  0E00               	movlw	0
  4545  002E26  0100               	movlb	0	; () banked
  4546  002E28  0100               	movlb	0	; () banked
  4547  002E2A  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4548  002E2C  0E03               	movlw	3
  4549  002E2E  0100               	movlb	0	; () banked
  4550  002E30  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4551  002E32  0E00               	movlw	0
  4552  002E34  0100               	movlb	0	; () banked
  4553  002E36  0100               	movlb	0	; () banked
  4554  002E38  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  4555  002E3A  0E0A               	movlw	10
  4556  002E3C  0100               	movlb	0	; () banked
  4557  002E3E  6FA6               	movwf	___awdiv@divisor& (0+255),b
  4558  002E40  0E00               	movlw	0
  4559  002E42  0100               	movlb	0	; () banked
  4560  002E44  0100               	movlb	0	; () banked
  4561  002E46  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  4562  002E48  0E64               	movlw	100
  4563  002E4A  0100               	movlb	0	; () banked
  4564  002E4C  6F9F               	movwf	___awmod@divisor& (0+255),b
  4565  002E4E  0101               	movlb	1	; () banked
  4566  002E50  0101               	movlb	1	; () banked
  4567  002E52  5106               	movf	scale@scl& (0+255),w,b
  4568  002E54  0100               	movlb	0	; () banked
  4569  002E56  0100               	movlb	0	; () banked
  4570  002E58  6F9D               	movwf	___awmod@dividend& (0+255),b
  4571  002E5A  0100               	movlb	0	; () banked
  4572  002E5C  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  4573  002E5E  0100               	movlb	0	; () banked
  4574  002E60  BF9D               	btfsc	___awmod@dividend& (0+255),7,b
  4575  002E62  079E               	decf	(___awmod@dividend+1)& (0+255),f,b
  4576  002E64  ECE0  F02C         	call	___awmod	;wreg free
  4577  002E68  0100               	movlb	0	; () banked
  4578  002E6A  C09D  F0A4         	movff	?___awmod,___awdiv@dividend
  4579  002E6E  0100               	movlb	0	; () banked
  4580  002E70  C09E  F0A5         	movff	?___awmod+1,___awdiv@dividend+1
  4581  002E74  EC92  F02A         	call	___awdiv	;wreg free
  4582  002E78  0E09               	movlw	9
  4583  002E7A  0100               	movlb	0	; () banked
  4584  002E7C  0100               	movlb	0	; () banked
  4585  002E7E  25A4               	addwf	?___awdiv& (0+255),w,b
  4586  002E80  0100               	movlb	0	; () banked
  4587  002E82  0100               	movlb	0	; () banked
  4588  002E84  6FAD               	movwf	___wmul@multiplier& (0+255),b
  4589  002E86  0E00               	movlw	0
  4590  002E88  0100               	movlb	0	; () banked
  4591  002E8A  0100               	movlb	0	; () banked
  4592  002E8C  21A5               	addwfc	(?___awdiv+1)& (0+255),w,b
  4593  002E8E  0100               	movlb	0	; () banked
  4594  002E90  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  4595  002E92  ECA4  F034         	call	___wmul	;wreg free
  4596  002E96  0E50               	movlw	low __powers_
  4597  002E98  0100               	movlb	0	; () banked
  4598  002E9A  0100               	movlb	0	; () banked
  4599  002E9C  25AD               	addwf	?___wmul& (0+255),w,b
  4600  002E9E  6EF6               	movwf	tblptrl,c
  4601  002EA0  0E0F               	movlw	high __powers_
  4602  002EA2  0100               	movlb	0	; () banked
  4603  002EA4  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4604  002EA6  6EF7               	movwf	tblptrh,c
  4605  002EA8  6AF8               	clrf	tblptru,c
  4606  002EAA  0E00               	movlw	low (__mediumconst shr (0+16))
  4607  002EAC  22F8               	addwfc	tblptru,f,c
  4608  002EAE  0009               	tblrd		*+
  4609  002EB0  0100               	movlb	0	; () banked
  4610  002EB2  CFF5 F0B6          	movff	tablat,___ftmul@f2
  4611  002EB6  0009               	tblrd		*+
  4612  002EB8  0100               	movlb	0	; () banked
  4613  002EBA  CFF5 F0B7          	movff	tablat,___ftmul@f2+1
  4614  002EBE  000A               	tblrd		*-
  4615  002EC0  0100               	movlb	0	; () banked
  4616  002EC2  CFF5 F0B8          	movff	tablat,___ftmul@f2+2
  4617  002EC6  0E00               	movlw	0
  4618  002EC8  0100               	movlb	0	; () banked
  4619  002ECA  0100               	movlb	0	; () banked
  4620  002ECC  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4621  002ECE  0E03               	movlw	3
  4622  002ED0  0100               	movlb	0	; () banked
  4623  002ED2  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4624  002ED4  0E00               	movlw	0
  4625  002ED6  0100               	movlb	0	; () banked
  4626  002ED8  0100               	movlb	0	; () banked
  4627  002EDA  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  4628  002EDC  0E64               	movlw	100
  4629  002EDE  0100               	movlb	0	; () banked
  4630  002EE0  6FA6               	movwf	___awdiv@divisor& (0+255),b
  4631  002EE2  0101               	movlb	1	; () banked
  4632  002EE4  0101               	movlb	1	; () banked
  4633  002EE6  5106               	movf	scale@scl& (0+255),w,b
  4634  002EE8  0100               	movlb	0	; () banked
  4635  002EEA  0100               	movlb	0	; () banked
  4636  002EEC  6FA4               	movwf	___awdiv@dividend& (0+255),b
  4637  002EEE  0100               	movlb	0	; () banked
  4638  002EF0  6BA5               	clrf	(___awdiv@dividend+1)& (0+255),b
  4639  002EF2  0100               	movlb	0	; () banked
  4640  002EF4  BFA4               	btfsc	___awdiv@dividend& (0+255),7,b
  4641  002EF6  07A5               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4642  002EF8  EC92  F02A         	call	___awdiv	;wreg free
  4643  002EFC  0E12               	movlw	18
  4644  002EFE  0100               	movlb	0	; () banked
  4645  002F00  0100               	movlb	0	; () banked
  4646  002F02  25A4               	addwf	?___awdiv& (0+255),w,b
  4647  002F04  0100               	movlb	0	; () banked
  4648  002F06  0100               	movlb	0	; () banked
  4649  002F08  6FAD               	movwf	___wmul@multiplier& (0+255),b
  4650  002F0A  0E00               	movlw	0
  4651  002F0C  0100               	movlb	0	; () banked
  4652  002F0E  0100               	movlb	0	; () banked
  4653  002F10  21A5               	addwfc	(?___awdiv+1)& (0+255),w,b
  4654  002F12  0100               	movlb	0	; () banked
  4655  002F14  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  4656  002F16  ECA4  F034         	call	___wmul	;wreg free
  4657  002F1A  0E50               	movlw	low __powers_
  4658  002F1C  0100               	movlb	0	; () banked
  4659  002F1E  0100               	movlb	0	; () banked
  4660  002F20  25AD               	addwf	?___wmul& (0+255),w,b
  4661  002F22  6EF6               	movwf	tblptrl,c
  4662  002F24  0E0F               	movlw	high __powers_
  4663  002F26  0100               	movlb	0	; () banked
  4664  002F28  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4665  002F2A  6EF7               	movwf	tblptrh,c
  4666  002F2C  6AF8               	clrf	tblptru,c
  4667  002F2E  0E00               	movlw	low (__mediumconst shr (0+16))
  4668  002F30  22F8               	addwfc	tblptru,f,c
  4669  002F32  0009               	tblrd		*+
  4670  002F34  0100               	movlb	0	; () banked
  4671  002F36  CFF5 F0B3          	movff	tablat,___ftmul@f1
  4672  002F3A  0009               	tblrd		*+
  4673  002F3C  0100               	movlb	0	; () banked
  4674  002F3E  CFF5 F0B4          	movff	tablat,___ftmul@f1+1
  4675  002F42  000A               	tblrd		*-
  4676  002F44  0100               	movlb	0	; () banked
  4677  002F46  CFF5 F0B5          	movff	tablat,___ftmul@f1+2
  4678  002F4A  ECC8  F023         	call	___ftmul	;wreg free
  4679  002F4E  C0B3  F103         	movff	?___ftmul,_scale$1692
  4680  002F52  C0B4  F104         	movff	?___ftmul+1,_scale$1692+1
  4681  002F56  C0B5  F105         	movff	?___ftmul+2,_scale$1692+2
  4682                           
  4683                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4684  002F5A  C103  F0B3         	movff	_scale$1692,___ftmul@f1
  4685  002F5E  C104  F0B4         	movff	_scale$1692+1,___ftmul@f1+1
  4686  002F62  C105  F0B5         	movff	_scale$1692+2,___ftmul@f1+2
  4687  002F66  0E00               	movlw	0
  4688  002F68  0100               	movlb	0	; () banked
  4689  002F6A  0100               	movlb	0	; () banked
  4690  002F6C  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4691  002F6E  0E03               	movlw	3
  4692  002F70  0100               	movlb	0	; () banked
  4693  002F72  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4694  002F74  0E00               	movlw	0
  4695  002F76  0100               	movlb	0	; () banked
  4696  002F78  0100               	movlb	0	; () banked
  4697  002F7A  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  4698  002F7C  0E0A               	movlw	10
  4699  002F7E  0100               	movlb	0	; () banked
  4700  002F80  6F9F               	movwf	___awmod@divisor& (0+255),b
  4701  002F82  0101               	movlb	1	; () banked
  4702  002F84  0101               	movlb	1	; () banked
  4703  002F86  5106               	movf	scale@scl& (0+255),w,b
  4704  002F88  0100               	movlb	0	; () banked
  4705  002F8A  0100               	movlb	0	; () banked
  4706  002F8C  6F9D               	movwf	___awmod@dividend& (0+255),b
  4707  002F8E  0100               	movlb	0	; () banked
  4708  002F90  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  4709  002F92  0100               	movlb	0	; () banked
  4710  002F94  BF9D               	btfsc	___awmod@dividend& (0+255),7,b
  4711  002F96  079E               	decf	(___awmod@dividend+1)& (0+255),f,b
  4712  002F98  ECE0  F02C         	call	___awmod	;wreg free
  4713  002F9C  0100               	movlb	0	; () banked
  4714  002F9E  C09D  F0AD         	movff	?___awmod,___wmul@multiplier
  4715  002FA2  0100               	movlb	0	; () banked
  4716  002FA4  C09E  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  4717  002FA8  ECA4  F034         	call	___wmul	;wreg free
  4718  002FAC  0E50               	movlw	low __powers_
  4719  002FAE  0100               	movlb	0	; () banked
  4720  002FB0  0100               	movlb	0	; () banked
  4721  002FB2  25AD               	addwf	?___wmul& (0+255),w,b
  4722  002FB4  6EF6               	movwf	tblptrl,c
  4723  002FB6  0E0F               	movlw	high __powers_
  4724  002FB8  0100               	movlb	0	; () banked
  4725  002FBA  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4726  002FBC  6EF7               	movwf	tblptrh,c
  4727  002FBE  6AF8               	clrf	tblptru,c
  4728  002FC0  0E00               	movlw	low (__mediumconst shr (0+16))
  4729  002FC2  22F8               	addwfc	tblptru,f,c
  4730  002FC4  0009               	tblrd		*+
  4731  002FC6  0100               	movlb	0	; () banked
  4732  002FC8  CFF5 F0B6          	movff	tablat,___ftmul@f2
  4733  002FCC  0009               	tblrd		*+
  4734  002FCE  0100               	movlb	0	; () banked
  4735  002FD0  CFF5 F0B7          	movff	tablat,___ftmul@f2+1
  4736  002FD4  000A               	tblrd		*-
  4737  002FD6  0100               	movlb	0	; () banked
  4738  002FD8  CFF5 F0B8          	movff	tablat,___ftmul@f2+2
  4739  002FDC  ECC8  F023         	call	___ftmul	;wreg free
  4740  002FE0  C0B3  F100         	movff	?___ftmul,?_scale
  4741  002FE4  C0B4  F101         	movff	?___ftmul+1,?_scale+1
  4742  002FE8  C0B5  F102         	movff	?___ftmul+2,?_scale+2
  4743  002FEC  0012               	return	
  4744  002FEE                     l6971:
  4745                           
  4746                           ;doprnt.c: 438: else if(scl > 10)
  4747  002FEE  0101               	movlb	1	; () banked
  4748  002FF0  0101               	movlb	1	; () banked
  4749  002FF2  5106               	movf	scale@scl& (0+255),w,b
  4750  002FF4  0A80               	xorlw	128
  4751  002FF6  0F75               	addlw	-139
  4752  002FF8  A0D8               	btfss	status,0,c
  4753  002FFA  D086               	goto	l6977
  4754                           
  4755                           ; BSR set to: 1
  4756                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4757  002FFC  0E00               	movlw	0
  4758  002FFE  0100               	movlb	0	; () banked
  4759  003000  0100               	movlb	0	; () banked
  4760  003002  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4761  003004  0E03               	movlw	3
  4762  003006  0100               	movlb	0	; () banked
  4763  003008  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4764  00300A  0E00               	movlw	0
  4765  00300C  0100               	movlb	0	; () banked
  4766  00300E  0100               	movlb	0	; () banked
  4767  003010  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  4768  003012  0E0A               	movlw	10
  4769  003014  0100               	movlb	0	; () banked
  4770  003016  6FA6               	movwf	___awdiv@divisor& (0+255),b
  4771  003018  0101               	movlb	1	; () banked
  4772  00301A  0101               	movlb	1	; () banked
  4773  00301C  5106               	movf	scale@scl& (0+255),w,b
  4774  00301E  0100               	movlb	0	; () banked
  4775  003020  0100               	movlb	0	; () banked
  4776  003022  6FA4               	movwf	___awdiv@dividend& (0+255),b
  4777  003024  0100               	movlb	0	; () banked
  4778  003026  6BA5               	clrf	(___awdiv@dividend+1)& (0+255),b
  4779  003028  0100               	movlb	0	; () banked
  4780  00302A  BFA4               	btfsc	___awdiv@dividend& (0+255),7,b
  4781  00302C  07A5               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4782  00302E  EC92  F02A         	call	___awdiv	;wreg free
  4783  003032  0E09               	movlw	9
  4784  003034  0100               	movlb	0	; () banked
  4785  003036  0100               	movlb	0	; () banked
  4786  003038  25A4               	addwf	?___awdiv& (0+255),w,b
  4787  00303A  0100               	movlb	0	; () banked
  4788  00303C  0100               	movlb	0	; () banked
  4789  00303E  6FAD               	movwf	___wmul@multiplier& (0+255),b
  4790  003040  0E00               	movlw	0
  4791  003042  0100               	movlb	0	; () banked
  4792  003044  0100               	movlb	0	; () banked
  4793  003046  21A5               	addwfc	(?___awdiv+1)& (0+255),w,b
  4794  003048  0100               	movlb	0	; () banked
  4795  00304A  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  4796  00304C  ECA4  F034         	call	___wmul	;wreg free
  4797  003050  0E50               	movlw	low __powers_
  4798  003052  0100               	movlb	0	; () banked
  4799  003054  0100               	movlb	0	; () banked
  4800  003056  25AD               	addwf	?___wmul& (0+255),w,b
  4801  003058  6EF6               	movwf	tblptrl,c
  4802  00305A  0E0F               	movlw	high __powers_
  4803  00305C  0100               	movlb	0	; () banked
  4804  00305E  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4805  003060  6EF7               	movwf	tblptrh,c
  4806  003062  6AF8               	clrf	tblptru,c
  4807  003064  0E00               	movlw	low (__mediumconst shr (0+16))
  4808  003066  22F8               	addwfc	tblptru,f,c
  4809  003068  0009               	tblrd		*+
  4810  00306A  0100               	movlb	0	; () banked
  4811  00306C  CFF5 F0B3          	movff	tablat,___ftmul@f1
  4812  003070  0009               	tblrd		*+
  4813  003072  0100               	movlb	0	; () banked
  4814  003074  CFF5 F0B4          	movff	tablat,___ftmul@f1+1
  4815  003078  000A               	tblrd		*-
  4816  00307A  0100               	movlb	0	; () banked
  4817  00307C  CFF5 F0B5          	movff	tablat,___ftmul@f1+2
  4818  003080  0E00               	movlw	0
  4819  003082  0100               	movlb	0	; () banked
  4820  003084  0100               	movlb	0	; () banked
  4821  003086  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4822  003088  0E03               	movlw	3
  4823  00308A  0100               	movlb	0	; () banked
  4824  00308C  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  4825  00308E  0E00               	movlw	0
  4826  003090  0100               	movlb	0	; () banked
  4827  003092  0100               	movlb	0	; () banked
  4828  003094  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  4829  003096  0E0A               	movlw	10
  4830  003098  0100               	movlb	0	; () banked
  4831  00309A  6F9F               	movwf	___awmod@divisor& (0+255),b
  4832  00309C  0101               	movlb	1	; () banked
  4833  00309E  0101               	movlb	1	; () banked
  4834  0030A0  5106               	movf	scale@scl& (0+255),w,b
  4835  0030A2  0100               	movlb	0	; () banked
  4836  0030A4  0100               	movlb	0	; () banked
  4837  0030A6  6F9D               	movwf	___awmod@dividend& (0+255),b
  4838  0030A8  0100               	movlb	0	; () banked
  4839  0030AA  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  4840  0030AC  0100               	movlb	0	; () banked
  4841  0030AE  BF9D               	btfsc	___awmod@dividend& (0+255),7,b
  4842  0030B0  079E               	decf	(___awmod@dividend+1)& (0+255),f,b
  4843  0030B2  ECE0  F02C         	call	___awmod	;wreg free
  4844  0030B6  0100               	movlb	0	; () banked
  4845  0030B8  C09D  F0AD         	movff	?___awmod,___wmul@multiplier
  4846  0030BC  0100               	movlb	0	; () banked
  4847  0030BE  C09E  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  4848  0030C2  ECA4  F034         	call	___wmul	;wreg free
  4849  0030C6  0E50               	movlw	low __powers_
  4850  0030C8  0100               	movlb	0	; () banked
  4851  0030CA  0100               	movlb	0	; () banked
  4852  0030CC  25AD               	addwf	?___wmul& (0+255),w,b
  4853  0030CE  6EF6               	movwf	tblptrl,c
  4854  0030D0  0E0F               	movlw	high __powers_
  4855  0030D2  0100               	movlb	0	; () banked
  4856  0030D4  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  4857  0030D6  6EF7               	movwf	tblptrh,c
  4858  0030D8  6AF8               	clrf	tblptru,c
  4859  0030DA  0E00               	movlw	low (__mediumconst shr (0+16))
  4860  0030DC  22F8               	addwfc	tblptru,f,c
  4861  0030DE  0009               	tblrd		*+
  4862  0030E0  0100               	movlb	0	; () banked
  4863  0030E2  CFF5 F0B6          	movff	tablat,___ftmul@f2
  4864  0030E6  0009               	tblrd		*+
  4865  0030E8  0100               	movlb	0	; () banked
  4866  0030EA  CFF5 F0B7          	movff	tablat,___ftmul@f2+1
  4867  0030EE  000A               	tblrd		*-
  4868  0030F0  0100               	movlb	0	; () banked
  4869  0030F2  CFF5 F0B8          	movff	tablat,___ftmul@f2+2
  4870  0030F6  ECC8  F023         	call	___ftmul	;wreg free
  4871  0030FA  C0B3  F100         	movff	?___ftmul,?_scale
  4872  0030FE  C0B4  F101         	movff	?___ftmul+1,?_scale+1
  4873  003102  C0B5  F102         	movff	?___ftmul+2,?_scale+2
  4874  003106  0012               	return	
  4875  003108                     l6977:
  4876                           
  4877                           ;doprnt.c: 440: return _powers_[scl];
  4878  003108  0101               	movlb	1	; () banked
  4879  00310A  0101               	movlb	1	; () banked
  4880  00310C  5106               	movf	scale@scl& (0+255),w,b
  4881  00310E  0D03               	mullw	3
  4882  003110  0E50               	movlw	low __powers_
  4883  003112  24F3               	addwf	prodl,w,c
  4884  003114  6EF6               	movwf	tblptrl,c
  4885  003116  0E0F               	movlw	high __powers_
  4886  003118  20F4               	addwfc	prodh,w,c
  4887  00311A  6EF7               	movwf	tblptrh,c
  4888  00311C  6AF8               	clrf	tblptru,c
  4889  00311E  0E00               	movlw	low (__mediumconst shr (0+16))
  4890  003120  22F8               	addwfc	tblptru,f,c
  4891  003122  0009               	tblrd		*+
  4892  003124  0101               	movlb	1	; () banked
  4893  003126  CFF5 F100          	movff	tablat,?_scale
  4894  00312A  0009               	tblrd		*+
  4895  00312C  0101               	movlb	1	; () banked
  4896  00312E  CFF5 F101          	movff	tablat,?_scale+1
  4897  003132  000A               	tblrd		*-
  4898  003134  0101               	movlb	1	; () banked
  4899  003136  CFF5 F102          	movff	tablat,?_scale+2
  4900  00313A  0012               	return	
  4901  00313C                     __end_of_scale:
  4902                           	opt stack 0
  4903                           tblptru	equ	0xFF8
  4904                           tblptrh	equ	0xFF7
  4905                           tblptrl	equ	0xFF6
  4906                           tablat	equ	0xFF5
  4907                           prodh	equ	0xFF4
  4908                           prodl	equ	0xFF3
  4909                           intcon	equ	0xFF2
  4910                           wreg	equ	0xFE8
  4911                           indf2	equ	0xFDF
  4912                           postinc2	equ	0xFDE
  4913                           postdec2	equ	0xFDD
  4914                           fsr2h	equ	0xFDA
  4915                           fsr2l	equ	0xFD9
  4916                           status	equ	0xFD8
  4917                           
  4918 ;; *************** function _isdigit *****************
  4919 ;; Defined at:
  4920 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\isdigit.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  c               1    wreg     unsigned char 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  c               1   63[BANK0 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;		None               void
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4937 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4938 ;;Total ram usage:        3 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    7
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_sprintf
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text4
  4949  006BBE                     __ptext4:
  4950                           	opt stack 0
  4951  006BBE                     _isdigit:
  4952                           	opt stack 21
  4953                           
  4954                           ;incstack = 0
  4955                           ;isdigit@c stored from wreg
  4956  006BBE  CFE8 F09F          	movff	wreg,isdigit@c
  4957  006BC2  0100               	movlb	0	; () banked
  4958  006BC4  6F9D               	movwf	??_isdigit& (0+255),b
  4959  006BC6  0E00               	movlw	0
  4960  006BC8  0100               	movlb	0	; () banked
  4961  006BCA  0100               	movlb	0	; () banked
  4962  006BCC  6F9E               	movwf	_isdigit$1329& (0+255),b
  4963  006BCE  0100               	movlb	0	; () banked
  4964  006BD0  519D               	movf	??_isdigit& (0+255),w,b
  4965                           
  4966                           ; BSR set to: 0
  4967  006BD2  0E3A               	movlw	58
  4968  006BD4  0100               	movlb	0	; () banked
  4969  006BD6  0100               	movlb	0	; () banked
  4970  006BD8  5D9F               	subwf	isdigit@c& (0+255),w,b
  4971  006BDA  B0D8               	btfsc	status,0,c
  4972  006BDC  D00D               	goto	l6989
  4973                           
  4974                           ; BSR set to: 0
  4975  006BDE  0E2F               	movlw	47
  4976  006BE0  0100               	movlb	0	; () banked
  4977  006BE2  0100               	movlb	0	; () banked
  4978  006BE4  659F               	cpfsgt	isdigit@c& (0+255),b
  4979  006BE6  D008               	goto	l6989
  4980                           
  4981                           ; BSR set to: 0
  4982  006BE8  0100               	movlb	0	; () banked
  4983  006BEA  6F9D               	movwf	??_isdigit& (0+255),b
  4984  006BEC  0E01               	movlw	1
  4985  006BEE  0100               	movlb	0	; () banked
  4986  006BF0  0100               	movlb	0	; () banked
  4987  006BF2  6F9E               	movwf	_isdigit$1329& (0+255),b
  4988  006BF4  0100               	movlb	0	; () banked
  4989  006BF6  519D               	movf	??_isdigit& (0+255),w,b
  4990  006BF8                     l6989:
  4991                           
  4992                           ; BSR set to: 0
  4993  006BF8  C09E  F09D         	movff	_isdigit$1329,??_isdigit
  4994  006BFC  0100               	movlb	0	; () banked
  4995  006BFE  319D               	rrcf	??_isdigit& (0+255),w,b
  4996  006C00  0012               	return	
  4997  006C02                     __end_of_isdigit:
  4998                           	opt stack 0
  4999                           tblptru	equ	0xFF8
  5000                           tblptrh	equ	0xFF7
  5001                           tblptrl	equ	0xFF6
  5002                           tablat	equ	0xFF5
  5003                           prodh	equ	0xFF4
  5004                           prodl	equ	0xFF3
  5005                           intcon	equ	0xFF2
  5006                           wreg	equ	0xFE8
  5007                           indf2	equ	0xFDF
  5008                           postinc2	equ	0xFDE
  5009                           postdec2	equ	0xFDD
  5010                           fsr2h	equ	0xFDA
  5011                           fsr2l	equ	0xFD9
  5012                           status	equ	0xFD8
  5013                           
  5014 ;; *************** function _fround *****************
  5015 ;; Defined at:
  5016 ;;		line 409 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\doprnt.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  prec            1    wreg     unsigned char 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  prec            1    9[BANK1 ] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  3    0[BANK1 ] unsigned char 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5030 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5031 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5033 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5034 ;;Total ram usage:       10 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    9
  5037 ;; This function calls:
  5038 ;;		___awdiv
  5039 ;;		___awmod
  5040 ;;		___ftmul
  5041 ;;		___wmul
  5042 ;; This function is called by:
  5043 ;;		_sprintf
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text5
  5048  00358E                     __ptext5:
  5049                           	opt stack 0
  5050  00358E                     _fround:
  5051                           	opt stack 19
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;incstack = 0
  5055                           ;fround@prec stored from wreg
  5056  00358E  CFE8 F109          	movff	wreg,fround@prec
  5057                           
  5058                           ;doprnt.c: 413: if(prec>=110)
  5059  003592  0E6D               	movlw	109
  5060  003594  0101               	movlb	1	; () banked
  5061  003596  0101               	movlb	1	; () banked
  5062  003598  6509               	cpfsgt	fround@prec& (0+255),b
  5063  00359A  D0F3               	goto	l6931
  5064                           
  5065                           ; BSR set to: 1
  5066                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5067  00359C  0E00               	movlw	0
  5068  00359E  0100               	movlb	0	; () banked
  5069  0035A0  0100               	movlb	0	; () banked
  5070  0035A2  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5071  0035A4  0E03               	movlw	3
  5072  0035A6  0100               	movlb	0	; () banked
  5073  0035A8  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5074  0035AA  0E00               	movlw	0
  5075  0035AC  0100               	movlb	0	; () banked
  5076  0035AE  0100               	movlb	0	; () banked
  5077  0035B0  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  5078  0035B2  0E0A               	movlw	10
  5079  0035B4  0100               	movlb	0	; () banked
  5080  0035B6  6FA6               	movwf	___awdiv@divisor& (0+255),b
  5081  0035B8  0E00               	movlw	0
  5082  0035BA  0100               	movlb	0	; () banked
  5083  0035BC  0100               	movlb	0	; () banked
  5084  0035BE  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  5085  0035C0  0E64               	movlw	100
  5086  0035C2  0100               	movlb	0	; () banked
  5087  0035C4  6F9F               	movwf	___awmod@divisor& (0+255),b
  5088  0035C6  0101               	movlb	1	; () banked
  5089  0035C8  0100               	movlb	0	; () banked
  5090  0035CA  C109  F09D         	movff	fround@prec,___awmod@dividend
  5091  0035CE  0100               	movlb	0	; () banked
  5092  0035D0  0100               	movlb	0	; () banked
  5093  0035D2  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  5094  0035D4  ECE0  F02C         	call	___awmod	;wreg free
  5095  0035D8  0100               	movlb	0	; () banked
  5096  0035DA  C09D  F0A4         	movff	?___awmod,___awdiv@dividend
  5097  0035DE  0100               	movlb	0	; () banked
  5098  0035E0  C09E  F0A5         	movff	?___awmod+1,___awdiv@dividend+1
  5099  0035E4  EC92  F02A         	call	___awdiv	;wreg free
  5100  0035E8  0E09               	movlw	9
  5101  0035EA  0100               	movlb	0	; () banked
  5102  0035EC  0100               	movlb	0	; () banked
  5103  0035EE  25A4               	addwf	?___awdiv& (0+255),w,b
  5104  0035F0  0100               	movlb	0	; () banked
  5105  0035F2  0100               	movlb	0	; () banked
  5106  0035F4  6FAD               	movwf	___wmul@multiplier& (0+255),b
  5107  0035F6  0E00               	movlw	0
  5108  0035F8  0100               	movlb	0	; () banked
  5109  0035FA  0100               	movlb	0	; () banked
  5110  0035FC  21A5               	addwfc	(?___awdiv+1)& (0+255),w,b
  5111  0035FE  0100               	movlb	0	; () banked
  5112  003600  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  5113  003602  ECA4  F034         	call	___wmul	;wreg free
  5114  003606  0E29               	movlw	low __npowers_
  5115  003608  0100               	movlb	0	; () banked
  5116  00360A  0100               	movlb	0	; () banked
  5117  00360C  25AD               	addwf	?___wmul& (0+255),w,b
  5118  00360E  6EF6               	movwf	tblptrl,c
  5119  003610  0E0F               	movlw	high __npowers_
  5120  003612  0100               	movlb	0	; () banked
  5121  003614  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5122  003616  6EF7               	movwf	tblptrh,c
  5123  003618  6AF8               	clrf	tblptru,c
  5124  00361A  0E00               	movlw	low (__mediumconst shr (0+16))
  5125  00361C  22F8               	addwfc	tblptru,f,c
  5126  00361E  0009               	tblrd		*+
  5127  003620  0100               	movlb	0	; () banked
  5128  003622  CFF5 F0B6          	movff	tablat,___ftmul@f2
  5129  003626  0009               	tblrd		*+
  5130  003628  0100               	movlb	0	; () banked
  5131  00362A  CFF5 F0B7          	movff	tablat,___ftmul@f2+1
  5132  00362E  000A               	tblrd		*-
  5133  003630  0100               	movlb	0	; () banked
  5134  003632  CFF5 F0B8          	movff	tablat,___ftmul@f2+2
  5135  003636  0E00               	movlw	0
  5136  003638  0100               	movlb	0	; () banked
  5137  00363A  0100               	movlb	0	; () banked
  5138  00363C  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5139  00363E  0E03               	movlw	3
  5140  003640  0100               	movlb	0	; () banked
  5141  003642  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5142  003644  0E00               	movlw	0
  5143  003646  0100               	movlb	0	; () banked
  5144  003648  0100               	movlb	0	; () banked
  5145  00364A  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  5146  00364C  0E64               	movlw	100
  5147  00364E  0100               	movlb	0	; () banked
  5148  003650  6FA6               	movwf	___awdiv@divisor& (0+255),b
  5149  003652  0101               	movlb	1	; () banked
  5150  003654  0100               	movlb	0	; () banked
  5151  003656  C109  F0A4         	movff	fround@prec,___awdiv@dividend
  5152  00365A  0100               	movlb	0	; () banked
  5153  00365C  0100               	movlb	0	; () banked
  5154  00365E  6BA5               	clrf	(___awdiv@dividend+1)& (0+255),b
  5155  003660  EC92  F02A         	call	___awdiv	;wreg free
  5156  003664  0E12               	movlw	18
  5157  003666  0100               	movlb	0	; () banked
  5158  003668  0100               	movlb	0	; () banked
  5159  00366A  25A4               	addwf	?___awdiv& (0+255),w,b
  5160  00366C  0100               	movlb	0	; () banked
  5161  00366E  0100               	movlb	0	; () banked
  5162  003670  6FAD               	movwf	___wmul@multiplier& (0+255),b
  5163  003672  0E00               	movlw	0
  5164  003674  0100               	movlb	0	; () banked
  5165  003676  0100               	movlb	0	; () banked
  5166  003678  21A5               	addwfc	(?___awdiv+1)& (0+255),w,b
  5167  00367A  0100               	movlb	0	; () banked
  5168  00367C  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  5169  00367E  ECA4  F034         	call	___wmul	;wreg free
  5170  003682  0E29               	movlw	low __npowers_
  5171  003684  0100               	movlb	0	; () banked
  5172  003686  0100               	movlb	0	; () banked
  5173  003688  25AD               	addwf	?___wmul& (0+255),w,b
  5174  00368A  6EF6               	movwf	tblptrl,c
  5175  00368C  0E0F               	movlw	high __npowers_
  5176  00368E  0100               	movlb	0	; () banked
  5177  003690  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5178  003692  6EF7               	movwf	tblptrh,c
  5179  003694  6AF8               	clrf	tblptru,c
  5180  003696  0E00               	movlw	low (__mediumconst shr (0+16))
  5181  003698  22F8               	addwfc	tblptru,f,c
  5182  00369A  0009               	tblrd		*+
  5183  00369C  0100               	movlb	0	; () banked
  5184  00369E  CFF5 F0B3          	movff	tablat,___ftmul@f1
  5185  0036A2  0009               	tblrd		*+
  5186  0036A4  0100               	movlb	0	; () banked
  5187  0036A6  CFF5 F0B4          	movff	tablat,___ftmul@f1+1
  5188  0036AA  000A               	tblrd		*-
  5189  0036AC  0100               	movlb	0	; () banked
  5190  0036AE  CFF5 F0B5          	movff	tablat,___ftmul@f1+2
  5191  0036B2  ECC8  F023         	call	___ftmul	;wreg free
  5192  0036B6  C0B3  F106         	movff	?___ftmul,_fround$1690
  5193  0036BA  C0B4  F107         	movff	?___ftmul+1,_fround$1690+1
  5194  0036BE  C0B5  F108         	movff	?___ftmul+2,_fround$1690+2
  5195                           
  5196                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5197  0036C2  0E00               	movlw	0
  5198  0036C4  0100               	movlb	0	; () banked
  5199  0036C6  0100               	movlb	0	; () banked
  5200  0036C8  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5201  0036CA  0E03               	movlw	3
  5202  0036CC  0100               	movlb	0	; () banked
  5203  0036CE  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5204  0036D0  0E00               	movlw	0
  5205  0036D2  0100               	movlb	0	; () banked
  5206  0036D4  0100               	movlb	0	; () banked
  5207  0036D6  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  5208  0036D8  0E0A               	movlw	10
  5209  0036DA  0100               	movlb	0	; () banked
  5210  0036DC  6F9F               	movwf	___awmod@divisor& (0+255),b
  5211  0036DE  0101               	movlb	1	; () banked
  5212  0036E0  0100               	movlb	0	; () banked
  5213  0036E2  C109  F09D         	movff	fround@prec,___awmod@dividend
  5214  0036E6  0100               	movlb	0	; () banked
  5215  0036E8  0100               	movlb	0	; () banked
  5216  0036EA  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  5217  0036EC  ECE0  F02C         	call	___awmod	;wreg free
  5218  0036F0  0100               	movlb	0	; () banked
  5219  0036F2  C09D  F0AD         	movff	?___awmod,___wmul@multiplier
  5220  0036F6  0100               	movlb	0	; () banked
  5221  0036F8  C09E  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  5222  0036FC  ECA4  F034         	call	___wmul	;wreg free
  5223  003700  0E29               	movlw	low __npowers_
  5224  003702  0100               	movlb	0	; () banked
  5225  003704  0100               	movlb	0	; () banked
  5226  003706  25AD               	addwf	?___wmul& (0+255),w,b
  5227  003708  6EF6               	movwf	tblptrl,c
  5228  00370A  0E0F               	movlw	high __npowers_
  5229  00370C  0100               	movlb	0	; () banked
  5230  00370E  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5231  003710  6EF7               	movwf	tblptrh,c
  5232  003712  6AF8               	clrf	tblptru,c
  5233  003714  0E00               	movlw	low (__mediumconst shr (0+16))
  5234  003716  22F8               	addwfc	tblptru,f,c
  5235  003718  0009               	tblrd		*+
  5236  00371A  0100               	movlb	0	; () banked
  5237  00371C  CFF5 F0B6          	movff	tablat,___ftmul@f2
  5238  003720  0009               	tblrd		*+
  5239  003722  0100               	movlb	0	; () banked
  5240  003724  CFF5 F0B7          	movff	tablat,___ftmul@f2+1
  5241  003728  000A               	tblrd		*-
  5242  00372A  0100               	movlb	0	; () banked
  5243  00372C  CFF5 F0B8          	movff	tablat,___ftmul@f2+2
  5244  003730  C106  F0B3         	movff	_fround$1690,___ftmul@f1
  5245  003734  C107  F0B4         	movff	_fround$1690+1,___ftmul@f1+1
  5246  003738  C108  F0B5         	movff	_fround$1690+2,___ftmul@f1+2
  5247  00373C  ECC8  F023         	call	___ftmul	;wreg free
  5248  003740  C0B3  F103         	movff	?___ftmul,_fround$1691
  5249  003744  C0B4  F104         	movff	?___ftmul+1,_fround$1691+1
  5250  003748  C0B5  F105         	movff	?___ftmul+2,_fround$1691+2
  5251                           
  5252                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  5253  00374C  C103  F0B3         	movff	_fround$1691,___ftmul@f1
  5254  003750  C104  F0B4         	movff	_fround$1691+1,___ftmul@f1+1
  5255  003754  C105  F0B5         	movff	_fround$1691+2,___ftmul@f1+2
  5256  003758  0E00               	movlw	0
  5257  00375A  0100               	movlb	0	; () banked
  5258  00375C  0100               	movlb	0	; () banked
  5259  00375E  6FB6               	movwf	___ftmul@f2& (0+255),b
  5260  003760  0E00               	movlw	0
  5261  003762  0100               	movlb	0	; () banked
  5262  003764  0100               	movlb	0	; () banked
  5263  003766  6FB7               	movwf	(___ftmul@f2+1)& (0+255),b
  5264  003768  0E3F               	movlw	63
  5265  00376A  0100               	movlb	0	; () banked
  5266  00376C  0100               	movlb	0	; () banked
  5267  00376E  6FB8               	movwf	(___ftmul@f2+2)& (0+255),b
  5268  003770  ECC8  F023         	call	___ftmul	;wreg free
  5269  003774  C0B3  F100         	movff	?___ftmul,?_fround
  5270  003778  C0B4  F101         	movff	?___ftmul+1,?_fround+1
  5271  00377C  C0B5  F102         	movff	?___ftmul+2,?_fround+2
  5272  003780  0012               	return	
  5273  003782                     l6931:
  5274                           
  5275                           ;doprnt.c: 415: else if(prec > 10)
  5276  003782  0E0A               	movlw	10
  5277  003784  0101               	movlb	1	; () banked
  5278  003786  0101               	movlb	1	; () banked
  5279  003788  6509               	cpfsgt	fround@prec& (0+255),b
  5280  00378A  D098               	goto	l6939
  5281                           
  5282                           ; BSR set to: 1
  5283                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5284  00378C  0E00               	movlw	0
  5285  00378E  0100               	movlb	0	; () banked
  5286  003790  0100               	movlb	0	; () banked
  5287  003792  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5288  003794  0E03               	movlw	3
  5289  003796  0100               	movlb	0	; () banked
  5290  003798  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5291  00379A  0E00               	movlw	0
  5292  00379C  0100               	movlb	0	; () banked
  5293  00379E  0100               	movlb	0	; () banked
  5294  0037A0  6FA0               	movwf	(___awmod@divisor+1)& (0+255),b
  5295  0037A2  0E0A               	movlw	10
  5296  0037A4  0100               	movlb	0	; () banked
  5297  0037A6  6F9F               	movwf	___awmod@divisor& (0+255),b
  5298  0037A8  0101               	movlb	1	; () banked
  5299  0037AA  0100               	movlb	0	; () banked
  5300  0037AC  C109  F09D         	movff	fround@prec,___awmod@dividend
  5301  0037B0  0100               	movlb	0	; () banked
  5302  0037B2  0100               	movlb	0	; () banked
  5303  0037B4  6B9E               	clrf	(___awmod@dividend+1)& (0+255),b
  5304  0037B6  ECE0  F02C         	call	___awmod	;wreg free
  5305  0037BA  0100               	movlb	0	; () banked
  5306  0037BC  C09D  F0AD         	movff	?___awmod,___wmul@multiplier
  5307  0037C0  0100               	movlb	0	; () banked
  5308  0037C2  C09E  F0AE         	movff	?___awmod+1,___wmul@multiplier+1
  5309  0037C6  ECA4  F034         	call	___wmul	;wreg free
  5310  0037CA  0E29               	movlw	low __npowers_
  5311  0037CC  0100               	movlb	0	; () banked
  5312  0037CE  0100               	movlb	0	; () banked
  5313  0037D0  25AD               	addwf	?___wmul& (0+255),w,b
  5314  0037D2  6EF6               	movwf	tblptrl,c
  5315  0037D4  0E0F               	movlw	high __npowers_
  5316  0037D6  0100               	movlb	0	; () banked
  5317  0037D8  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5318  0037DA  6EF7               	movwf	tblptrh,c
  5319  0037DC  6AF8               	clrf	tblptru,c
  5320  0037DE  0E00               	movlw	low (__mediumconst shr (0+16))
  5321  0037E0  22F8               	addwfc	tblptru,f,c
  5322  0037E2  0009               	tblrd		*+
  5323  0037E4  0100               	movlb	0	; () banked
  5324  0037E6  CFF5 F0B6          	movff	tablat,___ftmul@f2
  5325  0037EA  0009               	tblrd		*+
  5326  0037EC  0100               	movlb	0	; () banked
  5327  0037EE  CFF5 F0B7          	movff	tablat,___ftmul@f2+1
  5328  0037F2  000A               	tblrd		*-
  5329  0037F4  0100               	movlb	0	; () banked
  5330  0037F6  CFF5 F0B8          	movff	tablat,___ftmul@f2+2
  5331  0037FA  0E00               	movlw	0
  5332  0037FC  0100               	movlb	0	; () banked
  5333  0037FE  0100               	movlb	0	; () banked
  5334  003800  6FB0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5335  003802  0E03               	movlw	3
  5336  003804  0100               	movlb	0	; () banked
  5337  003806  6FAF               	movwf	___wmul@multiplicand& (0+255),b
  5338  003808  0E00               	movlw	0
  5339  00380A  0100               	movlb	0	; () banked
  5340  00380C  0100               	movlb	0	; () banked
  5341  00380E  6FA7               	movwf	(___awdiv@divisor+1)& (0+255),b
  5342  003810  0E0A               	movlw	10
  5343  003812  0100               	movlb	0	; () banked
  5344  003814  6FA6               	movwf	___awdiv@divisor& (0+255),b
  5345  003816  0101               	movlb	1	; () banked
  5346  003818  0100               	movlb	0	; () banked
  5347  00381A  C109  F0A4         	movff	fround@prec,___awdiv@dividend
  5348  00381E  0100               	movlb	0	; () banked
  5349  003820  0100               	movlb	0	; () banked
  5350  003822  6BA5               	clrf	(___awdiv@dividend+1)& (0+255),b
  5351  003824  EC92  F02A         	call	___awdiv	;wreg free
  5352  003828  0E09               	movlw	9
  5353  00382A  0100               	movlb	0	; () banked
  5354  00382C  0100               	movlb	0	; () banked
  5355  00382E  25A4               	addwf	?___awdiv& (0+255),w,b
  5356  003830  0100               	movlb	0	; () banked
  5357  003832  0100               	movlb	0	; () banked
  5358  003834  6FAD               	movwf	___wmul@multiplier& (0+255),b
  5359  003836  0E00               	movlw	0
  5360  003838  0100               	movlb	0	; () banked
  5361  00383A  0100               	movlb	0	; () banked
  5362  00383C  21A5               	addwfc	(?___awdiv+1)& (0+255),w,b
  5363  00383E  0100               	movlb	0	; () banked
  5364  003840  6FAE               	movwf	(___wmul@multiplier+1)& (0+255),b
  5365  003842  ECA4  F034         	call	___wmul	;wreg free
  5366  003846  0E29               	movlw	low __npowers_
  5367  003848  0100               	movlb	0	; () banked
  5368  00384A  0100               	movlb	0	; () banked
  5369  00384C  25AD               	addwf	?___wmul& (0+255),w,b
  5370  00384E  6EF6               	movwf	tblptrl,c
  5371  003850  0E0F               	movlw	high __npowers_
  5372  003852  0100               	movlb	0	; () banked
  5373  003854  21AE               	addwfc	(?___wmul+1)& (0+255),w,b
  5374  003856  6EF7               	movwf	tblptrh,c
  5375  003858  6AF8               	clrf	tblptru,c
  5376  00385A  0E00               	movlw	low (__mediumconst shr (0+16))
  5377  00385C  22F8               	addwfc	tblptru,f,c
  5378  00385E  0009               	tblrd		*+
  5379  003860  0100               	movlb	0	; () banked
  5380  003862  CFF5 F0B3          	movff	tablat,___ftmul@f1
  5381  003866  0009               	tblrd		*+
  5382  003868  0100               	movlb	0	; () banked
  5383  00386A  CFF5 F0B4          	movff	tablat,___ftmul@f1+1
  5384  00386E  000A               	tblrd		*-
  5385  003870  0100               	movlb	0	; () banked
  5386  003872  CFF5 F0B5          	movff	tablat,___ftmul@f1+2
  5387  003876  ECC8  F023         	call	___ftmul	;wreg free
  5388  00387A  C0B3  F106         	movff	?___ftmul,_fround$1690
  5389  00387E  C0B4  F107         	movff	?___ftmul+1,_fround$1690+1
  5390  003882  C0B5  F108         	movff	?___ftmul+2,_fround$1690+2
  5391                           
  5392                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5393  003886  C106  F0B3         	movff	_fround$1690,___ftmul@f1
  5394  00388A  C107  F0B4         	movff	_fround$1690+1,___ftmul@f1+1
  5395  00388E  C108  F0B5         	movff	_fround$1690+2,___ftmul@f1+2
  5396  003892  0E00               	movlw	0
  5397  003894  0100               	movlb	0	; () banked
  5398  003896  0100               	movlb	0	; () banked
  5399  003898  6FB6               	movwf	___ftmul@f2& (0+255),b
  5400  00389A  0E00               	movlw	0
  5401  00389C  0100               	movlb	0	; () banked
  5402  00389E  0100               	movlb	0	; () banked
  5403  0038A0  6FB7               	movwf	(___ftmul@f2+1)& (0+255),b
  5404  0038A2  0E3F               	movlw	63
  5405  0038A4  0100               	movlb	0	; () banked
  5406  0038A6  0100               	movlb	0	; () banked
  5407  0038A8  6FB8               	movwf	(___ftmul@f2+2)& (0+255),b
  5408  0038AA  ECC8  F023         	call	___ftmul	;wreg free
  5409  0038AE  C0B3  F100         	movff	?___ftmul,?_fround
  5410  0038B2  C0B4  F101         	movff	?___ftmul+1,?_fround+1
  5411  0038B6  C0B5  F102         	movff	?___ftmul+2,?_fround+2
  5412  0038BA  0012               	return	
  5413  0038BC                     l6939:
  5414                           
  5415                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5416  0038BC  0101               	movlb	1	; () banked
  5417  0038BE  0101               	movlb	1	; () banked
  5418  0038C0  5109               	movf	fround@prec& (0+255),w,b
  5419  0038C2  0D03               	mullw	3
  5420  0038C4  0E29               	movlw	low __npowers_
  5421  0038C6  24F3               	addwf	prodl,w,c
  5422  0038C8  6EF6               	movwf	tblptrl,c
  5423  0038CA  0E0F               	movlw	high __npowers_
  5424  0038CC  20F4               	addwfc	prodh,w,c
  5425  0038CE  6EF7               	movwf	tblptrh,c
  5426  0038D0  6AF8               	clrf	tblptru,c
  5427  0038D2  0E00               	movlw	low (__mediumconst shr (0+16))
  5428  0038D4  22F8               	addwfc	tblptru,f,c
  5429  0038D6  0009               	tblrd		*+
  5430  0038D8  0100               	movlb	0	; () banked
  5431  0038DA  CFF5 F0B3          	movff	tablat,___ftmul@f1
  5432  0038DE  0009               	tblrd		*+
  5433  0038E0  0100               	movlb	0	; () banked
  5434  0038E2  CFF5 F0B4          	movff	tablat,___ftmul@f1+1
  5435  0038E6  000A               	tblrd		*-
  5436  0038E8  0100               	movlb	0	; () banked
  5437  0038EA  CFF5 F0B5          	movff	tablat,___ftmul@f1+2
  5438  0038EE  0E00               	movlw	0
  5439  0038F0  0100               	movlb	0	; () banked
  5440  0038F2  0100               	movlb	0	; () banked
  5441  0038F4  6FB6               	movwf	___ftmul@f2& (0+255),b
  5442  0038F6  0E00               	movlw	0
  5443  0038F8  0100               	movlb	0	; () banked
  5444  0038FA  0100               	movlb	0	; () banked
  5445  0038FC  6FB7               	movwf	(___ftmul@f2+1)& (0+255),b
  5446  0038FE  0E3F               	movlw	63
  5447  003900  0100               	movlb	0	; () banked
  5448  003902  0100               	movlb	0	; () banked
  5449  003904  6FB8               	movwf	(___ftmul@f2+2)& (0+255),b
  5450  003906  ECC8  F023         	call	___ftmul	;wreg free
  5451  00390A  C0B3  F100         	movff	?___ftmul,?_fround
  5452  00390E  C0B4  F101         	movff	?___ftmul+1,?_fround+1
  5453  003912  C0B5  F102         	movff	?___ftmul+2,?_fround+2
  5454  003916  0012               	return	
  5455  003918                     __end_of_fround:
  5456                           	opt stack 0
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           prodh	equ	0xFF4
  5462                           prodl	equ	0xFF3
  5463                           intcon	equ	0xFF2
  5464                           wreg	equ	0xFE8
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           postdec2	equ	0xFDD
  5468                           fsr2h	equ	0xFDA
  5469                           fsr2l	equ	0xFD9
  5470                           status	equ	0xFD8
  5471                           
  5472 ;; *************** function ___wmul *****************
  5473 ;; Defined at:
  5474 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\wmul.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  multiplier      2   77[BANK0 ] unsigned int 
  5477 ;;  multiplicand    2   79[BANK0 ] unsigned int 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  product         2   81[BANK0 ] unsigned int 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  2   77[BANK0 ] unsigned int 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0, prodl, prodh
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5492 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5493 ;;Total ram usage:        6 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    7
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_fround
  5500 ;;		_scale
  5501 ;;		_sprintf
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text6
  5506  006948                     __ptext6:
  5507                           	opt stack 0
  5508  006948                     ___wmul:
  5509                           	opt stack 20
  5510                           
  5511                           ;incstack = 0
  5512  006948  0100               	movlb	0	; () banked
  5513  00694A  0100               	movlb	0	; () banked
  5514  00694C  51AD               	movf	___wmul@multiplier& (0+255),w,b
  5515  00694E  0100               	movlb	0	; () banked
  5516  006950  0100               	movlb	0	; () banked
  5517  006952  03AF               	mulwf	___wmul@multiplicand& (0+255),b
  5518  006954  CFF3 F0B1          	movff	prodl,___wmul@product
  5519  006958  CFF4 F0B2          	movff	prodh,___wmul@product+1
  5520  00695C  0100               	movlb	0	; () banked
  5521  00695E  0100               	movlb	0	; () banked
  5522  006960  51AD               	movf	___wmul@multiplier& (0+255),w,b
  5523  006962  0100               	movlb	0	; () banked
  5524  006964  0100               	movlb	0	; () banked
  5525  006966  03B0               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5526  006968  CFF3 FFF4          	movff	prodl,prodh
  5527  00696C  6AF3               	clrf	prodl,c
  5528  00696E  50F3               	movf	prodl,w,c
  5529  006970  0100               	movlb	0	; () banked
  5530  006972  0100               	movlb	0	; () banked
  5531  006974  27B1               	addwf	___wmul@product& (0+255),f,b
  5532  006976  50F4               	movf	prodh,w,c
  5533  006978  0100               	movlb	0	; () banked
  5534  00697A  0100               	movlb	0	; () banked
  5535  00697C  23B2               	addwfc	(___wmul@product+1)& (0+255),f,b
  5536  00697E  0100               	movlb	0	; () banked
  5537  006980  0100               	movlb	0	; () banked
  5538  006982  51AE               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5539  006984  0100               	movlb	0	; () banked
  5540  006986  0100               	movlb	0	; () banked
  5541  006988  03AF               	mulwf	___wmul@multiplicand& (0+255),b
  5542  00698A  CFF3 FFF4          	movff	prodl,prodh
  5543  00698E  6AF3               	clrf	prodl,c
  5544  006990  50F3               	movf	prodl,w,c
  5545  006992  0100               	movlb	0	; () banked
  5546  006994  0100               	movlb	0	; () banked
  5547  006996  27B1               	addwf	___wmul@product& (0+255),f,b
  5548  006998  50F4               	movf	prodh,w,c
  5549  00699A  0100               	movlb	0	; () banked
  5550  00699C  0100               	movlb	0	; () banked
  5551  00699E  23B2               	addwfc	(___wmul@product+1)& (0+255),f,b
  5552                           
  5553                           ; BSR set to: 0
  5554  0069A0  C0B1  F0AD         	movff	___wmul@product,?___wmul
  5555  0069A4  C0B2  F0AE         	movff	___wmul@product+1,?___wmul+1
  5556  0069A8  0012               	return	
  5557  0069AA                     __end_of___wmul:
  5558                           	opt stack 0
  5559                           tblptru	equ	0xFF8
  5560                           tblptrh	equ	0xFF7
  5561                           tblptrl	equ	0xFF6
  5562                           tablat	equ	0xFF5
  5563                           prodh	equ	0xFF4
  5564                           prodl	equ	0xFF3
  5565                           intcon	equ	0xFF2
  5566                           wreg	equ	0xFE8
  5567                           indf2	equ	0xFDF
  5568                           postinc2	equ	0xFDE
  5569                           postdec2	equ	0xFDD
  5570                           fsr2h	equ	0xFDA
  5571                           fsr2l	equ	0xFD9
  5572                           status	equ	0xFD8
  5573                           
  5574 ;; *************** function ___awmod *****************
  5575 ;; Defined at:
  5576 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\awmod.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  dividend        2   61[BANK0 ] int 
  5579 ;;  divisor         2   63[BANK0 ] int 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  sign            1   67[BANK0 ] unsigned char 
  5582 ;;  counter         1   66[BANK0 ] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  2   61[BANK0 ] int 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0, prodl
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5592 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5593 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5595 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5596 ;;Total ram usage:        7 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    7
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_fround
  5603 ;;		_scale
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text7
  5608  0059C0                     __ptext7:
  5609                           	opt stack 0
  5610  0059C0                     ___awmod:
  5611                           	opt stack 20
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;incstack = 0
  5615  0059C0  0100               	movlb	0	; () banked
  5616  0059C2  6FA1               	movwf	??___awmod& (0+255),b
  5617  0059C4  0E00               	movlw	0
  5618  0059C6  0100               	movlb	0	; () banked
  5619  0059C8  0100               	movlb	0	; () banked
  5620  0059CA  6FA3               	movwf	___awmod@sign& (0+255),b
  5621  0059CC  0100               	movlb	0	; () banked
  5622  0059CE  51A1               	movf	??___awmod& (0+255),w,b
  5623                           
  5624                           ; BSR set to: 0
  5625  0059D0  0100               	movlb	0	; () banked
  5626  0059D2  0100               	movlb	0	; () banked
  5627  0059D4  519E               	movf	(___awmod@dividend+1)& (0+255),w,b
  5628  0059D6  0A80               	xorlw	128
  5629  0059D8  6EF3               	movwf	prodl,c
  5630  0059DA  0E80               	movlw	128
  5631  0059DC  5CF3               	subwf	prodl,w,c
  5632  0059DE  0E00               	movlw	0
  5633  0059E0  B4D8               	btfsc	status,2,c
  5634  0059E2  5D9D               	subwf	___awmod@dividend& (0+255),w,b
  5635  0059E4  B0D8               	btfsc	status,0,c
  5636  0059E6  D00F               	goto	l6665
  5637                           
  5638                           ; BSR set to: 0
  5639  0059E8  0100               	movlb	0	; () banked
  5640  0059EA  0100               	movlb	0	; () banked
  5641  0059EC  6D9D               	negf	___awmod@dividend& (0+255),b
  5642  0059EE  0100               	movlb	0	; () banked
  5643  0059F0  1F9E               	comf	(___awmod@dividend+1)& (0+255),f,b
  5644  0059F2  B0D8               	btfsc	status,0,c
  5645  0059F4  2B9E               	incf	(___awmod@dividend+1)& (0+255),f,b
  5646                           
  5647                           ; BSR set to: 0
  5648  0059F6  0100               	movlb	0	; () banked
  5649  0059F8  6FA1               	movwf	??___awmod& (0+255),b
  5650  0059FA  0E01               	movlw	1
  5651  0059FC  0100               	movlb	0	; () banked
  5652  0059FE  0100               	movlb	0	; () banked
  5653  005A00  6FA3               	movwf	___awmod@sign& (0+255),b
  5654  005A02  0100               	movlb	0	; () banked
  5655  005A04  51A1               	movf	??___awmod& (0+255),w,b
  5656  005A06                     l6665:
  5657                           
  5658                           ; BSR set to: 0
  5659  005A06  0100               	movlb	0	; () banked
  5660  005A08  0100               	movlb	0	; () banked
  5661  005A0A  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  5662  005A0C  0A80               	xorlw	128
  5663  005A0E  6EF3               	movwf	prodl,c
  5664  005A10  0E80               	movlw	128
  5665  005A12  5CF3               	subwf	prodl,w,c
  5666  005A14  0E00               	movlw	0
  5667  005A16  B4D8               	btfsc	status,2,c
  5668  005A18  5D9F               	subwf	___awmod@divisor& (0+255),w,b
  5669  005A1A  B0D8               	btfsc	status,0,c
  5670  005A1C  D007               	goto	l6669
  5671                           
  5672                           ; BSR set to: 0
  5673  005A1E  0100               	movlb	0	; () banked
  5674  005A20  0100               	movlb	0	; () banked
  5675  005A22  6D9F               	negf	___awmod@divisor& (0+255),b
  5676  005A24  0100               	movlb	0	; () banked
  5677  005A26  1FA0               	comf	(___awmod@divisor+1)& (0+255),f,b
  5678  005A28  B0D8               	btfsc	status,0,c
  5679  005A2A  2BA0               	incf	(___awmod@divisor+1)& (0+255),f,b
  5680  005A2C                     l6669:
  5681                           
  5682                           ; BSR set to: 0
  5683  005A2C  0100               	movlb	0	; () banked
  5684  005A2E  0100               	movlb	0	; () banked
  5685  005A30  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  5686  005A32  119F               	iorwf	___awmod@divisor& (0+255),w,b
  5687  005A34  B4D8               	btfsc	status,2,c
  5688  005A36  D03A               	goto	l6685
  5689                           
  5690                           ; BSR set to: 0
  5691  005A38  0100               	movlb	0	; () banked
  5692  005A3A  6FA1               	movwf	??___awmod& (0+255),b
  5693  005A3C  0E01               	movlw	1
  5694  005A3E  0100               	movlb	0	; () banked
  5695  005A40  0100               	movlb	0	; () banked
  5696  005A42  6FA2               	movwf	___awmod@counter& (0+255),b
  5697  005A44  0100               	movlb	0	; () banked
  5698  005A46  51A1               	movf	??___awmod& (0+255),w,b
  5699  005A48  D009               	goto	l6675
  5700  005A4A                     l6673:
  5701                           
  5702                           ; BSR set to: 0
  5703  005A4A  0100               	movlb	0	; () banked
  5704  005A4C  0100               	movlb	0	; () banked
  5705  005A4E  0100               	movlb	0	; () banked
  5706  005A50  90D8               	bcf	status,0,c
  5707  005A52  379F               	rlcf	___awmod@divisor& (0+255),f,b
  5708  005A54  37A0               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5709  005A56  0100               	movlb	0	; () banked
  5710  005A58  0100               	movlb	0	; () banked
  5711  005A5A  2BA2               	incf	___awmod@counter& (0+255),f,b
  5712  005A5C                     l6675:
  5713                           
  5714                           ; BSR set to: 0
  5715  005A5C  0100               	movlb	0	; () banked
  5716  005A5E  0100               	movlb	0	; () banked
  5717  005A60  AFA0               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5718  005A62  D7F3               	goto	l6673
  5719  005A64                     l6677:
  5720                           
  5721                           ; BSR set to: 0
  5722  005A64  0100               	movlb	0	; () banked
  5723  005A66  0100               	movlb	0	; () banked
  5724  005A68  519F               	movf	___awmod@divisor& (0+255),w,b
  5725  005A6A  0100               	movlb	0	; () banked
  5726  005A6C  0100               	movlb	0	; () banked
  5727  005A6E  5D9D               	subwf	___awmod@dividend& (0+255),w,b
  5728  005A70  0100               	movlb	0	; () banked
  5729  005A72  0100               	movlb	0	; () banked
  5730  005A74  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  5731  005A76  0100               	movlb	0	; () banked
  5732  005A78  0100               	movlb	0	; () banked
  5733  005A7A  599E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5734  005A7C  A0D8               	btfss	status,0,c
  5735  005A7E  D00C               	goto	l6681
  5736                           
  5737                           ; BSR set to: 0
  5738  005A80  0100               	movlb	0	; () banked
  5739  005A82  0100               	movlb	0	; () banked
  5740  005A84  519F               	movf	___awmod@divisor& (0+255),w,b
  5741  005A86  0100               	movlb	0	; () banked
  5742  005A88  0100               	movlb	0	; () banked
  5743  005A8A  5F9D               	subwf	___awmod@dividend& (0+255),f,b
  5744  005A8C  0100               	movlb	0	; () banked
  5745  005A8E  0100               	movlb	0	; () banked
  5746  005A90  51A0               	movf	(___awmod@divisor+1)& (0+255),w,b
  5747  005A92  0100               	movlb	0	; () banked
  5748  005A94  0100               	movlb	0	; () banked
  5749  005A96  5B9E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5750  005A98                     l6681:
  5751                           
  5752                           ; BSR set to: 0
  5753  005A98  0100               	movlb	0	; () banked
  5754  005A9A  0100               	movlb	0	; () banked
  5755  005A9C  0100               	movlb	0	; () banked
  5756  005A9E  90D8               	bcf	status,0,c
  5757  005AA0  33A0               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5758  005AA2  339F               	rrcf	___awmod@divisor& (0+255),f,b
  5759                           
  5760                           ; BSR set to: 0
  5761  005AA4  0100               	movlb	0	; () banked
  5762  005AA6  0100               	movlb	0	; () banked
  5763  005AA8  2FA2               	decfsz	___awmod@counter& (0+255),f,b
  5764  005AAA  D7DC               	goto	l6677
  5765  005AAC                     l6685:
  5766                           
  5767                           ; BSR set to: 0
  5768  005AAC  0100               	movlb	0	; () banked
  5769  005AAE  0100               	movlb	0	; () banked
  5770  005AB0  51A3               	movf	___awmod@sign& (0+255),w,b
  5771  005AB2  B4D8               	btfsc	status,2,c
  5772  005AB4  D007               	goto	l6689
  5773                           
  5774                           ; BSR set to: 0
  5775  005AB6  0100               	movlb	0	; () banked
  5776  005AB8  0100               	movlb	0	; () banked
  5777  005ABA  6D9D               	negf	___awmod@dividend& (0+255),b
  5778  005ABC  0100               	movlb	0	; () banked
  5779  005ABE  1F9E               	comf	(___awmod@dividend+1)& (0+255),f,b
  5780  005AC0  B0D8               	btfsc	status,0,c
  5781  005AC2  2B9E               	incf	(___awmod@dividend+1)& (0+255),f,b
  5782  005AC4                     l6689:
  5783                           
  5784                           ; BSR set to: 0
  5785  005AC4  C09D  F09D         	movff	___awmod@dividend,?___awmod
  5786  005AC8  C09E  F09E         	movff	___awmod@dividend+1,?___awmod+1
  5787  005ACC  0012               	return	
  5788  005ACE                     __end_of___awmod:
  5789                           	opt stack 0
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           prodh	equ	0xFF4
  5795                           prodl	equ	0xFF3
  5796                           intcon	equ	0xFF2
  5797                           wreg	equ	0xFE8
  5798                           indf2	equ	0xFDF
  5799                           postinc2	equ	0xFDE
  5800                           postdec2	equ	0xFDD
  5801                           fsr2h	equ	0xFDA
  5802                           fsr2l	equ	0xFD9
  5803                           status	equ	0xFD8
  5804                           
  5805 ;; *************** function ___awdiv *****************
  5806 ;; Defined at:
  5807 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\awdiv.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  dividend        2   68[BANK0 ] int 
  5810 ;;  divisor         2   70[BANK0 ] int 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  quotient        2   75[BANK0 ] int 
  5813 ;;  sign            1   74[BANK0 ] unsigned char 
  5814 ;;  counter         1   73[BANK0 ] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  2   68[BANK0 ] int 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0, prodl
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5824 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5825 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5826 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;Total ram usage:        9 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    7
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_fround
  5835 ;;		_scale
  5836 ;;		_sprintf
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text8
  5841  005524                     __ptext8:
  5842                           	opt stack 0
  5843  005524                     ___awdiv:
  5844                           	opt stack 20
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;incstack = 0
  5848  005524  0100               	movlb	0	; () banked
  5849  005526  6FA8               	movwf	??___awdiv& (0+255),b
  5850  005528  0E00               	movlw	0
  5851  00552A  0100               	movlb	0	; () banked
  5852  00552C  0100               	movlb	0	; () banked
  5853  00552E  6FAA               	movwf	___awdiv@sign& (0+255),b
  5854  005530  0100               	movlb	0	; () banked
  5855  005532  51A8               	movf	??___awdiv& (0+255),w,b
  5856                           
  5857                           ; BSR set to: 0
  5858  005534  0100               	movlb	0	; () banked
  5859  005536  0100               	movlb	0	; () banked
  5860  005538  51A7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5861  00553A  0A80               	xorlw	128
  5862  00553C  6EF3               	movwf	prodl,c
  5863  00553E  0E80               	movlw	128
  5864  005540  5CF3               	subwf	prodl,w,c
  5865  005542  0E00               	movlw	0
  5866  005544  B4D8               	btfsc	status,2,c
  5867  005546  5DA6               	subwf	___awdiv@divisor& (0+255),w,b
  5868  005548  B0D8               	btfsc	status,0,c
  5869  00554A  D00F               	goto	l6621
  5870                           
  5871                           ; BSR set to: 0
  5872  00554C  0100               	movlb	0	; () banked
  5873  00554E  0100               	movlb	0	; () banked
  5874  005550  6DA6               	negf	___awdiv@divisor& (0+255),b
  5875  005552  0100               	movlb	0	; () banked
  5876  005554  1FA7               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5877  005556  B0D8               	btfsc	status,0,c
  5878  005558  2BA7               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5879                           
  5880                           ; BSR set to: 0
  5881  00555A  0100               	movlb	0	; () banked
  5882  00555C  6FA8               	movwf	??___awdiv& (0+255),b
  5883  00555E  0E01               	movlw	1
  5884  005560  0100               	movlb	0	; () banked
  5885  005562  0100               	movlb	0	; () banked
  5886  005564  6FAA               	movwf	___awdiv@sign& (0+255),b
  5887  005566  0100               	movlb	0	; () banked
  5888  005568  51A8               	movf	??___awdiv& (0+255),w,b
  5889  00556A                     l6621:
  5890                           
  5891                           ; BSR set to: 0
  5892  00556A  0100               	movlb	0	; () banked
  5893  00556C  0100               	movlb	0	; () banked
  5894  00556E  51A5               	movf	(___awdiv@dividend+1)& (0+255),w,b
  5895  005570  0A80               	xorlw	128
  5896  005572  6EF3               	movwf	prodl,c
  5897  005574  0E80               	movlw	128
  5898  005576  5CF3               	subwf	prodl,w,c
  5899  005578  0E00               	movlw	0
  5900  00557A  B4D8               	btfsc	status,2,c
  5901  00557C  5DA4               	subwf	___awdiv@dividend& (0+255),w,b
  5902  00557E  B0D8               	btfsc	status,0,c
  5903  005580  D00B               	goto	l6627
  5904                           
  5905                           ; BSR set to: 0
  5906  005582  0100               	movlb	0	; () banked
  5907  005584  0100               	movlb	0	; () banked
  5908  005586  6DA4               	negf	___awdiv@dividend& (0+255),b
  5909  005588  0100               	movlb	0	; () banked
  5910  00558A  1FA5               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5911  00558C  B0D8               	btfsc	status,0,c
  5912  00558E  2BA5               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5913                           
  5914                           ; BSR set to: 0
  5915  005590  0E01               	movlw	1
  5916  005592  0100               	movlb	0	; () banked
  5917  005594  0100               	movlb	0	; () banked
  5918  005596  1BAA               	xorwf	___awdiv@sign& (0+255),f,b
  5919  005598                     l6627:
  5920                           
  5921                           ; BSR set to: 0
  5922  005598  0E00               	movlw	0
  5923  00559A  0100               	movlb	0	; () banked
  5924  00559C  0100               	movlb	0	; () banked
  5925  00559E  6FAC               	movwf	(___awdiv@quotient+1)& (0+255),b
  5926  0055A0  0E00               	movlw	0
  5927  0055A2  0100               	movlb	0	; () banked
  5928  0055A4  6FAB               	movwf	___awdiv@quotient& (0+255),b
  5929                           
  5930                           ; BSR set to: 0
  5931  0055A6  0100               	movlb	0	; () banked
  5932  0055A8  0100               	movlb	0	; () banked
  5933  0055AA  51A7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5934  0055AC  11A6               	iorwf	___awdiv@divisor& (0+255),w,b
  5935  0055AE  B4D8               	btfsc	status,2,c
  5936  0055B0  D043               	goto	l6649
  5937                           
  5938                           ; BSR set to: 0
  5939  0055B2  0100               	movlb	0	; () banked
  5940  0055B4  6FA8               	movwf	??___awdiv& (0+255),b
  5941  0055B6  0E01               	movlw	1
  5942  0055B8  0100               	movlb	0	; () banked
  5943  0055BA  0100               	movlb	0	; () banked
  5944  0055BC  6FA9               	movwf	___awdiv@counter& (0+255),b
  5945  0055BE  0100               	movlb	0	; () banked
  5946  0055C0  51A8               	movf	??___awdiv& (0+255),w,b
  5947  0055C2  D009               	goto	l6635
  5948  0055C4                     l6633:
  5949                           
  5950                           ; BSR set to: 0
  5951  0055C4  0100               	movlb	0	; () banked
  5952  0055C6  0100               	movlb	0	; () banked
  5953  0055C8  0100               	movlb	0	; () banked
  5954  0055CA  90D8               	bcf	status,0,c
  5955  0055CC  37A6               	rlcf	___awdiv@divisor& (0+255),f,b
  5956  0055CE  37A7               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5957  0055D0  0100               	movlb	0	; () banked
  5958  0055D2  0100               	movlb	0	; () banked
  5959  0055D4  2BA9               	incf	___awdiv@counter& (0+255),f,b
  5960  0055D6                     l6635:
  5961                           
  5962                           ; BSR set to: 0
  5963  0055D6  0100               	movlb	0	; () banked
  5964  0055D8  0100               	movlb	0	; () banked
  5965  0055DA  AFA7               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5966  0055DC  D7F3               	goto	l6633
  5967  0055DE                     l6637:
  5968                           
  5969                           ; BSR set to: 0
  5970  0055DE  0100               	movlb	0	; () banked
  5971  0055E0  0100               	movlb	0	; () banked
  5972  0055E2  0100               	movlb	0	; () banked
  5973  0055E4  90D8               	bcf	status,0,c
  5974  0055E6  37AB               	rlcf	___awdiv@quotient& (0+255),f,b
  5975  0055E8  37AC               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5976                           
  5977                           ; BSR set to: 0
  5978  0055EA  0100               	movlb	0	; () banked
  5979  0055EC  0100               	movlb	0	; () banked
  5980  0055EE  51A6               	movf	___awdiv@divisor& (0+255),w,b
  5981  0055F0  0100               	movlb	0	; () banked
  5982  0055F2  0100               	movlb	0	; () banked
  5983  0055F4  5DA4               	subwf	___awdiv@dividend& (0+255),w,b
  5984  0055F6  0100               	movlb	0	; () banked
  5985  0055F8  0100               	movlb	0	; () banked
  5986  0055FA  51A7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5987  0055FC  0100               	movlb	0	; () banked
  5988  0055FE  0100               	movlb	0	; () banked
  5989  005600  59A5               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5990  005602  A0D8               	btfss	status,0,c
  5991  005604  D00F               	goto	l6645
  5992                           
  5993                           ; BSR set to: 0
  5994  005606  0100               	movlb	0	; () banked
  5995  005608  0100               	movlb	0	; () banked
  5996  00560A  51A6               	movf	___awdiv@divisor& (0+255),w,b
  5997  00560C  0100               	movlb	0	; () banked
  5998  00560E  0100               	movlb	0	; () banked
  5999  005610  5FA4               	subwf	___awdiv@dividend& (0+255),f,b
  6000  005612  0100               	movlb	0	; () banked
  6001  005614  0100               	movlb	0	; () banked
  6002  005616  51A7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6003  005618  0100               	movlb	0	; () banked
  6004  00561A  0100               	movlb	0	; () banked
  6005  00561C  5BA5               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6006                           
  6007                           ; BSR set to: 0
  6008  00561E  0100               	movlb	0	; () banked
  6009  005620  0100               	movlb	0	; () banked
  6010  005622  81AB               	bsf	___awdiv@quotient& (0+255),0,b
  6011  005624                     l6645:
  6012                           
  6013                           ; BSR set to: 0
  6014  005624  0100               	movlb	0	; () banked
  6015  005626  0100               	movlb	0	; () banked
  6016  005628  0100               	movlb	0	; () banked
  6017  00562A  90D8               	bcf	status,0,c
  6018  00562C  33A7               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6019  00562E  33A6               	rrcf	___awdiv@divisor& (0+255),f,b
  6020                           
  6021                           ; BSR set to: 0
  6022  005630  0100               	movlb	0	; () banked
  6023  005632  0100               	movlb	0	; () banked
  6024  005634  2FA9               	decfsz	___awdiv@counter& (0+255),f,b
  6025  005636  D7D3               	goto	l6637
  6026  005638                     l6649:
  6027                           
  6028                           ; BSR set to: 0
  6029  005638  0100               	movlb	0	; () banked
  6030  00563A  0100               	movlb	0	; () banked
  6031  00563C  51AA               	movf	___awdiv@sign& (0+255),w,b
  6032  00563E  B4D8               	btfsc	status,2,c
  6033  005640  D007               	goto	l6653
  6034                           
  6035                           ; BSR set to: 0
  6036  005642  0100               	movlb	0	; () banked
  6037  005644  0100               	movlb	0	; () banked
  6038  005646  6DAB               	negf	___awdiv@quotient& (0+255),b
  6039  005648  0100               	movlb	0	; () banked
  6040  00564A  1FAC               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6041  00564C  B0D8               	btfsc	status,0,c
  6042  00564E  2BAC               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6043  005650                     l6653:
  6044                           
  6045                           ; BSR set to: 0
  6046  005650  C0AB  F0A4         	movff	___awdiv@quotient,?___awdiv
  6047  005654  C0AC  F0A5         	movff	___awdiv@quotient+1,?___awdiv+1
  6048  005658  0012               	return	
  6049  00565A                     __end_of___awdiv:
  6050                           	opt stack 0
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           prodh	equ	0xFF4
  6056                           prodl	equ	0xFF3
  6057                           intcon	equ	0xFF2
  6058                           wreg	equ	0xFE8
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066 ;; *************** function __tdiv_to_l_ *****************
  6067 ;; Defined at:
  6068 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftdivl.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  f1              3   61[BANK0 ] float 
  6071 ;;  f2              3   64[BANK0 ] float 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  quot            4   70[BANK0 ] unsigned long 
  6074 ;;  exp1            1   75[BANK0 ] unsigned char 
  6075 ;;  cntr            1   74[BANK0 ] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  4   61[BANK0 ] unsigned long 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6085 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6089 ;;Total ram usage:       15 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    7
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_sprintf
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text9
  6100  00413A                     __ptext9:
  6101                           	opt stack 0
  6102  00413A                     __tdiv_to_l_:
  6103                           	opt stack 21
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;incstack = 0
  6107  00413A  0100               	movlb	0	; () banked
  6108  00413C  C09F  F0A3         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6109  004140  0100               	movlb	0	; () banked
  6110  004142  6BA4               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6111  004144  6BA5               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6112  004146  0100               	movlb	0	; () banked
  6113  004148  0100               	movlb	0	; () banked
  6114  00414A  359E               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6115  00414C  0100               	movlb	0	; () banked
  6116  00414E  37A3               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6117  004150  E301               	bnc	u4911
  6118  004152  81A4               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6119  004154                     u4911:
  6120  004154  0100               	movlb	0	; () banked
  6121  004156  51A3               	movf	??__tdiv_to_l_& (0+255),w,b
  6122  004158  0100               	movlb	0	; () banked
  6123  00415A  0100               	movlb	0	; () banked
  6124  00415C  6FAB               	movwf	__tdiv_to_l_@exp1& (0+255),b
  6125  00415E  0100               	movlb	0	; () banked
  6126  004160  67AB               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  6127  004162  D00E               	goto	l6999
  6128                           
  6129                           ; BSR set to: 0
  6130  004164  0E00               	movlw	0
  6131  004166  0100               	movlb	0	; () banked
  6132  004168  0100               	movlb	0	; () banked
  6133  00416A  6F9D               	movwf	?__tdiv_to_l_& (0+255),b
  6134  00416C  0E00               	movlw	0
  6135  00416E  0100               	movlb	0	; () banked
  6136  004170  6F9E               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6137  004172  0E00               	movlw	0
  6138  004174  0100               	movlb	0	; () banked
  6139  004176  6F9F               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6140  004178  0E00               	movlw	0
  6141  00417A  0100               	movlb	0	; () banked
  6142  00417C  6FA0               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6143  00417E  0012               	return	
  6144  004180                     l6999:
  6145                           
  6146                           ; BSR set to: 0
  6147  004180  0100               	movlb	0	; () banked
  6148  004182  C0A2  F0A3         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6149  004186  0100               	movlb	0	; () banked
  6150  004188  6BA4               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  6151  00418A  6BA5               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  6152  00418C  0100               	movlb	0	; () banked
  6153  00418E  0100               	movlb	0	; () banked
  6154  004190  35A1               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6155  004192  0100               	movlb	0	; () banked
  6156  004194  37A3               	rlcf	??__tdiv_to_l_& (0+255),f,b
  6157  004196  E301               	bnc	u4931
  6158  004198  81A4               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  6159  00419A                     u4931:
  6160  00419A  0100               	movlb	0	; () banked
  6161  00419C  51A3               	movf	??__tdiv_to_l_& (0+255),w,b
  6162  00419E  0100               	movlb	0	; () banked
  6163  0041A0  0100               	movlb	0	; () banked
  6164  0041A2  6FAA               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6165  0041A4  0100               	movlb	0	; () banked
  6166  0041A6  67AA               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  6167  0041A8  D00E               	goto	l7005
  6168                           
  6169                           ; BSR set to: 0
  6170  0041AA  0E00               	movlw	0
  6171  0041AC  0100               	movlb	0	; () banked
  6172  0041AE  0100               	movlb	0	; () banked
  6173  0041B0  6F9D               	movwf	?__tdiv_to_l_& (0+255),b
  6174  0041B2  0E00               	movlw	0
  6175  0041B4  0100               	movlb	0	; () banked
  6176  0041B6  6F9E               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6177  0041B8  0E00               	movlw	0
  6178  0041BA  0100               	movlb	0	; () banked
  6179  0041BC  6F9F               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6180  0041BE  0E00               	movlw	0
  6181  0041C0  0100               	movlb	0	; () banked
  6182  0041C2  6FA0               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6183  0041C4  0012               	return	
  6184  0041C6                     l7005:
  6185                           
  6186                           ; BSR set to: 0
  6187  0041C6  0100               	movlb	0	; () banked
  6188  0041C8  0100               	movlb	0	; () banked
  6189  0041CA  8F9E               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  6190                           
  6191                           ; BSR set to: 0
  6192  0041CC  0EFF               	movlw	255
  6193  0041CE  0100               	movlb	0	; () banked
  6194  0041D0  0100               	movlb	0	; () banked
  6195  0041D2  179D               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  6196  0041D4  0EFF               	movlw	255
  6197  0041D6  0100               	movlb	0	; () banked
  6198  0041D8  0100               	movlb	0	; () banked
  6199  0041DA  179E               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6200  0041DC  0E00               	movlw	0
  6201  0041DE  0100               	movlb	0	; () banked
  6202  0041E0  0100               	movlb	0	; () banked
  6203  0041E2  179F               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6204  0041E4  0100               	movlb	0	; () banked
  6205  0041E6  0100               	movlb	0	; () banked
  6206  0041E8  8FA1               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  6207                           
  6208                           ; BSR set to: 0
  6209  0041EA  0EFF               	movlw	255
  6210  0041EC  0100               	movlb	0	; () banked
  6211  0041EE  0100               	movlb	0	; () banked
  6212  0041F0  17A0               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  6213  0041F2  0EFF               	movlw	255
  6214  0041F4  0100               	movlb	0	; () banked
  6215  0041F6  0100               	movlb	0	; () banked
  6216  0041F8  17A1               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  6217  0041FA  0E00               	movlw	0
  6218  0041FC  0100               	movlb	0	; () banked
  6219  0041FE  0100               	movlb	0	; () banked
  6220  004200  17A2               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  6221                           
  6222                           ; BSR set to: 0
  6223  004202  0E00               	movlw	0
  6224  004204  0100               	movlb	0	; () banked
  6225  004206  0100               	movlb	0	; () banked
  6226  004208  6FA6               	movwf	__tdiv_to_l_@quot& (0+255),b
  6227  00420A  0E00               	movlw	0
  6228  00420C  0100               	movlb	0	; () banked
  6229  00420E  6FA7               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  6230  004210  0E00               	movlw	0
  6231  004212  0100               	movlb	0	; () banked
  6232  004214  6FA8               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  6233  004216  0E00               	movlw	0
  6234  004218  0100               	movlb	0	; () banked
  6235  00421A  6FA9               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  6236                           
  6237                           ; BSR set to: 0
  6238  00421C  0E7F               	movlw	127
  6239  00421E  0100               	movlb	0	; () banked
  6240  004220  0100               	movlb	0	; () banked
  6241  004222  5FAB               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6242                           
  6243                           ; BSR set to: 0
  6244  004224  0100               	movlb	0	; () banked
  6245  004226  0100               	movlb	0	; () banked
  6246  004228  51AA               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  6247  00422A  0F98               	addlw	152
  6248  00422C  0100               	movlb	0	; () banked
  6249  00422E  0100               	movlb	0	; () banked
  6250  004230  5FAB               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  6251                           
  6252                           ; BSR set to: 0
  6253  004232  0100               	movlb	0	; () banked
  6254  004234  6FA3               	movwf	??__tdiv_to_l_& (0+255),b
  6255  004236  0E18               	movlw	24
  6256  004238  0100               	movlb	0	; () banked
  6257  00423A  0100               	movlb	0	; () banked
  6258  00423C  6FAA               	movwf	__tdiv_to_l_@cntr& (0+255),b
  6259  00423E  0100               	movlb	0	; () banked
  6260  004240  51A3               	movf	??__tdiv_to_l_& (0+255),w,b
  6261  004242                     l7019:
  6262                           
  6263                           ; BSR set to: 0
  6264  004242  0100               	movlb	0	; () banked
  6265  004244  90D8               	bcf	status,0,c
  6266  004246  0100               	movlb	0	; () banked
  6267  004248  37A6               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6268  00424A  0100               	movlb	0	; () banked
  6269  00424C  37A7               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6270  00424E  0100               	movlb	0	; () banked
  6271  004250  37A8               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6272  004252  0100               	movlb	0	; () banked
  6273  004254  37A9               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6274                           
  6275                           ; BSR set to: 0
  6276  004256  0100               	movlb	0	; () banked
  6277  004258  0100               	movlb	0	; () banked
  6278  00425A  51A0               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6279  00425C  0100               	movlb	0	; () banked
  6280  00425E  0100               	movlb	0	; () banked
  6281  004260  5D9D               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  6282  004262  0100               	movlb	0	; () banked
  6283  004264  0100               	movlb	0	; () banked
  6284  004266  51A1               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6285  004268  0100               	movlb	0	; () banked
  6286  00426A  0100               	movlb	0	; () banked
  6287  00426C  599E               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  6288  00426E  0100               	movlb	0	; () banked
  6289  004270  0100               	movlb	0	; () banked
  6290  004272  51A2               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6291  004274  0100               	movlb	0	; () banked
  6292  004276  0100               	movlb	0	; () banked
  6293  004278  599F               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  6294  00427A  A0D8               	btfss	status,0,c
  6295  00427C  D015               	goto	l759
  6296                           
  6297                           ; BSR set to: 0
  6298  00427E  0100               	movlb	0	; () banked
  6299  004280  0100               	movlb	0	; () banked
  6300  004282  51A0               	movf	__tdiv_to_l_@f2& (0+255),w,b
  6301  004284  0100               	movlb	0	; () banked
  6302  004286  0100               	movlb	0	; () banked
  6303  004288  5F9D               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  6304  00428A  0100               	movlb	0	; () banked
  6305  00428C  0100               	movlb	0	; () banked
  6306  00428E  51A1               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  6307  004290  0100               	movlb	0	; () banked
  6308  004292  0100               	movlb	0	; () banked
  6309  004294  5B9E               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6310  004296  0100               	movlb	0	; () banked
  6311  004298  0100               	movlb	0	; () banked
  6312  00429A  51A2               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  6313  00429C  0100               	movlb	0	; () banked
  6314  00429E  0100               	movlb	0	; () banked
  6315  0042A0  5B9F               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6316                           
  6317                           ; BSR set to: 0
  6318  0042A2  0100               	movlb	0	; () banked
  6319  0042A4  0100               	movlb	0	; () banked
  6320  0042A6  81A6               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  6321  0042A8                     l759:
  6322                           
  6323                           ; BSR set to: 0
  6324  0042A8  0100               	movlb	0	; () banked
  6325  0042AA  90D8               	bcf	status,0,c
  6326  0042AC  0100               	movlb	0	; () banked
  6327  0042AE  379D               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  6328  0042B0  0100               	movlb	0	; () banked
  6329  0042B2  379E               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  6330  0042B4  0100               	movlb	0	; () banked
  6331  0042B6  379F               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  6332                           
  6333                           ; BSR set to: 0
  6334  0042B8  0100               	movlb	0	; () banked
  6335  0042BA  0100               	movlb	0	; () banked
  6336  0042BC  2FAA               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  6337  0042BE  D7C1               	goto	l7019
  6338                           
  6339                           ; BSR set to: 0
  6340  0042C0  0100               	movlb	0	; () banked
  6341  0042C2  0100               	movlb	0	; () banked
  6342  0042C4  AFAB               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  6343  0042C6  D029               	goto	l7039
  6344                           
  6345                           ; BSR set to: 0
  6346  0042C8  0100               	movlb	0	; () banked
  6347  0042CA  0100               	movlb	0	; () banked
  6348  0042CC  51AB               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  6349  0042CE  0A80               	xorlw	128
  6350  0042D0  0100               	movlb	0	; () banked
  6351  0042D2  6FA3               	movwf	??__tdiv_to_l_& (0+255),b
  6352  0042D4  0EE9               	movlw	233
  6353  0042D6  0A80               	xorlw	128
  6354  0042D8  0100               	movlb	0	; () banked
  6355  0042DA  5DA3               	subwf	??__tdiv_to_l_& (0+255),w,b
  6356  0042DC  B0D8               	btfsc	status,0,c
  6357  0042DE  D00E               	goto	l7035
  6358                           
  6359                           ; BSR set to: 0
  6360  0042E0  0E00               	movlw	0
  6361  0042E2  0100               	movlb	0	; () banked
  6362  0042E4  0100               	movlb	0	; () banked
  6363  0042E6  6F9D               	movwf	?__tdiv_to_l_& (0+255),b
  6364  0042E8  0E00               	movlw	0
  6365  0042EA  0100               	movlb	0	; () banked
  6366  0042EC  6F9E               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6367  0042EE  0E00               	movlw	0
  6368  0042F0  0100               	movlb	0	; () banked
  6369  0042F2  6F9F               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6370  0042F4  0E00               	movlw	0
  6371  0042F6  0100               	movlb	0	; () banked
  6372  0042F8  6FA0               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6373  0042FA  0012               	return	
  6374  0042FC                     l7035:
  6375                           
  6376                           ; BSR set to: 0
  6377  0042FC  0100               	movlb	0	; () banked
  6378  0042FE  90D8               	bcf	status,0,c
  6379  004300  0100               	movlb	0	; () banked
  6380  004302  33A9               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6381  004304  0100               	movlb	0	; () banked
  6382  004306  33A8               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6383  004308  0100               	movlb	0	; () banked
  6384  00430A  33A7               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6385  00430C  0100               	movlb	0	; () banked
  6386  00430E  33A6               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  6387                           
  6388                           ; BSR set to: 0
  6389  004310  0100               	movlb	0	; () banked
  6390  004312  0100               	movlb	0	; () banked
  6391  004314  3FAB               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  6392  004316  D7F2               	goto	l7035
  6393  004318  D024               	goto	l765
  6394  00431A                     l7039:
  6395                           
  6396                           ; BSR set to: 0
  6397  00431A  0E17               	movlw	23
  6398  00431C  0100               	movlb	0	; () banked
  6399  00431E  0100               	movlb	0	; () banked
  6400  004320  65AB               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  6401  004322  D01B               	goto	l7047
  6402                           
  6403                           ; BSR set to: 0
  6404  004324  0E00               	movlw	0
  6405  004326  0100               	movlb	0	; () banked
  6406  004328  0100               	movlb	0	; () banked
  6407  00432A  6F9D               	movwf	?__tdiv_to_l_& (0+255),b
  6408  00432C  0E00               	movlw	0
  6409  00432E  0100               	movlb	0	; () banked
  6410  004330  6F9E               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  6411  004332  0E00               	movlw	0
  6412  004334  0100               	movlb	0	; () banked
  6413  004336  6F9F               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  6414  004338  0E00               	movlw	0
  6415  00433A  0100               	movlb	0	; () banked
  6416  00433C  6FA0               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  6417  00433E  0012               	return	
  6418  004340                     l7045:
  6419                           
  6420                           ; BSR set to: 0
  6421  004340  0100               	movlb	0	; () banked
  6422  004342  90D8               	bcf	status,0,c
  6423  004344  0100               	movlb	0	; () banked
  6424  004346  37A6               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  6425  004348  0100               	movlb	0	; () banked
  6426  00434A  37A7               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  6427  00434C  0100               	movlb	0	; () banked
  6428  00434E  37A8               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  6429  004350  0100               	movlb	0	; () banked
  6430  004352  37A9               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  6431  004354  0100               	movlb	0	; () banked
  6432  004356  0100               	movlb	0	; () banked
  6433  004358  07AB               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  6434  00435A                     l7047:
  6435                           
  6436                           ; BSR set to: 0
  6437  00435A  0100               	movlb	0	; () banked
  6438  00435C  0100               	movlb	0	; () banked
  6439  00435E  67AB               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  6440  004360  D7EF               	goto	l7045
  6441  004362                     l765:
  6442                           
  6443                           ; BSR set to: 0
  6444  004362  C0A6  F09D         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6445  004366  C0A7  F09E         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6446  00436A  C0A8  F09F         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6447  00436E  C0A9  F0A0         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6448                           
  6449                           ; BSR set to: 0
  6450  004372  0012               	return	
  6451  004374                     __end_of__tdiv_to_l_:
  6452                           	opt stack 0
  6453                           tblptru	equ	0xFF8
  6454                           tblptrh	equ	0xFF7
  6455                           tblptrl	equ	0xFF6
  6456                           tablat	equ	0xFF5
  6457                           prodh	equ	0xFF4
  6458                           prodl	equ	0xFF3
  6459                           intcon	equ	0xFF2
  6460                           wreg	equ	0xFE8
  6461                           indf2	equ	0xFDF
  6462                           postinc2	equ	0xFDE
  6463                           postdec2	equ	0xFDD
  6464                           fsr2h	equ	0xFDA
  6465                           fsr2l	equ	0xFD9
  6466                           status	equ	0xFD8
  6467                           
  6468 ;; *************** function __div_to_l_ *****************
  6469 ;; Defined at:
  6470 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\fldivl.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;  f1              3   61[BANK0 ] unsigned long 
  6473 ;;  f2              3   64[BANK0 ] unsigned long 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  quot            4   71[BANK0 ] unsigned long 
  6476 ;;  exp1            1   76[BANK0 ] unsigned char 
  6477 ;;  cntr            1   75[BANK0 ] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  4   61[BANK0 ] unsigned long 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6487 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6488 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6491 ;;Total ram usage:       16 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    7
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_sprintf
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text10
  6502  003C44                     __ptext10:
  6503                           	opt stack 0
  6504  003C44                     __div_to_l_:
  6505                           	opt stack 21
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;incstack = 0
  6509  003C44  0100               	movlb	0	; () banked
  6510  003C46  C09D  F0A3         	movff	__div_to_l_@f1,??__div_to_l_
  6511  003C4A  0100               	movlb	0	; () banked
  6512  003C4C  C09E  F0A4         	movff	__div_to_l_@f1+1,??__div_to_l_+1
  6513  003C50  0100               	movlb	0	; () banked
  6514  003C52  C09F  F0A5         	movff	__div_to_l_@f1+2,??__div_to_l_+2
  6515  003C56  0100               	movlb	0	; () banked
  6516  003C58  C0A0  F0A6         	movff	__div_to_l_@f1+3,??__div_to_l_+3
  6517  003C5C  0E18               	movlw	24
  6518  003C5E  D006               	goto	u5000
  6519  003C60                     u5005:
  6520  003C60  0100               	movlb	0	; () banked
  6521  003C62  90D8               	bcf	status,0,c
  6522  003C64  33A6               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  6523  003C66  33A5               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  6524  003C68  33A4               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  6525  003C6A  33A3               	rrcf	??__div_to_l_& (0+255),f,b
  6526  003C6C                     u5000:
  6527  003C6C  2EE8               	decfsz	wreg,f,c
  6528  003C6E  D7F8               	goto	u5005
  6529  003C70  0100               	movlb	0	; () banked
  6530  003C72  51A3               	movf	??__div_to_l_& (0+255),w,b
  6531  003C74  0100               	movlb	0	; () banked
  6532  003C76  0100               	movlb	0	; () banked
  6533  003C78  6FAC               	movwf	__div_to_l_@exp1& (0+255),b
  6534  003C7A  0100               	movlb	0	; () banked
  6535  003C7C  67AC               	tstfsz	__div_to_l_@exp1& (0+255),b
  6536  003C7E  D00E               	goto	l7055
  6537                           
  6538                           ; BSR set to: 0
  6539  003C80  0E00               	movlw	0
  6540  003C82  0100               	movlb	0	; () banked
  6541  003C84  0100               	movlb	0	; () banked
  6542  003C86  6F9D               	movwf	?__div_to_l_& (0+255),b
  6543  003C88  0E00               	movlw	0
  6544  003C8A  0100               	movlb	0	; () banked
  6545  003C8C  6F9E               	movwf	(?__div_to_l_+1)& (0+255),b
  6546  003C8E  0E00               	movlw	0
  6547  003C90  0100               	movlb	0	; () banked
  6548  003C92  6F9F               	movwf	(?__div_to_l_+2)& (0+255),b
  6549  003C94  0E00               	movlw	0
  6550  003C96  0100               	movlb	0	; () banked
  6551  003C98  6FA0               	movwf	(?__div_to_l_+3)& (0+255),b
  6552  003C9A  0012               	return	
  6553  003C9C                     l7055:
  6554                           
  6555                           ; BSR set to: 0
  6556  003C9C  0100               	movlb	0	; () banked
  6557  003C9E  C0A0  F0A3         	movff	__div_to_l_@f2,??__div_to_l_
  6558  003CA2  0100               	movlb	0	; () banked
  6559  003CA4  C0A1  F0A4         	movff	__div_to_l_@f2+1,??__div_to_l_+1
  6560  003CA8  0100               	movlb	0	; () banked
  6561  003CAA  C0A2  F0A5         	movff	__div_to_l_@f2+2,??__div_to_l_+2
  6562  003CAE  0100               	movlb	0	; () banked
  6563  003CB0  C0A3  F0A6         	movff	__div_to_l_@f2+3,??__div_to_l_+3
  6564  003CB4  0E18               	movlw	24
  6565  003CB6  D006               	goto	u5020
  6566  003CB8                     u5025:
  6567  003CB8  0100               	movlb	0	; () banked
  6568  003CBA  90D8               	bcf	status,0,c
  6569  003CBC  33A6               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  6570  003CBE  33A5               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  6571  003CC0  33A4               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  6572  003CC2  33A3               	rrcf	??__div_to_l_& (0+255),f,b
  6573  003CC4                     u5020:
  6574  003CC4  2EE8               	decfsz	wreg,f,c
  6575  003CC6  D7F8               	goto	u5025
  6576  003CC8  0100               	movlb	0	; () banked
  6577  003CCA  51A3               	movf	??__div_to_l_& (0+255),w,b
  6578  003CCC  0100               	movlb	0	; () banked
  6579  003CCE  0100               	movlb	0	; () banked
  6580  003CD0  6FAB               	movwf	__div_to_l_@cntr& (0+255),b
  6581  003CD2  0100               	movlb	0	; () banked
  6582  003CD4  67AB               	tstfsz	__div_to_l_@cntr& (0+255),b
  6583  003CD6  D00E               	goto	l7061
  6584                           
  6585                           ; BSR set to: 0
  6586  003CD8  0E00               	movlw	0
  6587  003CDA  0100               	movlb	0	; () banked
  6588  003CDC  0100               	movlb	0	; () banked
  6589  003CDE  6F9D               	movwf	?__div_to_l_& (0+255),b
  6590  003CE0  0E00               	movlw	0
  6591  003CE2  0100               	movlb	0	; () banked
  6592  003CE4  6F9E               	movwf	(?__div_to_l_+1)& (0+255),b
  6593  003CE6  0E00               	movlw	0
  6594  003CE8  0100               	movlb	0	; () banked
  6595  003CEA  6F9F               	movwf	(?__div_to_l_+2)& (0+255),b
  6596  003CEC  0E00               	movlw	0
  6597  003CEE  0100               	movlb	0	; () banked
  6598  003CF0  6FA0               	movwf	(?__div_to_l_+3)& (0+255),b
  6599  003CF2  0012               	return	
  6600  003CF4                     l7061:
  6601                           
  6602                           ; BSR set to: 0
  6603  003CF4  0100               	movlb	0	; () banked
  6604  003CF6  0100               	movlb	0	; () banked
  6605  003CF8  8F9F               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  6606                           
  6607                           ; BSR set to: 0
  6608  003CFA  0EFF               	movlw	255
  6609  003CFC  0100               	movlb	0	; () banked
  6610  003CFE  0100               	movlb	0	; () banked
  6611  003D00  179D               	andwf	__div_to_l_@f1& (0+255),f,b
  6612  003D02  0EFF               	movlw	255
  6613  003D04  0100               	movlb	0	; () banked
  6614  003D06  179E               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  6615  003D08  0EFF               	movlw	255
  6616  003D0A  0100               	movlb	0	; () banked
  6617  003D0C  179F               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  6618  003D0E  0E00               	movlw	0
  6619  003D10  0100               	movlb	0	; () banked
  6620  003D12  17A0               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  6621                           
  6622                           ; BSR set to: 0
  6623  003D14  0100               	movlb	0	; () banked
  6624  003D16  0100               	movlb	0	; () banked
  6625  003D18  8FA2               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  6626  003D1A  0EFF               	movlw	255
  6627  003D1C  0100               	movlb	0	; () banked
  6628  003D1E  0100               	movlb	0	; () banked
  6629  003D20  17A0               	andwf	__div_to_l_@f2& (0+255),f,b
  6630  003D22  0EFF               	movlw	255
  6631  003D24  0100               	movlb	0	; () banked
  6632  003D26  17A1               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  6633  003D28  0EFF               	movlw	255
  6634  003D2A  0100               	movlb	0	; () banked
  6635  003D2C  17A2               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  6636  003D2E  0E00               	movlw	0
  6637  003D30  0100               	movlb	0	; () banked
  6638  003D32  17A3               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  6639                           
  6640                           ; BSR set to: 0
  6641  003D34  0E00               	movlw	0
  6642  003D36  0100               	movlb	0	; () banked
  6643  003D38  0100               	movlb	0	; () banked
  6644  003D3A  6FA7               	movwf	__div_to_l_@quot& (0+255),b
  6645  003D3C  0E00               	movlw	0
  6646  003D3E  0100               	movlb	0	; () banked
  6647  003D40  6FA8               	movwf	(__div_to_l_@quot+1)& (0+255),b
  6648  003D42  0E00               	movlw	0
  6649  003D44  0100               	movlb	0	; () banked
  6650  003D46  6FA9               	movwf	(__div_to_l_@quot+2)& (0+255),b
  6651  003D48  0E00               	movlw	0
  6652  003D4A  0100               	movlb	0	; () banked
  6653  003D4C  6FAA               	movwf	(__div_to_l_@quot+3)& (0+255),b
  6654                           
  6655                           ; BSR set to: 0
  6656  003D4E  0E7F               	movlw	127
  6657  003D50  0100               	movlb	0	; () banked
  6658  003D52  0100               	movlb	0	; () banked
  6659  003D54  5FAC               	subwf	__div_to_l_@exp1& (0+255),f,b
  6660                           
  6661                           ; BSR set to: 0
  6662  003D56  0100               	movlb	0	; () banked
  6663  003D58  0100               	movlb	0	; () banked
  6664  003D5A  51AB               	movf	__div_to_l_@cntr& (0+255),w,b
  6665  003D5C  0FA0               	addlw	160
  6666  003D5E  0100               	movlb	0	; () banked
  6667  003D60  0100               	movlb	0	; () banked
  6668  003D62  5FAC               	subwf	__div_to_l_@exp1& (0+255),f,b
  6669                           
  6670                           ; BSR set to: 0
  6671  003D64  0100               	movlb	0	; () banked
  6672  003D66  6FA3               	movwf	??__div_to_l_& (0+255),b
  6673  003D68  0E20               	movlw	32
  6674  003D6A  0100               	movlb	0	; () banked
  6675  003D6C  0100               	movlb	0	; () banked
  6676  003D6E  6FAB               	movwf	__div_to_l_@cntr& (0+255),b
  6677  003D70  0100               	movlb	0	; () banked
  6678  003D72  51A3               	movf	??__div_to_l_& (0+255),w,b
  6679  003D74                     l640:
  6680                           
  6681                           ; BSR set to: 0
  6682  003D74  0100               	movlb	0	; () banked
  6683  003D76  90D8               	bcf	status,0,c
  6684  003D78  0100               	movlb	0	; () banked
  6685  003D7A  37A7               	rlcf	__div_to_l_@quot& (0+255),f,b
  6686  003D7C  0100               	movlb	0	; () banked
  6687  003D7E  37A8               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6688  003D80  0100               	movlb	0	; () banked
  6689  003D82  37A9               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6690  003D84  0100               	movlb	0	; () banked
  6691  003D86  37AA               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6692                           
  6693                           ; BSR set to: 0
  6694  003D88  0100               	movlb	0	; () banked
  6695  003D8A  0100               	movlb	0	; () banked
  6696  003D8C  51A0               	movf	__div_to_l_@f2& (0+255),w,b
  6697  003D8E  0100               	movlb	0	; () banked
  6698  003D90  0100               	movlb	0	; () banked
  6699  003D92  5D9D               	subwf	__div_to_l_@f1& (0+255),w,b
  6700  003D94  0100               	movlb	0	; () banked
  6701  003D96  0100               	movlb	0	; () banked
  6702  003D98  51A1               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6703  003D9A  0100               	movlb	0	; () banked
  6704  003D9C  0100               	movlb	0	; () banked
  6705  003D9E  599E               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  6706  003DA0  0100               	movlb	0	; () banked
  6707  003DA2  0100               	movlb	0	; () banked
  6708  003DA4  51A2               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6709  003DA6  0100               	movlb	0	; () banked
  6710  003DA8  0100               	movlb	0	; () banked
  6711  003DAA  599F               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  6712  003DAC  0100               	movlb	0	; () banked
  6713  003DAE  0100               	movlb	0	; () banked
  6714  003DB0  51A3               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6715  003DB2  0100               	movlb	0	; () banked
  6716  003DB4  0100               	movlb	0	; () banked
  6717  003DB6  59A0               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  6718  003DB8  A0D8               	btfss	status,0,c
  6719  003DBA  D01B               	goto	l7081
  6720                           
  6721                           ; BSR set to: 0
  6722  003DBC  0100               	movlb	0	; () banked
  6723  003DBE  0100               	movlb	0	; () banked
  6724  003DC0  51A0               	movf	__div_to_l_@f2& (0+255),w,b
  6725  003DC2  0100               	movlb	0	; () banked
  6726  003DC4  0100               	movlb	0	; () banked
  6727  003DC6  5F9D               	subwf	__div_to_l_@f1& (0+255),f,b
  6728  003DC8  0100               	movlb	0	; () banked
  6729  003DCA  0100               	movlb	0	; () banked
  6730  003DCC  51A1               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  6731  003DCE  0100               	movlb	0	; () banked
  6732  003DD0  0100               	movlb	0	; () banked
  6733  003DD2  5B9E               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  6734  003DD4  0100               	movlb	0	; () banked
  6735  003DD6  0100               	movlb	0	; () banked
  6736  003DD8  51A2               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  6737  003DDA  0100               	movlb	0	; () banked
  6738  003DDC  0100               	movlb	0	; () banked
  6739  003DDE  5B9F               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  6740  003DE0  0100               	movlb	0	; () banked
  6741  003DE2  0100               	movlb	0	; () banked
  6742  003DE4  51A3               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  6743  003DE6  0100               	movlb	0	; () banked
  6744  003DE8  0100               	movlb	0	; () banked
  6745  003DEA  5BA0               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  6746                           
  6747                           ; BSR set to: 0
  6748  003DEC  0100               	movlb	0	; () banked
  6749  003DEE  0100               	movlb	0	; () banked
  6750  003DF0  81A7               	bsf	__div_to_l_@quot& (0+255),0,b
  6751  003DF2                     l7081:
  6752                           
  6753                           ; BSR set to: 0
  6754  003DF2  0100               	movlb	0	; () banked
  6755  003DF4  90D8               	bcf	status,0,c
  6756  003DF6  0100               	movlb	0	; () banked
  6757  003DF8  379D               	rlcf	__div_to_l_@f1& (0+255),f,b
  6758  003DFA  0100               	movlb	0	; () banked
  6759  003DFC  379E               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  6760  003DFE  0100               	movlb	0	; () banked
  6761  003E00  379F               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  6762  003E02  0100               	movlb	0	; () banked
  6763  003E04  37A0               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  6764                           
  6765                           ; BSR set to: 0
  6766  003E06  0100               	movlb	0	; () banked
  6767  003E08  0100               	movlb	0	; () banked
  6768  003E0A  2FAB               	decfsz	__div_to_l_@cntr& (0+255),f,b
  6769  003E0C  D7B3               	goto	l640
  6770                           
  6771                           ; BSR set to: 0
  6772  003E0E  0100               	movlb	0	; () banked
  6773  003E10  0100               	movlb	0	; () banked
  6774  003E12  AFAC               	btfss	__div_to_l_@exp1& (0+255),7,b
  6775  003E14  D029               	goto	l7095
  6776                           
  6777                           ; BSR set to: 0
  6778  003E16  0100               	movlb	0	; () banked
  6779  003E18  0100               	movlb	0	; () banked
  6780  003E1A  51AC               	movf	__div_to_l_@exp1& (0+255),w,b
  6781  003E1C  0A80               	xorlw	128
  6782  003E1E  0100               	movlb	0	; () banked
  6783  003E20  6FA3               	movwf	??__div_to_l_& (0+255),b
  6784  003E22  0EE1               	movlw	225
  6785  003E24  0A80               	xorlw	128
  6786  003E26  0100               	movlb	0	; () banked
  6787  003E28  5DA3               	subwf	??__div_to_l_& (0+255),w,b
  6788  003E2A  B0D8               	btfsc	status,0,c
  6789  003E2C  D00E               	goto	l7091
  6790                           
  6791                           ; BSR set to: 0
  6792  003E2E  0E00               	movlw	0
  6793  003E30  0100               	movlb	0	; () banked
  6794  003E32  0100               	movlb	0	; () banked
  6795  003E34  6F9D               	movwf	?__div_to_l_& (0+255),b
  6796  003E36  0E00               	movlw	0
  6797  003E38  0100               	movlb	0	; () banked
  6798  003E3A  6F9E               	movwf	(?__div_to_l_+1)& (0+255),b
  6799  003E3C  0E00               	movlw	0
  6800  003E3E  0100               	movlb	0	; () banked
  6801  003E40  6F9F               	movwf	(?__div_to_l_+2)& (0+255),b
  6802  003E42  0E00               	movlw	0
  6803  003E44  0100               	movlb	0	; () banked
  6804  003E46  6FA0               	movwf	(?__div_to_l_+3)& (0+255),b
  6805  003E48  0012               	return	
  6806  003E4A                     l7091:
  6807                           
  6808                           ; BSR set to: 0
  6809  003E4A  0100               	movlb	0	; () banked
  6810  003E4C  90D8               	bcf	status,0,c
  6811  003E4E  0100               	movlb	0	; () banked
  6812  003E50  33AA               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  6813  003E52  0100               	movlb	0	; () banked
  6814  003E54  33A9               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  6815  003E56  0100               	movlb	0	; () banked
  6816  003E58  33A8               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  6817  003E5A  0100               	movlb	0	; () banked
  6818  003E5C  33A7               	rrcf	__div_to_l_@quot& (0+255),f,b
  6819                           
  6820                           ; BSR set to: 0
  6821  003E5E  0100               	movlb	0	; () banked
  6822  003E60  0100               	movlb	0	; () banked
  6823  003E62  3FAC               	incfsz	__div_to_l_@exp1& (0+255),f,b
  6824  003E64  D7F2               	goto	l7091
  6825  003E66  D024               	goto	l647
  6826  003E68                     l7095:
  6827                           
  6828                           ; BSR set to: 0
  6829  003E68  0E1F               	movlw	31
  6830  003E6A  0100               	movlb	0	; () banked
  6831  003E6C  0100               	movlb	0	; () banked
  6832  003E6E  65AC               	cpfsgt	__div_to_l_@exp1& (0+255),b
  6833  003E70  D01B               	goto	l7103
  6834                           
  6835                           ; BSR set to: 0
  6836  003E72  0E00               	movlw	0
  6837  003E74  0100               	movlb	0	; () banked
  6838  003E76  0100               	movlb	0	; () banked
  6839  003E78  6F9D               	movwf	?__div_to_l_& (0+255),b
  6840  003E7A  0E00               	movlw	0
  6841  003E7C  0100               	movlb	0	; () banked
  6842  003E7E  6F9E               	movwf	(?__div_to_l_+1)& (0+255),b
  6843  003E80  0E00               	movlw	0
  6844  003E82  0100               	movlb	0	; () banked
  6845  003E84  6F9F               	movwf	(?__div_to_l_+2)& (0+255),b
  6846  003E86  0E00               	movlw	0
  6847  003E88  0100               	movlb	0	; () banked
  6848  003E8A  6FA0               	movwf	(?__div_to_l_+3)& (0+255),b
  6849  003E8C  0012               	return	
  6850  003E8E                     l7101:
  6851                           
  6852                           ; BSR set to: 0
  6853  003E8E  0100               	movlb	0	; () banked
  6854  003E90  90D8               	bcf	status,0,c
  6855  003E92  0100               	movlb	0	; () banked
  6856  003E94  37A7               	rlcf	__div_to_l_@quot& (0+255),f,b
  6857  003E96  0100               	movlb	0	; () banked
  6858  003E98  37A8               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  6859  003E9A  0100               	movlb	0	; () banked
  6860  003E9C  37A9               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  6861  003E9E  0100               	movlb	0	; () banked
  6862  003EA0  37AA               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  6863  003EA2  0100               	movlb	0	; () banked
  6864  003EA4  0100               	movlb	0	; () banked
  6865  003EA6  07AC               	decf	__div_to_l_@exp1& (0+255),f,b
  6866  003EA8                     l7103:
  6867                           
  6868                           ; BSR set to: 0
  6869  003EA8  0100               	movlb	0	; () banked
  6870  003EAA  0100               	movlb	0	; () banked
  6871  003EAC  67AC               	tstfsz	__div_to_l_@exp1& (0+255),b
  6872  003EAE  D7EF               	goto	l7101
  6873  003EB0                     l647:
  6874                           
  6875                           ; BSR set to: 0
  6876  003EB0  C0A7  F09D         	movff	__div_to_l_@quot,?__div_to_l_
  6877  003EB4  C0A8  F09E         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6878  003EB8  C0A9  F09F         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6879  003EBC  C0AA  F0A0         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6880                           
  6881                           ; BSR set to: 0
  6882  003EC0  0012               	return	
  6883  003EC2                     __end_of__div_to_l_:
  6884                           	opt stack 0
  6885                           tblptru	equ	0xFF8
  6886                           tblptrh	equ	0xFF7
  6887                           tblptrl	equ	0xFF6
  6888                           tablat	equ	0xFF5
  6889                           prodh	equ	0xFF4
  6890                           prodl	equ	0xFF3
  6891                           intcon	equ	0xFF2
  6892                           wreg	equ	0xFE8
  6893                           indf2	equ	0xFDF
  6894                           postinc2	equ	0xFDE
  6895                           postdec2	equ	0xFDD
  6896                           fsr2h	equ	0xFDA
  6897                           fsr2l	equ	0xFD9
  6898                           status	equ	0xFD8
  6899                           
  6900 ;; *************** function ___lltoft *****************
  6901 ;; Defined at:
  6902 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\lltoft.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  c               4   69[BANK0 ] unsigned long 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  exp             1   77[BANK0 ] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  3   69[BANK0 ] float 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6918 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6919 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6920 ;;Total ram usage:        9 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    8
  6923 ;; This function calls:
  6924 ;;		___ftpack
  6925 ;; This function is called by:
  6926 ;;		_sprintf
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text11
  6931  00647C                     __ptext11:
  6932                           	opt stack 0
  6933  00647C                     ___lltoft:
  6934                           	opt stack 20
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;incstack = 0
  6938  00647C  0100               	movlb	0	; () banked
  6939  00647E  6FA9               	movwf	??___lltoft& (0+255),b
  6940  006480  0E8E               	movlw	142
  6941  006482  0100               	movlb	0	; () banked
  6942  006484  0100               	movlb	0	; () banked
  6943  006486  6FAD               	movwf	___lltoft@exp& (0+255),b
  6944  006488  0100               	movlb	0	; () banked
  6945  00648A  51A9               	movf	??___lltoft& (0+255),w,b
  6946  00648C  D00D               	goto	l7227
  6947  00648E                     l7225:
  6948                           
  6949                           ; BSR set to: 0
  6950  00648E  0100               	movlb	0	; () banked
  6951  006490  90D8               	bcf	status,0,c
  6952  006492  0100               	movlb	0	; () banked
  6953  006494  33A8               	rrcf	(___lltoft@c+3)& (0+255),f,b
  6954  006496  0100               	movlb	0	; () banked
  6955  006498  33A7               	rrcf	(___lltoft@c+2)& (0+255),f,b
  6956  00649A  0100               	movlb	0	; () banked
  6957  00649C  33A6               	rrcf	(___lltoft@c+1)& (0+255),f,b
  6958  00649E  0100               	movlb	0	; () banked
  6959  0064A0  33A5               	rrcf	___lltoft@c& (0+255),f,b
  6960  0064A2  0100               	movlb	0	; () banked
  6961  0064A4  0100               	movlb	0	; () banked
  6962  0064A6  2BAD               	incf	___lltoft@exp& (0+255),f,b
  6963  0064A8                     l7227:
  6964                           
  6965                           ; BSR set to: 0
  6966  0064A8  0E00               	movlw	0
  6967  0064AA  0100               	movlb	0	; () banked
  6968  0064AC  0100               	movlb	0	; () banked
  6969  0064AE  15A5               	andwf	___lltoft@c& (0+255),w,b
  6970  0064B0  0100               	movlb	0	; () banked
  6971  0064B2  6FA9               	movwf	??___lltoft& (0+255),b
  6972  0064B4  0E00               	movlw	0
  6973  0064B6  0100               	movlb	0	; () banked
  6974  0064B8  0100               	movlb	0	; () banked
  6975  0064BA  15A6               	andwf	(___lltoft@c+1)& (0+255),w,b
  6976  0064BC  0100               	movlb	0	; () banked
  6977  0064BE  6FAA               	movwf	(??___lltoft+1)& (0+255),b
  6978  0064C0  0E00               	movlw	0
  6979  0064C2  0100               	movlb	0	; () banked
  6980  0064C4  0100               	movlb	0	; () banked
  6981  0064C6  15A7               	andwf	(___lltoft@c+2)& (0+255),w,b
  6982  0064C8  0100               	movlb	0	; () banked
  6983  0064CA  6FAB               	movwf	(??___lltoft+2)& (0+255),b
  6984  0064CC  0EFF               	movlw	255
  6985  0064CE  0100               	movlb	0	; () banked
  6986  0064D0  0100               	movlb	0	; () banked
  6987  0064D2  15A8               	andwf	(___lltoft@c+3)& (0+255),w,b
  6988  0064D4  0100               	movlb	0	; () banked
  6989  0064D6  6FAC               	movwf	(??___lltoft+3)& (0+255),b
  6990  0064D8  0100               	movlb	0	; () banked
  6991  0064DA  51AC               	movf	(??___lltoft+3)& (0+255),w,b
  6992  0064DC  11A9               	iorwf	??___lltoft& (0+255),w,b
  6993  0064DE  11AA               	iorwf	(??___lltoft+1)& (0+255),w,b
  6994  0064E0  11AB               	iorwf	(??___lltoft+2)& (0+255),w,b
  6995  0064E2  A4D8               	btfss	status,2,c
  6996  0064E4  D7D4               	goto	l7225
  6997                           
  6998                           ; BSR set to: 0
  6999                           
  7000                           ; BSR set to: 0
  7001  0064E6  C0A5  F09D         	movff	___lltoft@c,___ftpack@arg
  7002  0064EA  C0A6  F09E         	movff	___lltoft@c+1,___ftpack@arg+1
  7003  0064EE  C0A7  F09F         	movff	___lltoft@c+2,___ftpack@arg+2
  7004  0064F2  C0AD  F0A0         	movff	___lltoft@exp,___ftpack@exp
  7005  0064F6  0100               	movlb	0	; () banked
  7006  0064F8  6FA9               	movwf	??___lltoft& (0+255),b
  7007  0064FA  0E00               	movlw	0
  7008  0064FC  0100               	movlb	0	; () banked
  7009  0064FE  0100               	movlb	0	; () banked
  7010  006500  6FA1               	movwf	___ftpack@sign& (0+255),b
  7011  006502  0100               	movlb	0	; () banked
  7012  006504  51A9               	movf	??___lltoft& (0+255),w,b
  7013  006506  EC59  F029         	call	___ftpack	;wreg free
  7014  00650A  C09D  F0A5         	movff	?___ftpack,?___lltoft
  7015  00650E  C09E  F0A6         	movff	?___ftpack+1,?___lltoft+1
  7016  006512  C09F  F0A7         	movff	?___ftpack+2,?___lltoft+2
  7017  006516  0012               	return	
  7018  006518                     __end_of___lltoft:
  7019                           	opt stack 0
  7020                           tblptru	equ	0xFF8
  7021                           tblptrh	equ	0xFF7
  7022                           tblptrl	equ	0xFF6
  7023                           tablat	equ	0xFF5
  7024                           prodh	equ	0xFF4
  7025                           prodl	equ	0xFF3
  7026                           intcon	equ	0xFF2
  7027                           wreg	equ	0xFE8
  7028                           indf2	equ	0xFDF
  7029                           postinc2	equ	0xFDE
  7030                           postdec2	equ	0xFDD
  7031                           fsr2h	equ	0xFDA
  7032                           fsr2l	equ	0xFD9
  7033                           status	equ	0xFD8
  7034                           
  7035 ;; *************** function ___llmod *****************
  7036 ;; Defined at:
  7037 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\llmod.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;  dividend        4   75[BANK0 ] unsigned long 
  7040 ;;  divisor         4   79[BANK0 ] unsigned long 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  counter         1   84[BANK0 ] unsigned char 
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  4   75[BANK0 ] unsigned long 
  7045 ;; Registers used:
  7046 ;;		wreg, status,2, status,0
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7052 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7054 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7055 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7056 ;;Total ram usage:       10 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:    7
  7059 ;; This function calls:
  7060 ;;		Nothing
  7061 ;; This function is called by:
  7062 ;;		_sprintf
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text12
  7067  006184                     __ptext12:
  7068                           	opt stack 0
  7069  006184                     ___llmod:
  7070                           	opt stack 21
  7071                           
  7072                           ;incstack = 0
  7073  006184  0100               	movlb	0	; () banked
  7074  006186  0100               	movlb	0	; () banked
  7075  006188  51B2               	movf	(___llmod@divisor+3)& (0+255),w,b
  7076  00618A  11AF               	iorwf	___llmod@divisor& (0+255),w,b
  7077  00618C  11B0               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7078  00618E  11B1               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7079  006190  B4D8               	btfsc	status,2,c
  7080  006192  D05A               	goto	l854
  7081                           
  7082                           ; BSR set to: 0
  7083  006194  0100               	movlb	0	; () banked
  7084  006196  6FB3               	movwf	??___llmod& (0+255),b
  7085  006198  0E01               	movlw	1
  7086  00619A  0100               	movlb	0	; () banked
  7087  00619C  0100               	movlb	0	; () banked
  7088  00619E  6FB4               	movwf	___llmod@counter& (0+255),b
  7089  0061A0  0100               	movlb	0	; () banked
  7090  0061A2  51B3               	movf	??___llmod& (0+255),w,b
  7091  0061A4  D00D               	goto	l7213
  7092  0061A6                     l7211:
  7093                           
  7094                           ; BSR set to: 0
  7095  0061A6  0100               	movlb	0	; () banked
  7096  0061A8  90D8               	bcf	status,0,c
  7097  0061AA  0100               	movlb	0	; () banked
  7098  0061AC  37AF               	rlcf	___llmod@divisor& (0+255),f,b
  7099  0061AE  0100               	movlb	0	; () banked
  7100  0061B0  37B0               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7101  0061B2  0100               	movlb	0	; () banked
  7102  0061B4  37B1               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7103  0061B6  0100               	movlb	0	; () banked
  7104  0061B8  37B2               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7105  0061BA  0100               	movlb	0	; () banked
  7106  0061BC  0100               	movlb	0	; () banked
  7107  0061BE  2BB4               	incf	___llmod@counter& (0+255),f,b
  7108  0061C0                     l7213:
  7109                           
  7110                           ; BSR set to: 0
  7111  0061C0  0100               	movlb	0	; () banked
  7112  0061C2  0100               	movlb	0	; () banked
  7113  0061C4  AFB2               	btfss	(___llmod@divisor+3)& (0+255),7,b
  7114  0061C6  D7EF               	goto	l7211
  7115  0061C8                     l7215:
  7116                           
  7117                           ; BSR set to: 0
  7118  0061C8  0100               	movlb	0	; () banked
  7119  0061CA  0100               	movlb	0	; () banked
  7120  0061CC  51AF               	movf	___llmod@divisor& (0+255),w,b
  7121  0061CE  0100               	movlb	0	; () banked
  7122  0061D0  0100               	movlb	0	; () banked
  7123  0061D2  5DAB               	subwf	___llmod@dividend& (0+255),w,b
  7124  0061D4  0100               	movlb	0	; () banked
  7125  0061D6  0100               	movlb	0	; () banked
  7126  0061D8  51B0               	movf	(___llmod@divisor+1)& (0+255),w,b
  7127  0061DA  0100               	movlb	0	; () banked
  7128  0061DC  0100               	movlb	0	; () banked
  7129  0061DE  59AC               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7130  0061E0  0100               	movlb	0	; () banked
  7131  0061E2  0100               	movlb	0	; () banked
  7132  0061E4  51B1               	movf	(___llmod@divisor+2)& (0+255),w,b
  7133  0061E6  0100               	movlb	0	; () banked
  7134  0061E8  0100               	movlb	0	; () banked
  7135  0061EA  59AD               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7136  0061EC  0100               	movlb	0	; () banked
  7137  0061EE  0100               	movlb	0	; () banked
  7138  0061F0  51B2               	movf	(___llmod@divisor+3)& (0+255),w,b
  7139  0061F2  0100               	movlb	0	; () banked
  7140  0061F4  0100               	movlb	0	; () banked
  7141  0061F6  59AE               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7142  0061F8  A0D8               	btfss	status,0,c
  7143  0061FA  D018               	goto	l7219
  7144                           
  7145                           ; BSR set to: 0
  7146  0061FC  0100               	movlb	0	; () banked
  7147  0061FE  0100               	movlb	0	; () banked
  7148  006200  51AF               	movf	___llmod@divisor& (0+255),w,b
  7149  006202  0100               	movlb	0	; () banked
  7150  006204  0100               	movlb	0	; () banked
  7151  006206  5FAB               	subwf	___llmod@dividend& (0+255),f,b
  7152  006208  0100               	movlb	0	; () banked
  7153  00620A  0100               	movlb	0	; () banked
  7154  00620C  51B0               	movf	(___llmod@divisor+1)& (0+255),w,b
  7155  00620E  0100               	movlb	0	; () banked
  7156  006210  0100               	movlb	0	; () banked
  7157  006212  5BAC               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7158  006214  0100               	movlb	0	; () banked
  7159  006216  0100               	movlb	0	; () banked
  7160  006218  51B1               	movf	(___llmod@divisor+2)& (0+255),w,b
  7161  00621A  0100               	movlb	0	; () banked
  7162  00621C  0100               	movlb	0	; () banked
  7163  00621E  5BAD               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7164  006220  0100               	movlb	0	; () banked
  7165  006222  0100               	movlb	0	; () banked
  7166  006224  51B2               	movf	(___llmod@divisor+3)& (0+255),w,b
  7167  006226  0100               	movlb	0	; () banked
  7168  006228  0100               	movlb	0	; () banked
  7169  00622A  5BAE               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7170  00622C                     l7219:
  7171                           
  7172                           ; BSR set to: 0
  7173  00622C  0100               	movlb	0	; () banked
  7174  00622E  90D8               	bcf	status,0,c
  7175  006230  0100               	movlb	0	; () banked
  7176  006232  33B2               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7177  006234  0100               	movlb	0	; () banked
  7178  006236  33B1               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7179  006238  0100               	movlb	0	; () banked
  7180  00623A  33B0               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7181  00623C  0100               	movlb	0	; () banked
  7182  00623E  33AF               	rrcf	___llmod@divisor& (0+255),f,b
  7183                           
  7184                           ; BSR set to: 0
  7185  006240  0100               	movlb	0	; () banked
  7186  006242  0100               	movlb	0	; () banked
  7187  006244  2FB4               	decfsz	___llmod@counter& (0+255),f,b
  7188  006246  D7C0               	goto	l7215
  7189  006248                     l854:
  7190                           
  7191                           ; BSR set to: 0
  7192  006248  C0AB  F0AB         	movff	___llmod@dividend,?___llmod
  7193  00624C  C0AC  F0AC         	movff	___llmod@dividend+1,?___llmod+1
  7194  006250  C0AD  F0AD         	movff	___llmod@dividend+2,?___llmod+2
  7195  006254  C0AE  F0AE         	movff	___llmod@dividend+3,?___llmod+3
  7196                           
  7197                           ; BSR set to: 0
  7198  006258  0012               	return	
  7199  00625A                     __end_of___llmod:
  7200                           	opt stack 0
  7201                           tblptru	equ	0xFF8
  7202                           tblptrh	equ	0xFF7
  7203                           tblptrl	equ	0xFF6
  7204                           tablat	equ	0xFF5
  7205                           prodh	equ	0xFF4
  7206                           prodl	equ	0xFF3
  7207                           intcon	equ	0xFF2
  7208                           wreg	equ	0xFE8
  7209                           indf2	equ	0xFDF
  7210                           postinc2	equ	0xFDE
  7211                           postdec2	equ	0xFDD
  7212                           fsr2h	equ	0xFDA
  7213                           fsr2l	equ	0xFD9
  7214                           status	equ	0xFD8
  7215                           
  7216 ;; *************** function ___lldiv *****************
  7217 ;; Defined at:
  7218 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\lldiv.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  dividend        4   61[BANK0 ] unsigned long 
  7221 ;;  divisor         4   65[BANK0 ] unsigned long 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  quotient        4   70[BANK0 ] unsigned long 
  7224 ;;  counter         1   74[BANK0 ] unsigned char 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  4   61[BANK0 ] unsigned long 
  7227 ;; Registers used:
  7228 ;;		wreg, status,2, status,0
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7234 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7236 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7237 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7238 ;;Total ram usage:       14 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:    7
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_sprintf
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text13
  7249  005ACE                     __ptext13:
  7250                           	opt stack 0
  7251  005ACE                     ___lldiv:
  7252                           	opt stack 21
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;incstack = 0
  7256  005ACE  0E00               	movlw	0
  7257  005AD0  0100               	movlb	0	; () banked
  7258  005AD2  0100               	movlb	0	; () banked
  7259  005AD4  6FA6               	movwf	___lldiv@quotient& (0+255),b
  7260  005AD6  0E00               	movlw	0
  7261  005AD8  0100               	movlb	0	; () banked
  7262  005ADA  6FA7               	movwf	(___lldiv@quotient+1)& (0+255),b
  7263  005ADC  0E00               	movlw	0
  7264  005ADE  0100               	movlb	0	; () banked
  7265  005AE0  6FA8               	movwf	(___lldiv@quotient+2)& (0+255),b
  7266  005AE2  0E00               	movlw	0
  7267  005AE4  0100               	movlb	0	; () banked
  7268  005AE6  6FA9               	movwf	(___lldiv@quotient+3)& (0+255),b
  7269                           
  7270                           ; BSR set to: 0
  7271  005AE8  0100               	movlb	0	; () banked
  7272  005AEA  0100               	movlb	0	; () banked
  7273  005AEC  51A4               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7274  005AEE  11A1               	iorwf	___lldiv@divisor& (0+255),w,b
  7275  005AF0  11A2               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7276  005AF2  11A3               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7277  005AF4  B4D8               	btfsc	status,2,c
  7278  005AF6  D067               	goto	l844
  7279                           
  7280                           ; BSR set to: 0
  7281  005AF8  0100               	movlb	0	; () banked
  7282  005AFA  6FA5               	movwf	??___lldiv& (0+255),b
  7283  005AFC  0E01               	movlw	1
  7284  005AFE  0100               	movlb	0	; () banked
  7285  005B00  0100               	movlb	0	; () banked
  7286  005B02  6FAA               	movwf	___lldiv@counter& (0+255),b
  7287  005B04  0100               	movlb	0	; () banked
  7288  005B06  51A5               	movf	??___lldiv& (0+255),w,b
  7289  005B08  D00D               	goto	l7193
  7290  005B0A                     l7191:
  7291                           
  7292                           ; BSR set to: 0
  7293  005B0A  0100               	movlb	0	; () banked
  7294  005B0C  90D8               	bcf	status,0,c
  7295  005B0E  0100               	movlb	0	; () banked
  7296  005B10  37A1               	rlcf	___lldiv@divisor& (0+255),f,b
  7297  005B12  0100               	movlb	0	; () banked
  7298  005B14  37A2               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7299  005B16  0100               	movlb	0	; () banked
  7300  005B18  37A3               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7301  005B1A  0100               	movlb	0	; () banked
  7302  005B1C  37A4               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7303  005B1E  0100               	movlb	0	; () banked
  7304  005B20  0100               	movlb	0	; () banked
  7305  005B22  2BAA               	incf	___lldiv@counter& (0+255),f,b
  7306  005B24                     l7193:
  7307                           
  7308                           ; BSR set to: 0
  7309  005B24  0100               	movlb	0	; () banked
  7310  005B26  0100               	movlb	0	; () banked
  7311  005B28  AFA4               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7312  005B2A  D7EF               	goto	l7191
  7313  005B2C                     l7195:
  7314                           
  7315                           ; BSR set to: 0
  7316  005B2C  0100               	movlb	0	; () banked
  7317  005B2E  90D8               	bcf	status,0,c
  7318  005B30  0100               	movlb	0	; () banked
  7319  005B32  37A6               	rlcf	___lldiv@quotient& (0+255),f,b
  7320  005B34  0100               	movlb	0	; () banked
  7321  005B36  37A7               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7322  005B38  0100               	movlb	0	; () banked
  7323  005B3A  37A8               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7324  005B3C  0100               	movlb	0	; () banked
  7325  005B3E  37A9               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7326                           
  7327                           ; BSR set to: 0
  7328  005B40  0100               	movlb	0	; () banked
  7329  005B42  0100               	movlb	0	; () banked
  7330  005B44  51A1               	movf	___lldiv@divisor& (0+255),w,b
  7331  005B46  0100               	movlb	0	; () banked
  7332  005B48  0100               	movlb	0	; () banked
  7333  005B4A  5D9D               	subwf	___lldiv@dividend& (0+255),w,b
  7334  005B4C  0100               	movlb	0	; () banked
  7335  005B4E  0100               	movlb	0	; () banked
  7336  005B50  51A2               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7337  005B52  0100               	movlb	0	; () banked
  7338  005B54  0100               	movlb	0	; () banked
  7339  005B56  599E               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7340  005B58  0100               	movlb	0	; () banked
  7341  005B5A  0100               	movlb	0	; () banked
  7342  005B5C  51A3               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7343  005B5E  0100               	movlb	0	; () banked
  7344  005B60  0100               	movlb	0	; () banked
  7345  005B62  599F               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7346  005B64  0100               	movlb	0	; () banked
  7347  005B66  0100               	movlb	0	; () banked
  7348  005B68  51A4               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7349  005B6A  0100               	movlb	0	; () banked
  7350  005B6C  0100               	movlb	0	; () banked
  7351  005B6E  59A0               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7352  005B70  A0D8               	btfss	status,0,c
  7353  005B72  D01B               	goto	l7203
  7354                           
  7355                           ; BSR set to: 0
  7356  005B74  0100               	movlb	0	; () banked
  7357  005B76  0100               	movlb	0	; () banked
  7358  005B78  51A1               	movf	___lldiv@divisor& (0+255),w,b
  7359  005B7A  0100               	movlb	0	; () banked
  7360  005B7C  0100               	movlb	0	; () banked
  7361  005B7E  5F9D               	subwf	___lldiv@dividend& (0+255),f,b
  7362  005B80  0100               	movlb	0	; () banked
  7363  005B82  0100               	movlb	0	; () banked
  7364  005B84  51A2               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7365  005B86  0100               	movlb	0	; () banked
  7366  005B88  0100               	movlb	0	; () banked
  7367  005B8A  5B9E               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7368  005B8C  0100               	movlb	0	; () banked
  7369  005B8E  0100               	movlb	0	; () banked
  7370  005B90  51A3               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7371  005B92  0100               	movlb	0	; () banked
  7372  005B94  0100               	movlb	0	; () banked
  7373  005B96  5B9F               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7374  005B98  0100               	movlb	0	; () banked
  7375  005B9A  0100               	movlb	0	; () banked
  7376  005B9C  51A4               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7377  005B9E  0100               	movlb	0	; () banked
  7378  005BA0  0100               	movlb	0	; () banked
  7379  005BA2  5BA0               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7380                           
  7381                           ; BSR set to: 0
  7382  005BA4  0100               	movlb	0	; () banked
  7383  005BA6  0100               	movlb	0	; () banked
  7384  005BA8  81A6               	bsf	___lldiv@quotient& (0+255),0,b
  7385  005BAA                     l7203:
  7386                           
  7387                           ; BSR set to: 0
  7388  005BAA  0100               	movlb	0	; () banked
  7389  005BAC  90D8               	bcf	status,0,c
  7390  005BAE  0100               	movlb	0	; () banked
  7391  005BB0  33A4               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7392  005BB2  0100               	movlb	0	; () banked
  7393  005BB4  33A3               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7394  005BB6  0100               	movlb	0	; () banked
  7395  005BB8  33A2               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7396  005BBA  0100               	movlb	0	; () banked
  7397  005BBC  33A1               	rrcf	___lldiv@divisor& (0+255),f,b
  7398                           
  7399                           ; BSR set to: 0
  7400  005BBE  0100               	movlb	0	; () banked
  7401  005BC0  0100               	movlb	0	; () banked
  7402  005BC2  2FAA               	decfsz	___lldiv@counter& (0+255),f,b
  7403  005BC4  D7B3               	goto	l7195
  7404  005BC6                     l844:
  7405                           
  7406                           ; BSR set to: 0
  7407  005BC6  C0A6  F09D         	movff	___lldiv@quotient,?___lldiv
  7408  005BCA  C0A7  F09E         	movff	___lldiv@quotient+1,?___lldiv+1
  7409  005BCE  C0A8  F09F         	movff	___lldiv@quotient+2,?___lldiv+2
  7410  005BD2  C0A9  F0A0         	movff	___lldiv@quotient+3,?___lldiv+3
  7411                           
  7412                           ; BSR set to: 0
  7413  005BD6  0012               	return	
  7414  005BD8                     __end_of___lldiv:
  7415                           	opt stack 0
  7416                           tblptru	equ	0xFF8
  7417                           tblptrh	equ	0xFF7
  7418                           tblptrl	equ	0xFF6
  7419                           tablat	equ	0xFF5
  7420                           prodh	equ	0xFF4
  7421                           prodl	equ	0xFF3
  7422                           intcon	equ	0xFF2
  7423                           wreg	equ	0xFE8
  7424                           indf2	equ	0xFDF
  7425                           postinc2	equ	0xFDE
  7426                           postdec2	equ	0xFDD
  7427                           fsr2h	equ	0xFDA
  7428                           fsr2l	equ	0xFD9
  7429                           status	equ	0xFD8
  7430                           
  7431 ;; *************** function ___fttol *****************
  7432 ;; Defined at:
  7433 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\fttol.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  f1              3    7[BANK1 ] float 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  lval            4   17[BANK1 ] unsigned long 
  7438 ;;  exp1            1   21[BANK1 ] unsigned char 
  7439 ;;  sign1           1   16[BANK1 ] unsigned char 
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  4    7[BANK1 ] long 
  7442 ;; Registers used:
  7443 ;;		wreg, status,2, status,0
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7449 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7450 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7451 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7452 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7453 ;;Total ram usage:       15 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:    7
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_sprintf
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text14
  7464  004CD2                     __ptext14:
  7465                           	opt stack 0
  7466  004CD2                     ___fttol:
  7467                           	opt stack 21
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;incstack = 0
  7471  004CD2  0101               	movlb	1	; () banked
  7472  004CD4  C109  F10B         	movff	___fttol@f1+2,??___fttol
  7473  004CD8  0101               	movlb	1	; () banked
  7474  004CDA  6B0C               	clrf	(??___fttol+1)& (0+255),b
  7475  004CDC  6B0D               	clrf	(??___fttol+2)& (0+255),b
  7476  004CDE  0101               	movlb	1	; () banked
  7477  004CE0  0101               	movlb	1	; () banked
  7478  004CE2  3508               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7479  004CE4  0101               	movlb	1	; () banked
  7480  004CE6  370B               	rlcf	??___fttol& (0+255),f,b
  7481  004CE8  E301               	bnc	u5131
  7482  004CEA  810C               	bsf	(??___fttol+1)& (0+255),0,b
  7483  004CEC                     u5131:
  7484  004CEC  0101               	movlb	1	; () banked
  7485  004CEE  510B               	movf	??___fttol& (0+255),w,b
  7486  004CF0  0101               	movlb	1	; () banked
  7487  004CF2  0101               	movlb	1	; () banked
  7488  004CF4  6F15               	movwf	___fttol@exp1& (0+255),b
  7489  004CF6  0101               	movlb	1	; () banked
  7490  004CF8  6715               	tstfsz	___fttol@exp1& (0+255),b
  7491  004CFA  D00E               	goto	l7145
  7492                           
  7493                           ; BSR set to: 1
  7494  004CFC  0E00               	movlw	0
  7495  004CFE  0101               	movlb	1	; () banked
  7496  004D00  0101               	movlb	1	; () banked
  7497  004D02  6F07               	movwf	?___fttol& (0+255),b
  7498  004D04  0E00               	movlw	0
  7499  004D06  0101               	movlb	1	; () banked
  7500  004D08  6F08               	movwf	(?___fttol+1)& (0+255),b
  7501  004D0A  0E00               	movlw	0
  7502  004D0C  0101               	movlb	1	; () banked
  7503  004D0E  6F09               	movwf	(?___fttol+2)& (0+255),b
  7504  004D10  0E00               	movlw	0
  7505  004D12  0101               	movlb	1	; () banked
  7506  004D14  6F0A               	movwf	(?___fttol+3)& (0+255),b
  7507  004D16  0012               	return	
  7508  004D18                     l7145:
  7509                           
  7510                           ; BSR set to: 1
  7511  004D18  0E17               	movlw	23
  7512  004D1A  0101               	movlb	1	; () banked
  7513  004D1C  6F0B               	movwf	??___fttol& (0+255),b
  7514  004D1E  0101               	movlb	1	; () banked
  7515  004D20  C107  F10C         	movff	___fttol@f1,??___fttol+1
  7516  004D24  0101               	movlb	1	; () banked
  7517  004D26  C108  F10D         	movff	___fttol@f1+1,??___fttol+2
  7518  004D2A  0101               	movlb	1	; () banked
  7519  004D2C  C109  F10E         	movff	___fttol@f1+2,??___fttol+3
  7520  004D30  0101               	movlb	1	; () banked
  7521  004D32  290B               	incf	??___fttol& (0+255),w,b
  7522  004D34  0101               	movlb	1	; () banked
  7523  004D36  6F0F               	movwf	(??___fttol+4)& (0+255),b
  7524  004D38  D005               	goto	u5150
  7525  004D3A                     u5155:
  7526  004D3A  0101               	movlb	1	; () banked
  7527  004D3C  90D8               	bcf	status,0,c
  7528  004D3E  330E               	rrcf	(??___fttol+3)& (0+255),f,b
  7529  004D40  330D               	rrcf	(??___fttol+2)& (0+255),f,b
  7530  004D42  330C               	rrcf	(??___fttol+1)& (0+255),f,b
  7531  004D44                     u5150:
  7532  004D44  0101               	movlb	1	; () banked
  7533  004D46  2F0F               	decfsz	(??___fttol+4)& (0+255),f,b
  7534  004D48  D7F8               	goto	u5155
  7535  004D4A  0101               	movlb	1	; () banked
  7536  004D4C  510C               	movf	(??___fttol+1)& (0+255),w,b
  7537  004D4E  0101               	movlb	1	; () banked
  7538  004D50  0101               	movlb	1	; () banked
  7539  004D52  6F10               	movwf	___fttol@sign1& (0+255),b
  7540                           
  7541                           ; BSR set to: 1
  7542  004D54  0101               	movlb	1	; () banked
  7543  004D56  0101               	movlb	1	; () banked
  7544  004D58  8F08               	bsf	(___fttol@f1+1)& (0+255),7,b
  7545                           
  7546                           ; BSR set to: 1
  7547  004D5A  0EFF               	movlw	255
  7548  004D5C  0101               	movlb	1	; () banked
  7549  004D5E  0101               	movlb	1	; () banked
  7550  004D60  1707               	andwf	___fttol@f1& (0+255),f,b
  7551  004D62  0EFF               	movlw	255
  7552  004D64  0101               	movlb	1	; () banked
  7553  004D66  0101               	movlb	1	; () banked
  7554  004D68  1708               	andwf	(___fttol@f1+1)& (0+255),f,b
  7555  004D6A  0E00               	movlw	0
  7556  004D6C  0101               	movlb	1	; () banked
  7557  004D6E  0101               	movlb	1	; () banked
  7558  004D70  1709               	andwf	(___fttol@f1+2)& (0+255),f,b
  7559                           
  7560                           ; BSR set to: 1
  7561  004D72  0101               	movlb	1	; () banked
  7562  004D74  0101               	movlb	1	; () banked
  7563  004D76  5107               	movf	___fttol@f1& (0+255),w,b
  7564  004D78  0101               	movlb	1	; () banked
  7565  004D7A  0101               	movlb	1	; () banked
  7566  004D7C  6F11               	movwf	___fttol@lval& (0+255),b
  7567  004D7E  0101               	movlb	1	; () banked
  7568  004D80  0101               	movlb	1	; () banked
  7569  004D82  5108               	movf	(___fttol@f1+1)& (0+255),w,b
  7570  004D84  0101               	movlb	1	; () banked
  7571  004D86  6F12               	movwf	(___fttol@lval+1)& (0+255),b
  7572  004D88  0101               	movlb	1	; () banked
  7573  004D8A  5109               	movf	(___fttol@f1+2)& (0+255),w,b
  7574  004D8C  0101               	movlb	1	; () banked
  7575  004D8E  6F13               	movwf	(___fttol@lval+2)& (0+255),b
  7576  004D90  0101               	movlb	1	; () banked
  7577  004D92  6B14               	clrf	(___fttol@lval+3)& (0+255),b
  7578                           
  7579                           ; BSR set to: 1
  7580  004D94  0E8E               	movlw	142
  7581  004D96  0101               	movlb	1	; () banked
  7582  004D98  0101               	movlb	1	; () banked
  7583  004D9A  5F15               	subwf	___fttol@exp1& (0+255),f,b
  7584                           
  7585                           ; BSR set to: 1
  7586  004D9C  0101               	movlb	1	; () banked
  7587  004D9E  0101               	movlb	1	; () banked
  7588  004DA0  AF15               	btfss	___fttol@exp1& (0+255),7,b
  7589  004DA2  D029               	goto	l7167
  7590                           
  7591                           ; BSR set to: 1
  7592  004DA4  0101               	movlb	1	; () banked
  7593  004DA6  0101               	movlb	1	; () banked
  7594  004DA8  5115               	movf	___fttol@exp1& (0+255),w,b
  7595  004DAA  0A80               	xorlw	128
  7596  004DAC  0101               	movlb	1	; () banked
  7597  004DAE  6F0B               	movwf	??___fttol& (0+255),b
  7598  004DB0  0EF1               	movlw	241
  7599  004DB2  0A80               	xorlw	128
  7600  004DB4  0101               	movlb	1	; () banked
  7601  004DB6  5D0B               	subwf	??___fttol& (0+255),w,b
  7602  004DB8  B0D8               	btfsc	status,0,c
  7603  004DBA  D00E               	goto	l7163
  7604                           
  7605                           ; BSR set to: 1
  7606  004DBC  0E00               	movlw	0
  7607  004DBE  0101               	movlb	1	; () banked
  7608  004DC0  0101               	movlb	1	; () banked
  7609  004DC2  6F07               	movwf	?___fttol& (0+255),b
  7610  004DC4  0E00               	movlw	0
  7611  004DC6  0101               	movlb	1	; () banked
  7612  004DC8  6F08               	movwf	(?___fttol+1)& (0+255),b
  7613  004DCA  0E00               	movlw	0
  7614  004DCC  0101               	movlb	1	; () banked
  7615  004DCE  6F09               	movwf	(?___fttol+2)& (0+255),b
  7616  004DD0  0E00               	movlw	0
  7617  004DD2  0101               	movlb	1	; () banked
  7618  004DD4  6F0A               	movwf	(?___fttol+3)& (0+255),b
  7619  004DD6  0012               	return	
  7620  004DD8                     l7163:
  7621                           
  7622                           ; BSR set to: 1
  7623  004DD8  0101               	movlb	1	; () banked
  7624  004DDA  90D8               	bcf	status,0,c
  7625  004DDC  0101               	movlb	1	; () banked
  7626  004DDE  3314               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7627  004DE0  0101               	movlb	1	; () banked
  7628  004DE2  3313               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7629  004DE4  0101               	movlb	1	; () banked
  7630  004DE6  3312               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7631  004DE8  0101               	movlb	1	; () banked
  7632  004DEA  3311               	rrcf	___fttol@lval& (0+255),f,b
  7633                           
  7634                           ; BSR set to: 1
  7635  004DEC  0101               	movlb	1	; () banked
  7636  004DEE  0101               	movlb	1	; () banked
  7637  004DF0  3F15               	incfsz	___fttol@exp1& (0+255),f,b
  7638  004DF2  D7F2               	goto	l7163
  7639  004DF4  D024               	goto	l7177
  7640  004DF6                     l7167:
  7641                           
  7642                           ; BSR set to: 1
  7643  004DF6  0E17               	movlw	23
  7644  004DF8  0101               	movlb	1	; () banked
  7645  004DFA  0101               	movlb	1	; () banked
  7646  004DFC  6515               	cpfsgt	___fttol@exp1& (0+255),b
  7647  004DFE  D01B               	goto	l7175
  7648                           
  7649                           ; BSR set to: 1
  7650  004E00  0E00               	movlw	0
  7651  004E02  0101               	movlb	1	; () banked
  7652  004E04  0101               	movlb	1	; () banked
  7653  004E06  6F07               	movwf	?___fttol& (0+255),b
  7654  004E08  0E00               	movlw	0
  7655  004E0A  0101               	movlb	1	; () banked
  7656  004E0C  6F08               	movwf	(?___fttol+1)& (0+255),b
  7657  004E0E  0E00               	movlw	0
  7658  004E10  0101               	movlb	1	; () banked
  7659  004E12  6F09               	movwf	(?___fttol+2)& (0+255),b
  7660  004E14  0E00               	movlw	0
  7661  004E16  0101               	movlb	1	; () banked
  7662  004E18  6F0A               	movwf	(?___fttol+3)& (0+255),b
  7663  004E1A  0012               	return	
  7664  004E1C                     l7173:
  7665                           
  7666                           ; BSR set to: 1
  7667  004E1C  0101               	movlb	1	; () banked
  7668  004E1E  90D8               	bcf	status,0,c
  7669  004E20  0101               	movlb	1	; () banked
  7670  004E22  3711               	rlcf	___fttol@lval& (0+255),f,b
  7671  004E24  0101               	movlb	1	; () banked
  7672  004E26  3712               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7673  004E28  0101               	movlb	1	; () banked
  7674  004E2A  3713               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7675  004E2C  0101               	movlb	1	; () banked
  7676  004E2E  3714               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7677  004E30  0101               	movlb	1	; () banked
  7678  004E32  0101               	movlb	1	; () banked
  7679  004E34  0715               	decf	___fttol@exp1& (0+255),f,b
  7680  004E36                     l7175:
  7681                           
  7682                           ; BSR set to: 1
  7683  004E36  0101               	movlb	1	; () banked
  7684  004E38  0101               	movlb	1	; () banked
  7685  004E3A  6715               	tstfsz	___fttol@exp1& (0+255),b
  7686  004E3C  D7EF               	goto	l7173
  7687  004E3E                     l7177:
  7688                           
  7689                           ; BSR set to: 1
  7690  004E3E  0101               	movlb	1	; () banked
  7691  004E40  0101               	movlb	1	; () banked
  7692  004E42  5110               	movf	___fttol@sign1& (0+255),w,b
  7693  004E44  B4D8               	btfsc	status,2,c
  7694  004E46  D010               	goto	l7181
  7695                           
  7696                           ; BSR set to: 1
  7697  004E48  0101               	movlb	1	; () banked
  7698  004E4A  0101               	movlb	1	; () banked
  7699  004E4C  1F14               	comf	(___fttol@lval+3)& (0+255),f,b
  7700  004E4E  0101               	movlb	1	; () banked
  7701  004E50  1F13               	comf	(___fttol@lval+2)& (0+255),f,b
  7702  004E52  0101               	movlb	1	; () banked
  7703  004E54  1F12               	comf	(___fttol@lval+1)& (0+255),f,b
  7704  004E56  0101               	movlb	1	; () banked
  7705  004E58  6D11               	negf	___fttol@lval& (0+255),b
  7706  004E5A  0E00               	movlw	0
  7707  004E5C  0101               	movlb	1	; () banked
  7708  004E5E  2312               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7709  004E60  0101               	movlb	1	; () banked
  7710  004E62  2313               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7711  004E64  0101               	movlb	1	; () banked
  7712  004E66  2314               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7713  004E68                     l7181:
  7714                           
  7715                           ; BSR set to: 1
  7716  004E68  C111  F107         	movff	___fttol@lval,?___fttol
  7717  004E6C  C112  F108         	movff	___fttol@lval+1,?___fttol+1
  7718  004E70  C113  F109         	movff	___fttol@lval+2,?___fttol+2
  7719  004E74  C114  F10A         	movff	___fttol@lval+3,?___fttol+3
  7720  004E78  0012               	return	
  7721  004E7A                     __end_of___fttol:
  7722                           	opt stack 0
  7723                           tblptru	equ	0xFF8
  7724                           tblptrh	equ	0xFF7
  7725                           tblptrl	equ	0xFF6
  7726                           tablat	equ	0xFF5
  7727                           prodh	equ	0xFF4
  7728                           prodl	equ	0xFF3
  7729                           intcon	equ	0xFF2
  7730                           wreg	equ	0xFE8
  7731                           indf2	equ	0xFDF
  7732                           postinc2	equ	0xFDE
  7733                           postdec2	equ	0xFDD
  7734                           fsr2h	equ	0xFDA
  7735                           fsr2l	equ	0xFD9
  7736                           status	equ	0xFD8
  7737                           
  7738 ;; *************** function ___ftneg *****************
  7739 ;; Defined at:
  7740 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftneg.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  f1              3   61[BANK0 ] float 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;		None
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  3   61[BANK0 ] float 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7754 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7757 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7758 ;;Total ram usage:        3 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    7
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_sprintf
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text15
  7769  006E88                     __ptext15:
  7770                           	opt stack 0
  7771  006E88                     ___ftneg:
  7772                           	opt stack 21
  7773                           
  7774                           ; BSR set to: 1
  7775                           ;incstack = 0
  7776  006E88  0E7F               	movlw	127
  7777  006E8A  0100               	movlb	0	; () banked
  7778  006E8C  0100               	movlb	0	; () banked
  7779  006E8E  159F               	andwf	(___ftneg@f1+2)& (0+255),w,b
  7780  006E90  0100               	movlb	0	; () banked
  7781  006E92  119E               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  7782  006E94  0100               	movlb	0	; () banked
  7783  006E96  119D               	iorwf	___ftneg@f1& (0+255),w,b
  7784  006E98  B4D8               	btfsc	status,2,c
  7785  006E9A  D00C               	goto	l790
  7786                           
  7787                           ; BSR set to: 0
  7788  006E9C  0E00               	movlw	0
  7789  006E9E  0100               	movlb	0	; () banked
  7790  006EA0  0100               	movlb	0	; () banked
  7791  006EA2  1B9D               	xorwf	___ftneg@f1& (0+255),f,b
  7792  006EA4  0E00               	movlw	0
  7793  006EA6  0100               	movlb	0	; () banked
  7794  006EA8  0100               	movlb	0	; () banked
  7795  006EAA  1B9E               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  7796  006EAC  0E80               	movlw	128
  7797  006EAE  0100               	movlb	0	; () banked
  7798  006EB0  0100               	movlb	0	; () banked
  7799  006EB2  1B9F               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  7800  006EB4                     l790:
  7801                           
  7802                           ; BSR set to: 0
  7803  006EB4  C09D  F09D         	movff	___ftneg@f1,?___ftneg
  7804  006EB8  C09E  F09E         	movff	___ftneg@f1+1,?___ftneg+1
  7805  006EBC  C09F  F09F         	movff	___ftneg@f1+2,?___ftneg+2
  7806                           
  7807                           ; BSR set to: 0
  7808  006EC0  0012               	return	
  7809  006EC2                     __end_of___ftneg:
  7810                           	opt stack 0
  7811                           tblptru	equ	0xFF8
  7812                           tblptrh	equ	0xFF7
  7813                           tblptrl	equ	0xFF6
  7814                           tablat	equ	0xFF5
  7815                           prodh	equ	0xFF4
  7816                           prodl	equ	0xFF3
  7817                           intcon	equ	0xFF2
  7818                           wreg	equ	0xFE8
  7819                           indf2	equ	0xFDF
  7820                           postinc2	equ	0xFDE
  7821                           postdec2	equ	0xFDD
  7822                           fsr2h	equ	0xFDA
  7823                           fsr2l	equ	0xFD9
  7824                           status	equ	0xFD8
  7825                           
  7826 ;; *************** function ___ftge *****************
  7827 ;; Defined at:
  7828 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftge.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;  ff1             3   61[BANK0 ] float 
  7831 ;;  ff2             3   64[BANK0 ] float 
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;		None               void
  7836 ;; Registers used:
  7837 ;;		wreg, status,2, status,0
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7843 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7845 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7846 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7847 ;;Total ram usage:        9 bytes
  7848 ;; Hardware stack levels used:    1
  7849 ;; Hardware stack levels required when called:    7
  7850 ;; This function calls:
  7851 ;;		Nothing
  7852 ;; This function is called by:
  7853 ;;		_sprintf
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           	psect	text16
  7858  005EC6                     __ptext16:
  7859                           	opt stack 0
  7860  005EC6                     ___ftge:
  7861                           	opt stack 21
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;incstack = 0
  7865  005EC6  0100               	movlb	0	; () banked
  7866  005EC8  0100               	movlb	0	; () banked
  7867  005ECA  AF9F               	btfss	(___ftge@ff1+2)& (0+255),7,b
  7868  005ECC  D021               	goto	l7121
  7869                           
  7870                           ; BSR set to: 0
  7871  005ECE  0100               	movlb	0	; () banked
  7872  005ED0  C09D  F0A3         	movff	___ftge@ff1,??___ftge
  7873  005ED4  0100               	movlb	0	; () banked
  7874  005ED6  C09E  F0A4         	movff	___ftge@ff1+1,??___ftge+1
  7875  005EDA  0100               	movlb	0	; () banked
  7876  005EDC  C09F  F0A5         	movff	___ftge@ff1+2,??___ftge+2
  7877  005EE0  0100               	movlb	0	; () banked
  7878  005EE2  1FA3               	comf	??___ftge& (0+255),f,b
  7879  005EE4  1FA4               	comf	(??___ftge+1)& (0+255),f,b
  7880  005EE6  1FA5               	comf	(??___ftge+2)& (0+255),f,b
  7881  005EE8  2BA3               	incf	??___ftge& (0+255),f,b
  7882  005EEA  0E00               	movlw	0
  7883  005EEC  23A4               	addwfc	(??___ftge+1)& (0+255),f,b
  7884  005EEE  23A5               	addwfc	(??___ftge+2)& (0+255),f,b
  7885  005EF0  0E00               	movlw	0
  7886  005EF2  0100               	movlb	0	; () banked
  7887  005EF4  25A3               	addwf	??___ftge& (0+255),w,b
  7888  005EF6  0100               	movlb	0	; () banked
  7889  005EF8  0100               	movlb	0	; () banked
  7890  005EFA  6F9D               	movwf	___ftge@ff1& (0+255),b
  7891  005EFC  0E00               	movlw	0
  7892  005EFE  0100               	movlb	0	; () banked
  7893  005F00  21A4               	addwfc	(??___ftge+1)& (0+255),w,b
  7894  005F02  0100               	movlb	0	; () banked
  7895  005F04  6F9E               	movwf	(___ftge@ff1+1)& (0+255),b
  7896  005F06  0E80               	movlw	128
  7897  005F08  0100               	movlb	0	; () banked
  7898  005F0A  21A5               	addwfc	(??___ftge+2)& (0+255),w,b
  7899  005F0C  0100               	movlb	0	; () banked
  7900  005F0E  6F9F               	movwf	(___ftge@ff1+2)& (0+255),b
  7901  005F10                     l7121:
  7902                           
  7903                           ; BSR set to: 0
  7904  005F10  0100               	movlb	0	; () banked
  7905  005F12  0100               	movlb	0	; () banked
  7906  005F14  AFA2               	btfss	(___ftge@ff2+2)& (0+255),7,b
  7907  005F16  D021               	goto	l7125
  7908                           
  7909                           ; BSR set to: 0
  7910  005F18  0100               	movlb	0	; () banked
  7911  005F1A  C0A0  F0A3         	movff	___ftge@ff2,??___ftge
  7912  005F1E  0100               	movlb	0	; () banked
  7913  005F20  C0A1  F0A4         	movff	___ftge@ff2+1,??___ftge+1
  7914  005F24  0100               	movlb	0	; () banked
  7915  005F26  C0A2  F0A5         	movff	___ftge@ff2+2,??___ftge+2
  7916  005F2A  0100               	movlb	0	; () banked
  7917  005F2C  1FA3               	comf	??___ftge& (0+255),f,b
  7918  005F2E  1FA4               	comf	(??___ftge+1)& (0+255),f,b
  7919  005F30  1FA5               	comf	(??___ftge+2)& (0+255),f,b
  7920  005F32  2BA3               	incf	??___ftge& (0+255),f,b
  7921  005F34  0E00               	movlw	0
  7922  005F36  23A4               	addwfc	(??___ftge+1)& (0+255),f,b
  7923  005F38  23A5               	addwfc	(??___ftge+2)& (0+255),f,b
  7924  005F3A  0E00               	movlw	0
  7925  005F3C  0100               	movlb	0	; () banked
  7926  005F3E  25A3               	addwf	??___ftge& (0+255),w,b
  7927  005F40  0100               	movlb	0	; () banked
  7928  005F42  0100               	movlb	0	; () banked
  7929  005F44  6FA0               	movwf	___ftge@ff2& (0+255),b
  7930  005F46  0E00               	movlw	0
  7931  005F48  0100               	movlb	0	; () banked
  7932  005F4A  21A4               	addwfc	(??___ftge+1)& (0+255),w,b
  7933  005F4C  0100               	movlb	0	; () banked
  7934  005F4E  6FA1               	movwf	(___ftge@ff2+1)& (0+255),b
  7935  005F50  0E80               	movlw	128
  7936  005F52  0100               	movlb	0	; () banked
  7937  005F54  21A5               	addwfc	(??___ftge+2)& (0+255),w,b
  7938  005F56  0100               	movlb	0	; () banked
  7939  005F58  6FA2               	movwf	(___ftge@ff2+2)& (0+255),b
  7940  005F5A                     l7125:
  7941                           
  7942                           ; BSR set to: 0
  7943  005F5A  0E00               	movlw	0
  7944  005F5C  0100               	movlb	0	; () banked
  7945  005F5E  0100               	movlb	0	; () banked
  7946  005F60  1B9D               	xorwf	___ftge@ff1& (0+255),f,b
  7947  005F62  0E00               	movlw	0
  7948  005F64  0100               	movlb	0	; () banked
  7949  005F66  0100               	movlb	0	; () banked
  7950  005F68  1B9E               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  7951  005F6A  0E80               	movlw	128
  7952  005F6C  0100               	movlb	0	; () banked
  7953  005F6E  0100               	movlb	0	; () banked
  7954  005F70  1B9F               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  7955                           
  7956                           ; BSR set to: 0
  7957  005F72  0E00               	movlw	0
  7958  005F74  0100               	movlb	0	; () banked
  7959  005F76  0100               	movlb	0	; () banked
  7960  005F78  1BA0               	xorwf	___ftge@ff2& (0+255),f,b
  7961  005F7A  0E00               	movlw	0
  7962  005F7C  0100               	movlb	0	; () banked
  7963  005F7E  0100               	movlb	0	; () banked
  7964  005F80  1BA1               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  7965  005F82  0E80               	movlw	128
  7966  005F84  0100               	movlb	0	; () banked
  7967  005F86  0100               	movlb	0	; () banked
  7968  005F88  1BA2               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  7969  005F8A  0100               	movlb	0	; () banked
  7970  005F8C  0100               	movlb	0	; () banked
  7971  005F8E  51A0               	movf	___ftge@ff2& (0+255),w,b
  7972  005F90  0100               	movlb	0	; () banked
  7973  005F92  0100               	movlb	0	; () banked
  7974  005F94  5D9D               	subwf	___ftge@ff1& (0+255),w,b
  7975  005F96  0100               	movlb	0	; () banked
  7976  005F98  0100               	movlb	0	; () banked
  7977  005F9A  51A1               	movf	(___ftge@ff2+1)& (0+255),w,b
  7978  005F9C  0100               	movlb	0	; () banked
  7979  005F9E  0100               	movlb	0	; () banked
  7980  005FA0  599E               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  7981  005FA2  0100               	movlb	0	; () banked
  7982  005FA4  0100               	movlb	0	; () banked
  7983  005FA6  51A2               	movf	(___ftge@ff2+2)& (0+255),w,b
  7984  005FA8  0100               	movlb	0	; () banked
  7985  005FAA  0100               	movlb	0	; () banked
  7986  005FAC  599F               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  7987  005FAE  B0D8               	btfsc	status,0,c
  7988  005FB0  D002               	goto	l7131
  7989                           
  7990                           ; BSR set to: 0
  7991  005FB2  90D8               	bcf	status,0,c
  7992  005FB4  0012               	return	
  7993  005FB6                     l7131:
  7994                           
  7995                           ; BSR set to: 0
  7996  005FB6  80D8               	bsf	status,0,c
  7997  005FB8  0012               	return	
  7998  005FBA                     __end_of___ftge:
  7999                           	opt stack 0
  8000                           tblptru	equ	0xFF8
  8001                           tblptrh	equ	0xFF7
  8002                           tblptrl	equ	0xFF6
  8003                           tablat	equ	0xFF5
  8004                           prodh	equ	0xFF4
  8005                           prodl	equ	0xFF3
  8006                           intcon	equ	0xFF2
  8007                           wreg	equ	0xFE8
  8008                           indf2	equ	0xFDF
  8009                           postinc2	equ	0xFDE
  8010                           postdec2	equ	0xFDD
  8011                           fsr2h	equ	0xFDA
  8012                           fsr2l	equ	0xFD9
  8013                           status	equ	0xFD8
  8014                           
  8015 ;; *************** function ___asftsub *****************
  8016 ;; Defined at:
  8017 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.31\sources\pic18\asftsub.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  f1p             2   18[BANK1 ] PTR float 
  8020 ;;		 -> sprintf@fval(3), 
  8021 ;;  f2              3   20[BANK1 ] float 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  3   18[BANK1 ] float 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8033 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8036 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8037 ;;Total ram usage:        5 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:   10
  8040 ;; This function calls:
  8041 ;;		___ftsub
  8042 ;; This function is called by:
  8043 ;;		_sprintf
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           	psect	text17
  8048  006C8A                     __ptext17:
  8049                           	opt stack 0
  8050  006C8A                     ___asftsub:
  8051                           	opt stack 18
  8052                           
  8053                           ;	Return value of ___asftsub is never used
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;incstack = 0
  8057  006C8A  C112  FFD9         	movff	___asftsub@f1p,fsr2l
  8058  006C8E  C113  FFDA         	movff	___asftsub@f1p+1,fsr2h
  8059  006C92  0101               	movlb	1	; () banked
  8060  006C94  CFDE F10C          	movff	postinc2,___ftsub@f1
  8061  006C98  0101               	movlb	1	; () banked
  8062  006C9A  CFDE F10D          	movff	postinc2,___ftsub@f1+1
  8063  006C9E  0101               	movlb	1	; () banked
  8064  006CA0  CFDD F10E          	movff	postdec2,___ftsub@f1+2
  8065  006CA4  C114  F10F         	movff	___asftsub@f2,___ftsub@f2
  8066  006CA8  C115  F110         	movff	___asftsub@f2+1,___ftsub@f2+1
  8067  006CAC  C116  F111         	movff	___asftsub@f2+2,___ftsub@f2+2
  8068  006CB0  EC66  F036         	call	___ftsub	;wreg free
  8069  006CB4  C112  FFD9         	movff	___asftsub@f1p,fsr2l
  8070  006CB8  C113  FFDA         	movff	___asftsub@f1p+1,fsr2h
  8071  006CBC  C10C  FFDE         	movff	?___ftsub,postinc2
  8072  006CC0  C10D  FFDE         	movff	?___ftsub+1,postinc2
  8073  006CC4  C10E  FFDD         	movff	?___ftsub+2,postdec2
  8074  006CC8  52DD               	movf	postdec2,f,c
  8075  006CCA  0012               	return	
  8076  006CCC                     __end_of___asftsub:
  8077                           	opt stack 0
  8078                           tblptru	equ	0xFF8
  8079                           tblptrh	equ	0xFF7
  8080                           tblptrl	equ	0xFF6
  8081                           tablat	equ	0xFF5
  8082                           prodh	equ	0xFF4
  8083                           prodl	equ	0xFF3
  8084                           intcon	equ	0xFF2
  8085                           wreg	equ	0xFE8
  8086                           indf2	equ	0xFDF
  8087                           postinc2	equ	0xFDE
  8088                           postdec2	equ	0xFDD
  8089                           fsr2h	equ	0xFDA
  8090                           fsr2l	equ	0xFD9
  8091                           status	equ	0xFD8
  8092                           
  8093 ;; *************** function ___ftsub *****************
  8094 ;; Defined at:
  8095 ;;		line 20 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftsub.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  f1              3   12[BANK1 ] float 
  8098 ;;  f2              3   15[BANK1 ] float 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  3   12[BANK1 ] float 
  8103 ;; Registers used:
  8104 ;;		wreg, status,2, status,0, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8110 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8113 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8114 ;;Total ram usage:        6 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    9
  8117 ;; This function calls:
  8118 ;;		___ftadd
  8119 ;; This function is called by:
  8120 ;;		___asftsub
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text18
  8125  006CCC                     __ptext18:
  8126                           	opt stack 0
  8127  006CCC                     ___ftsub:
  8128                           	opt stack 18
  8129                           
  8130                           ;incstack = 0
  8131  006CCC  0E00               	movlw	0
  8132  006CCE  0101               	movlb	1	; () banked
  8133  006CD0  0101               	movlb	1	; () banked
  8134  006CD2  1B0F               	xorwf	___ftsub@f2& (0+255),f,b
  8135  006CD4  0E00               	movlw	0
  8136  006CD6  0101               	movlb	1	; () banked
  8137  006CD8  0101               	movlb	1	; () banked
  8138  006CDA  1B10               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8139  006CDC  0E80               	movlw	128
  8140  006CDE  0101               	movlb	1	; () banked
  8141  006CE0  0101               	movlb	1	; () banked
  8142  006CE2  1B11               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8143                           
  8144                           ; BSR set to: 1
  8145  006CE4  C10C  F100         	movff	___ftsub@f1,___ftadd@f1
  8146  006CE8  C10D  F101         	movff	___ftsub@f1+1,___ftadd@f1+1
  8147  006CEC  C10E  F102         	movff	___ftsub@f1+2,___ftadd@f1+2
  8148  006CF0  C10F  F103         	movff	___ftsub@f2,___ftadd@f2
  8149  006CF4  C110  F104         	movff	___ftsub@f2+1,___ftadd@f2+1
  8150  006CF8  C111  F105         	movff	___ftsub@f2+2,___ftadd@f2+2
  8151  006CFC  EC8C  F01C         	call	___ftadd	;wreg free
  8152  006D00  C100  F10C         	movff	?___ftadd,?___ftsub
  8153  006D04  C101  F10D         	movff	?___ftadd+1,?___ftsub+1
  8154  006D08  C102  F10E         	movff	?___ftadd+2,?___ftsub+2
  8155  006D0C  0012               	return	
  8156  006D0E                     __end_of___ftsub:
  8157                           	opt stack 0
  8158                           tblptru	equ	0xFF8
  8159                           tblptrh	equ	0xFF7
  8160                           tblptrl	equ	0xFF6
  8161                           tablat	equ	0xFF5
  8162                           prodh	equ	0xFF4
  8163                           prodl	equ	0xFF3
  8164                           intcon	equ	0xFF2
  8165                           wreg	equ	0xFE8
  8166                           indf2	equ	0xFDF
  8167                           postinc2	equ	0xFDE
  8168                           postdec2	equ	0xFDD
  8169                           fsr2h	equ	0xFDA
  8170                           fsr2l	equ	0xFD9
  8171                           status	equ	0xFD8
  8172                           
  8173 ;; *************** function ___asftmul *****************
  8174 ;; Defined at:
  8175 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.31\sources\pic18\asftmul.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  f1p             2    0[BANK1 ] PTR float 
  8178 ;;		 -> sprintf@integ(3), 
  8179 ;;  f2              3    2[BANK1 ] float 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  3    0[BANK1 ] float 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8191 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8194 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8195 ;;Total ram usage:        5 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    9
  8198 ;; This function calls:
  8199 ;;		___ftmul
  8200 ;; This function is called by:
  8201 ;;		_sprintf
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text19
  8206  006D0E                     __ptext19:
  8207                           	opt stack 0
  8208  006D0E                     ___asftmul:
  8209                           	opt stack 19
  8210                           
  8211                           ;	Return value of ___asftmul is never used
  8212                           
  8213                           ;incstack = 0
  8214  006D0E  C100  FFD9         	movff	___asftmul@f1p,fsr2l
  8215  006D12  C101  FFDA         	movff	___asftmul@f1p+1,fsr2h
  8216  006D16  0100               	movlb	0	; () banked
  8217  006D18  CFDE F0B3          	movff	postinc2,___ftmul@f1
  8218  006D1C  0100               	movlb	0	; () banked
  8219  006D1E  CFDE F0B4          	movff	postinc2,___ftmul@f1+1
  8220  006D22  0100               	movlb	0	; () banked
  8221  006D24  CFDD F0B5          	movff	postdec2,___ftmul@f1+2
  8222  006D28  C102  F0B6         	movff	___asftmul@f2,___ftmul@f2
  8223  006D2C  C103  F0B7         	movff	___asftmul@f2+1,___ftmul@f2+1
  8224  006D30  C104  F0B8         	movff	___asftmul@f2+2,___ftmul@f2+2
  8225  006D34  ECC8  F023         	call	___ftmul	;wreg free
  8226  006D38  C100  FFD9         	movff	___asftmul@f1p,fsr2l
  8227  006D3C  C101  FFDA         	movff	___asftmul@f1p+1,fsr2h
  8228  006D40  C0B3  FFDE         	movff	?___ftmul,postinc2
  8229  006D44  C0B4  FFDE         	movff	?___ftmul+1,postinc2
  8230  006D48  C0B5  FFDD         	movff	?___ftmul+2,postdec2
  8231  006D4C  52DD               	movf	postdec2,f,c
  8232  006D4E  0012               	return	
  8233  006D50                     __end_of___asftmul:
  8234                           	opt stack 0
  8235                           tblptru	equ	0xFF8
  8236                           tblptrh	equ	0xFF7
  8237                           tblptrl	equ	0xFF6
  8238                           tablat	equ	0xFF5
  8239                           prodh	equ	0xFF4
  8240                           prodl	equ	0xFF3
  8241                           intcon	equ	0xFF2
  8242                           wreg	equ	0xFE8
  8243                           indf2	equ	0xFDF
  8244                           postinc2	equ	0xFDE
  8245                           postdec2	equ	0xFDD
  8246                           fsr2h	equ	0xFDA
  8247                           fsr2l	equ	0xFD9
  8248                           status	equ	0xFD8
  8249                           
  8250 ;; *************** function _readDistance *****************
  8251 ;; Defined at:
  8252 ;;		line 123 in file "functions.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  a               3   54[BANK1 ] float 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  3   38[BANK1 ] float 
  8259 ;; Registers used:
  8260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8266 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8267 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8268 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8269 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8270 ;;Total ram usage:       19 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:   10
  8273 ;; This function calls:
  8274 ;;		___asftadd
  8275 ;;		___awtoft
  8276 ;;		___ftadd
  8277 ;;		___ftdiv
  8278 ;;		___ftmul
  8279 ;;		_readTempF
  8280 ;; This function is called by:
  8281 ;;		_showDistance
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text20
  8286  004374                     __ptext20:
  8287                           	opt stack 0
  8288  004374                     _readDistance:
  8289                           	opt stack 19
  8290                           
  8291                           ;functions.c: 124: double a;
  8292                           ;functions.c: 125: TMR1H = 0;
  8293                           
  8294                           ;incstack = 0
  8295  004374  0E00               	movlw	0
  8296  004376  6ECF               	movwf	4047,c	;volatile
  8297                           
  8298                           ;functions.c: 126: TMR1L = 0;
  8299  004378  0E00               	movlw	0
  8300  00437A  6ECE               	movwf	4046,c	;volatile
  8301                           
  8302                           ;functions.c: 128: T1CONbits.TMR1CS0 = 0;
  8303  00437C  9CCD               	bcf	4045,6,c	;volatile
  8304                           
  8305                           ;functions.c: 129: T1CONbits.TMR1CS0 = 0;
  8306  00437E  9CCD               	bcf	4045,6,c	;volatile
  8307                           
  8308                           ;functions.c: 131: T1CONbits.T1CKPS0 = 1;
  8309  004380  88CD               	bsf	4045,4,c	;volatile
  8310                           
  8311                           ;functions.c: 132: T1CONbits.T1CKPS1 = 0;
  8312  004382  9ACD               	bcf	4045,5,c	;volatile
  8313                           
  8314                           ;functions.c: 134: LATBbits.LATB1 = 1;
  8315  004384  828A               	bsf	3978,1,c	;volatile
  8316                           
  8317                           ;functions.c: 135: _delay((unsigned long)((10)*(12000000/4000000.0)));
  8318  004386  0E0A               	movlw	10
  8319  004388                     u7297:
  8320  004388  2EE8               	decfsz	wreg,f,c
  8321  00438A  D7FE               	goto	u7297
  8322                           
  8323                           ;functions.c: 136: LATBbits.LATB1 = 0;
  8324  00438C  928A               	bcf	3978,1,c	;volatile
  8325  00438E                     l136:
  8326  00438E  A481               	btfss	3969,2,c	;volatile
  8327  004390  D7FE               	goto	l136
  8328                           
  8329                           ;functions.c: 139: T1CONbits.TMR1ON = 1;
  8330  004392  80CD               	bsf	4045,0,c	;volatile
  8331  004394                     l139:
  8332  004394  B481               	btfsc	3969,2,c	;volatile
  8333  004396  D7FE               	goto	l139
  8334                           
  8335                           ;functions.c: 141: T1CONbits.TMR1ON = 0;
  8336  004398  90CD               	bcf	4045,0,c	;volatile
  8337                           
  8338                           ;functions.c: 143: a = (TMR1L | (TMR1H << 8));
  8339  00439A  50CF               	movf	4047,w,c	;volatile
  8340  00439C  0101               	movlb	1	; () banked
  8341  00439E  6F2A               	movwf	(??_readDistance+1)& (0+255),b
  8342  0043A0  6B29               	clrf	??_readDistance& (0+255),b
  8343  0043A2  50CE               	movf	4046,w,c	;volatile
  8344  0043A4  0101               	movlb	1	; () banked
  8345  0043A6  6F2B               	movwf	(??_readDistance+2)& (0+255),b
  8346  0043A8  6B2C               	clrf	(??_readDistance+3)& (0+255),b
  8347  0043AA  0101               	movlb	1	; () banked
  8348  0043AC  5129               	movf	??_readDistance& (0+255),w,b
  8349  0043AE  0101               	movlb	1	; () banked
  8350  0043B0  112B               	iorwf	(??_readDistance+2)& (0+255),w,b
  8351  0043B2  0100               	movlb	0	; () banked
  8352  0043B4  0100               	movlb	0	; () banked
  8353  0043B6  6FA5               	movwf	___awtoft@c& (0+255),b
  8354  0043B8  0101               	movlb	1	; () banked
  8355  0043BA  512A               	movf	(??_readDistance+1)& (0+255),w,b
  8356  0043BC  0101               	movlb	1	; () banked
  8357  0043BE  112C               	iorwf	(??_readDistance+3)& (0+255),w,b
  8358  0043C0  0100               	movlb	0	; () banked
  8359  0043C2  6FA6               	movwf	(___awtoft@c+1)& (0+255),b
  8360  0043C4  ECFC  F033         	call	___awtoft	;wreg free
  8361  0043C8  C0A5  F136         	movff	?___awtoft,readDistance@a
  8362  0043CC  C0A6  F137         	movff	?___awtoft+1,readDistance@a+1
  8363  0043D0  C0A7  F138         	movff	?___awtoft+2,readDistance@a+2
  8364                           
  8365                           ;functions.c: 144: a = (a*43.6)/0xffff;
  8366  0043D4  0E66               	movlw	102
  8367  0043D6  0100               	movlb	0	; () banked
  8368  0043D8  0100               	movlb	0	; () banked
  8369  0043DA  6FB6               	movwf	___ftmul@f2& (0+255),b
  8370  0043DC  0E2E               	movlw	46
  8371  0043DE  0100               	movlb	0	; () banked
  8372  0043E0  0100               	movlb	0	; () banked
  8373  0043E2  6FB7               	movwf	(___ftmul@f2+1)& (0+255),b
  8374  0043E4  0E42               	movlw	66
  8375  0043E6  0100               	movlb	0	; () banked
  8376  0043E8  0100               	movlb	0	; () banked
  8377  0043EA  6FB8               	movwf	(___ftmul@f2+2)& (0+255),b
  8378  0043EC  C136  F0B3         	movff	readDistance@a,___ftmul@f1
  8379  0043F0  C137  F0B4         	movff	readDistance@a+1,___ftmul@f1+1
  8380  0043F4  C138  F0B5         	movff	readDistance@a+2,___ftmul@f1+2
  8381  0043F8  ECC8  F023         	call	___ftmul	;wreg free
  8382  0043FC  C0B3  F10C         	movff	?___ftmul,___ftdiv@f1
  8383  004400  C0B4  F10D         	movff	?___ftmul+1,___ftdiv@f1+1
  8384  004404  C0B5  F10E         	movff	?___ftmul+2,___ftdiv@f1+2
  8385  004408  0EFF               	movlw	255
  8386  00440A  0101               	movlb	1	; () banked
  8387  00440C  0101               	movlb	1	; () banked
  8388  00440E  6F0F               	movwf	___ftdiv@f2& (0+255),b
  8389  004410  0E7F               	movlw	127
  8390  004412  0101               	movlb	1	; () banked
  8391  004414  0101               	movlb	1	; () banked
  8392  004416  6F10               	movwf	(___ftdiv@f2+1)& (0+255),b
  8393  004418  0E47               	movlw	71
  8394  00441A  0101               	movlb	1	; () banked
  8395  00441C  0101               	movlb	1	; () banked
  8396  00441E  6F11               	movwf	(___ftdiv@f2+2)& (0+255),b
  8397  004420  EC90  F025         	call	___ftdiv	;wreg free
  8398  004424  C10C  F136         	movff	?___ftdiv,readDistance@a
  8399  004428  C10D  F137         	movff	?___ftdiv+1,readDistance@a+1
  8400  00442C  C10E  F138         	movff	?___ftdiv+2,readDistance@a+2
  8401                           
  8402                           ;functions.c: 145: a = ((a * (((double)331.5 + ((double)0.6 * readTempF()))/(double)1000
      +                          0)) / 2)*1000;
  8403  004430  EC3D  F027         	call	_readTempF	;wreg free
  8404  004434  C11B  F12D         	movff	?_readTempF,_readDistance$1687
  8405  004438  C11C  F12E         	movff	?_readTempF+1,_readDistance$1687+1
  8406  00443C  C11D  F12F         	movff	?_readTempF+2,_readDistance$1687+2
  8407                           
  8408                           ;functions.c: 145: a = ((a * (((double)331.5 + ((double)0.6 * readTempF()))/(double)1000
      +                          0)) / 2)*1000;
  8409  004440  0E40               	movlw	64
  8410  004442  0101               	movlb	1	; () banked
  8411  004444  0101               	movlb	1	; () banked
  8412  004446  6F0F               	movwf	___ftdiv@f2& (0+255),b
  8413  004448  0E1C               	movlw	28
  8414  00444A  0101               	movlb	1	; () banked
  8415  00444C  0101               	movlb	1	; () banked
  8416  00444E  6F10               	movwf	(___ftdiv@f2+1)& (0+255),b
  8417  004450  0E46               	movlw	70
  8418  004452  0101               	movlb	1	; () banked
  8419  004454  0101               	movlb	1	; () banked
  8420  004456  6F11               	movwf	(___ftdiv@f2+2)& (0+255),b
  8421  004458  0EC0               	movlw	192
  8422  00445A  0101               	movlb	1	; () banked
  8423  00445C  0101               	movlb	1	; () banked
  8424  00445E  6F03               	movwf	___ftadd@f2& (0+255),b
  8425  004460  0EA5               	movlw	165
  8426  004462  0101               	movlb	1	; () banked
  8427  004464  0101               	movlb	1	; () banked
  8428  004466  6F04               	movwf	(___ftadd@f2+1)& (0+255),b
  8429  004468  0E43               	movlw	67
  8430  00446A  0101               	movlb	1	; () banked
  8431  00446C  0101               	movlb	1	; () banked
  8432  00446E  6F05               	movwf	(___ftadd@f2+2)& (0+255),b
  8433  004470  0E9A               	movlw	154
  8434  004472  0100               	movlb	0	; () banked
  8435  004474  0100               	movlb	0	; () banked
  8436  004476  6FB6               	movwf	___ftmul@f2& (0+255),b
  8437  004478  0E19               	movlw	25
  8438  00447A  0100               	movlb	0	; () banked
  8439  00447C  0100               	movlb	0	; () banked
  8440  00447E  6FB7               	movwf	(___ftmul@f2+1)& (0+255),b
  8441  004480  0E3F               	movlw	63
  8442  004482  0100               	movlb	0	; () banked
  8443  004484  0100               	movlb	0	; () banked
  8444  004486  6FB8               	movwf	(___ftmul@f2+2)& (0+255),b
  8445  004488  C12D  F0B3         	movff	_readDistance$1687,___ftmul@f1
  8446  00448C  C12E  F0B4         	movff	_readDistance$1687+1,___ftmul@f1+1
  8447  004490  C12F  F0B5         	movff	_readDistance$1687+2,___ftmul@f1+2
  8448  004494  ECC8  F023         	call	___ftmul	;wreg free
  8449  004498  C0B3  F100         	movff	?___ftmul,___ftadd@f1
  8450  00449C  C0B4  F101         	movff	?___ftmul+1,___ftadd@f1+1
  8451  0044A0  C0B5  F102         	movff	?___ftmul+2,___ftadd@f1+2
  8452  0044A4  EC8C  F01C         	call	___ftadd	;wreg free
  8453  0044A8  C100  F10C         	movff	?___ftadd,___ftdiv@f1
  8454  0044AC  C101  F10D         	movff	?___ftadd+1,___ftdiv@f1+1
  8455  0044B0  C102  F10E         	movff	?___ftadd+2,___ftdiv@f1+2
  8456  0044B4  EC90  F025         	call	___ftdiv	;wreg free
  8457  0044B8  C10C  F130         	movff	?___ftdiv,_readDistance$1688
  8458  0044BC  C10D  F131         	movff	?___ftdiv+1,_readDistance$1688+1
  8459  0044C0  C10E  F132         	movff	?___ftdiv+2,_readDistance$1688+2
  8460                           
  8461                           ;functions.c: 145: a = ((a * (((double)331.5 + ((double)0.6 * readTempF()))/(double)1000
      +                          0)) / 2)*1000;
  8462  0044C4  0E00               	movlw	0
  8463  0044C6  0101               	movlb	1	; () banked
  8464  0044C8  0101               	movlb	1	; () banked
  8465  0044CA  6F0F               	movwf	___ftdiv@f2& (0+255),b
  8466  0044CC  0E00               	movlw	0
  8467  0044CE  0101               	movlb	1	; () banked
  8468  0044D0  0101               	movlb	1	; () banked
  8469  0044D2  6F10               	movwf	(___ftdiv@f2+1)& (0+255),b
  8470  0044D4  0E40               	movlw	64
  8471  0044D6  0101               	movlb	1	; () banked
  8472  0044D8  0101               	movlb	1	; () banked
  8473  0044DA  6F11               	movwf	(___ftdiv@f2+2)& (0+255),b
  8474  0044DC  C136  F0B6         	movff	readDistance@a,___ftmul@f2
  8475  0044E0  C137  F0B7         	movff	readDistance@a+1,___ftmul@f2+1
  8476  0044E4  C138  F0B8         	movff	readDistance@a+2,___ftmul@f2+2
  8477  0044E8  C130  F0B3         	movff	_readDistance$1688,___ftmul@f1
  8478  0044EC  C131  F0B4         	movff	_readDistance$1688+1,___ftmul@f1+1
  8479  0044F0  C132  F0B5         	movff	_readDistance$1688+2,___ftmul@f1+2
  8480  0044F4  ECC8  F023         	call	___ftmul	;wreg free
  8481  0044F8  C0B3  F10C         	movff	?___ftmul,___ftdiv@f1
  8482  0044FC  C0B4  F10D         	movff	?___ftmul+1,___ftdiv@f1+1
  8483  004500  C0B5  F10E         	movff	?___ftmul+2,___ftdiv@f1+2
  8484  004504  EC90  F025         	call	___ftdiv	;wreg free
  8485  004508  C10C  F133         	movff	?___ftdiv,_readDistance$1689
  8486  00450C  C10D  F134         	movff	?___ftdiv+1,_readDistance$1689+1
  8487  004510  C10E  F135         	movff	?___ftdiv+2,_readDistance$1689+2
  8488                           
  8489                           ;functions.c: 145: a = ((a * (((double)331.5 + ((double)0.6 * readTempF()))/(double)1000
      +                          0)) / 2)*1000;
  8490  004514  C133  F0B3         	movff	_readDistance$1689,___ftmul@f1
  8491  004518  C134  F0B4         	movff	_readDistance$1689+1,___ftmul@f1+1
  8492  00451C  C135  F0B5         	movff	_readDistance$1689+2,___ftmul@f1+2
  8493  004520  0E00               	movlw	0
  8494  004522  0100               	movlb	0	; () banked
  8495  004524  0100               	movlb	0	; () banked
  8496  004526  6FB6               	movwf	___ftmul@f2& (0+255),b
  8497  004528  0E7A               	movlw	122
  8498  00452A  0100               	movlb	0	; () banked
  8499  00452C  0100               	movlb	0	; () banked
  8500  00452E  6FB7               	movwf	(___ftmul@f2+1)& (0+255),b
  8501  004530  0E44               	movlw	68
  8502  004532  0100               	movlb	0	; () banked
  8503  004534  0100               	movlb	0	; () banked
  8504  004536  6FB8               	movwf	(___ftmul@f2+2)& (0+255),b
  8505  004538  ECC8  F023         	call	___ftmul	;wreg free
  8506  00453C  C0B3  F136         	movff	?___ftmul,readDistance@a
  8507  004540  C0B4  F137         	movff	?___ftmul+1,readDistance@a+1
  8508  004544  C0B5  F138         	movff	?___ftmul+2,readDistance@a+2
  8509                           
  8510                           ;functions.c: 146: a += 1.3;
  8511  004548  0101               	movlb	1	; () banked
  8512  00454A  0E01               	movlw	high readDistance@a
  8513  00454C  0101               	movlb	1	; () banked
  8514  00454E  0101               	movlb	1	; () banked
  8515  004550  6F0D               	movwf	(___asftadd@f1p+1)& (0+255),b
  8516  004552  0101               	movlb	1	; () banked
  8517  004554  0E36               	movlw	low readDistance@a
  8518  004556  0101               	movlb	1	; () banked
  8519  004558  0101               	movlb	1	; () banked
  8520  00455A  6F0C               	movwf	___asftadd@f1p& (0+255),b
  8521  00455C  0E66               	movlw	102
  8522  00455E  0101               	movlb	1	; () banked
  8523  004560  0101               	movlb	1	; () banked
  8524  004562  6F0E               	movwf	___asftadd@f2& (0+255),b
  8525  004564  0EA6               	movlw	166
  8526  004566  0101               	movlb	1	; () banked
  8527  004568  0101               	movlb	1	; () banked
  8528  00456A  6F0F               	movwf	(___asftadd@f2+1)& (0+255),b
  8529  00456C  0E3F               	movlw	63
  8530  00456E  0101               	movlb	1	; () banked
  8531  004570  0101               	movlb	1	; () banked
  8532  004572  6F10               	movwf	(___asftadd@f2+2)& (0+255),b
  8533  004574  ECA8  F036         	call	___asftadd	;wreg free
  8534                           
  8535                           ;functions.c: 149: return a;
  8536  004578  C136  F126         	movff	readDistance@a,?_readDistance
  8537  00457C  C137  F127         	movff	readDistance@a+1,?_readDistance+1
  8538  004580  C138  F128         	movff	readDistance@a+2,?_readDistance+2
  8539  004584  0012               	return	
  8540  004586                     __end_of_readDistance:
  8541                           	opt stack 0
  8542                           tblptru	equ	0xFF8
  8543                           tblptrh	equ	0xFF7
  8544                           tblptrl	equ	0xFF6
  8545                           tablat	equ	0xFF5
  8546                           prodh	equ	0xFF4
  8547                           prodl	equ	0xFF3
  8548                           intcon	equ	0xFF2
  8549                           wreg	equ	0xFE8
  8550                           indf2	equ	0xFDF
  8551                           postinc2	equ	0xFDE
  8552                           postdec2	equ	0xFDD
  8553                           fsr2h	equ	0xFDA
  8554                           fsr2l	equ	0xFD9
  8555                           status	equ	0xFD8
  8556                           
  8557 ;; *************** function _readTempF *****************
  8558 ;; Defined at:
  8559 ;;		line 156 in file "functions.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;		None
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  i               2   33[BANK1 ] int 
  8564 ;;  j               3   35[BANK1 ] float 
  8565 ;;  temp            3   30[BANK1 ] float 
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  3   27[BANK1 ] float 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2, status,0, prodl, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8575 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8576 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;Total ram usage:       11 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    9
  8582 ;; This function calls:
  8583 ;;		___awtoft
  8584 ;;		___ftadd
  8585 ;;		___ftdiv
  8586 ;;		___ftmul
  8587 ;;		_read
  8588 ;; This function is called by:
  8589 ;;		_readDistance
  8590 ;;		_showTempLight
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text21
  8595  004E7A                     __ptext21:
  8596                           	opt stack 0
  8597  004E7A                     _readTempF:
  8598                           	opt stack 19
  8599                           
  8600                           ;functions.c: 157: float temp;
  8601                           ;functions.c: 158: float j = 0;
  8602                           
  8603                           ;incstack = 0
  8604  004E7A  0E00               	movlw	0
  8605  004E7C  0101               	movlb	1	; () banked
  8606  004E7E  0101               	movlb	1	; () banked
  8607  004E80  6F23               	movwf	readTempF@j& (0+255),b
  8608  004E82  0E00               	movlw	0
  8609  004E84  0101               	movlb	1	; () banked
  8610  004E86  0101               	movlb	1	; () banked
  8611  004E88  6F24               	movwf	(readTempF@j+1)& (0+255),b
  8612  004E8A  0E00               	movlw	0
  8613  004E8C  0101               	movlb	1	; () banked
  8614  004E8E  0101               	movlb	1	; () banked
  8615  004E90  6F25               	movwf	(readTempF@j+2)& (0+255),b
  8616                           
  8617                           ;functions.c: 159: for (int i = 0; i < 5; i++)
  8618  004E92  0E00               	movlw	0
  8619  004E94  0101               	movlb	1	; () banked
  8620  004E96  0101               	movlb	1	; () banked
  8621  004E98  6F22               	movwf	(readTempF@i+1)& (0+255),b
  8622  004E9A  0E00               	movlw	0
  8623  004E9C  0101               	movlb	1	; () banked
  8624  004E9E  6F21               	movwf	readTempF@i& (0+255),b
  8625  004EA0                     
  8626                           ; BSR set to: 1
  8627  004EA0  0101               	movlb	1	; () banked
  8628  004EA2  0101               	movlb	1	; () banked
  8629  004EA4  5122               	movf	(readTempF@i+1)& (0+255),w,b
  8630  004EA6  0A80               	xorlw	128
  8631  004EA8  0F80               	addlw	-128
  8632  004EAA  0E05               	movlw	5
  8633  004EAC  B4D8               	btfsc	status,2,c
  8634  004EAE  5D21               	subwf	readTempF@i& (0+255),w,b
  8635  004EB0  B0D8               	btfsc	status,0,c
  8636  004EB2  D02A               	goto	l6863
  8637                           
  8638                           ; BSR set to: 1
  8639                           ;functions.c: 160: j = (float) read(0) + j;
  8640                           
  8641                           ; BSR set to: 1
  8642                           
  8643                           ; BSR set to: 1
  8644  004EB4  0E00               	movlw	0
  8645  004EB6  0100               	movlb	0	; () banked
  8646  004EB8  0100               	movlb	0	; () banked
  8647  004EBA  6F9E               	movwf	(read@channel+1)& (0+255),b
  8648  004EBC  0E00               	movlw	0
  8649  004EBE  0100               	movlb	0	; () banked
  8650  004EC0  6F9D               	movwf	read@channel& (0+255),b
  8651  004EC2  EC50  F030         	call	_read	;wreg free
  8652  004EC6  0100               	movlb	0	; () banked
  8653  004EC8  C09D  F0A5         	movff	?_read,___awtoft@c
  8654  004ECC  0100               	movlb	0	; () banked
  8655  004ECE  C09E  F0A6         	movff	?_read+1,___awtoft@c+1
  8656  004ED2  ECFC  F033         	call	___awtoft	;wreg free
  8657  004ED6  C0A5  F100         	movff	?___awtoft,___ftadd@f1
  8658  004EDA  C0A6  F101         	movff	?___awtoft+1,___ftadd@f1+1
  8659  004EDE  C0A7  F102         	movff	?___awtoft+2,___ftadd@f1+2
  8660  004EE2  C123  F103         	movff	readTempF@j,___ftadd@f2
  8661  004EE6  C124  F104         	movff	readTempF@j+1,___ftadd@f2+1
  8662  004EEA  C125  F105         	movff	readTempF@j+2,___ftadd@f2+2
  8663  004EEE  EC8C  F01C         	call	___ftadd	;wreg free
  8664  004EF2  C100  F123         	movff	?___ftadd,readTempF@j
  8665  004EF6  C101  F124         	movff	?___ftadd+1,readTempF@j+1
  8666  004EFA  C102  F125         	movff	?___ftadd+2,readTempF@j+2
  8667  004EFE  0101               	movlb	1	; () banked
  8668  004F00  0101               	movlb	1	; () banked
  8669  004F02  4B21               	infsnz	readTempF@i& (0+255),f,b
  8670  004F04  2B22               	incf	(readTempF@i+1)& (0+255),f,b
  8671  004F06  D7CC               	goto	L9
  8672  004F08                     l6863:
  8673                           
  8674                           ; BSR set to: 1
  8675                           ;functions.c: 161: j = j / 5;
  8676  004F08  C123  F10C         	movff	readTempF@j,___ftdiv@f1
  8677  004F0C  C124  F10D         	movff	readTempF@j+1,___ftdiv@f1+1
  8678  004F10  C125  F10E         	movff	readTempF@j+2,___ftdiv@f1+2
  8679  004F14  0E00               	movlw	0
  8680  004F16  0101               	movlb	1	; () banked
  8681  004F18  0101               	movlb	1	; () banked
  8682  004F1A  6F0F               	movwf	___ftdiv@f2& (0+255),b
  8683  004F1C  0EA0               	movlw	160
  8684  004F1E  0101               	movlb	1	; () banked
  8685  004F20  0101               	movlb	1	; () banked
  8686  004F22  6F10               	movwf	(___ftdiv@f2+1)& (0+255),b
  8687  004F24  0E40               	movlw	64
  8688  004F26  0101               	movlb	1	; () banked
  8689  004F28  0101               	movlb	1	; () banked
  8690  004F2A  6F11               	movwf	(___ftdiv@f2+2)& (0+255),b
  8691  004F2C  EC90  F025         	call	___ftdiv	;wreg free
  8692  004F30  C10C  F123         	movff	?___ftdiv,readTempF@j
  8693  004F34  C10D  F124         	movff	?___ftdiv+1,readTempF@j+1
  8694  004F38  C10E  F125         	movff	?___ftdiv+2,readTempF@j+2
  8695                           
  8696                           ;functions.c: 162: j = ((j * 3.3) / 4096);
  8697  004F3C  0E33               	movlw	51
  8698  004F3E  0100               	movlb	0	; () banked
  8699  004F40  0100               	movlb	0	; () banked
  8700  004F42  6FB6               	movwf	___ftmul@f2& (0+255),b
  8701  004F44  0E53               	movlw	83
  8702  004F46  0100               	movlb	0	; () banked
  8703  004F48  0100               	movlb	0	; () banked
  8704  004F4A  6FB7               	movwf	(___ftmul@f2+1)& (0+255),b
  8705  004F4C  0E40               	movlw	64
  8706  004F4E  0100               	movlb	0	; () banked
  8707  004F50  0100               	movlb	0	; () banked
  8708  004F52  6FB8               	movwf	(___ftmul@f2+2)& (0+255),b
  8709  004F54  C123  F0B3         	movff	readTempF@j,___ftmul@f1
  8710  004F58  C124  F0B4         	movff	readTempF@j+1,___ftmul@f1+1
  8711  004F5C  C125  F0B5         	movff	readTempF@j+2,___ftmul@f1+2
  8712  004F60  ECC8  F023         	call	___ftmul	;wreg free
  8713  004F64  C0B3  F10C         	movff	?___ftmul,___ftdiv@f1
  8714  004F68  C0B4  F10D         	movff	?___ftmul+1,___ftdiv@f1+1
  8715  004F6C  C0B5  F10E         	movff	?___ftmul+2,___ftdiv@f1+2
  8716  004F70  0E00               	movlw	0
  8717  004F72  0101               	movlb	1	; () banked
  8718  004F74  0101               	movlb	1	; () banked
  8719  004F76  6F0F               	movwf	___ftdiv@f2& (0+255),b
  8720  004F78  0E80               	movlw	128
  8721  004F7A  0101               	movlb	1	; () banked
  8722  004F7C  0101               	movlb	1	; () banked
  8723  004F7E  6F10               	movwf	(___ftdiv@f2+1)& (0+255),b
  8724  004F80  0E45               	movlw	69
  8725  004F82  0101               	movlb	1	; () banked
  8726  004F84  0101               	movlb	1	; () banked
  8727  004F86  6F11               	movwf	(___ftdiv@f2+2)& (0+255),b
  8728  004F88  EC90  F025         	call	___ftdiv	;wreg free
  8729  004F8C  C10C  F123         	movff	?___ftdiv,readTempF@j
  8730  004F90  C10D  F124         	movff	?___ftdiv+1,readTempF@j+1
  8731  004F94  C10E  F125         	movff	?___ftdiv+2,readTempF@j+2
  8732                           
  8733                           ;functions.c: 163: temp = (18.181818 * j) - 10;
  8734  004F98  0E74               	movlw	116
  8735  004F9A  0100               	movlb	0	; () banked
  8736  004F9C  0100               	movlb	0	; () banked
  8737  004F9E  6FB6               	movwf	___ftmul@f2& (0+255),b
  8738  004FA0  0E91               	movlw	145
  8739  004FA2  0100               	movlb	0	; () banked
  8740  004FA4  0100               	movlb	0	; () banked
  8741  004FA6  6FB7               	movwf	(___ftmul@f2+1)& (0+255),b
  8742  004FA8  0E41               	movlw	65
  8743  004FAA  0100               	movlb	0	; () banked
  8744  004FAC  0100               	movlb	0	; () banked
  8745  004FAE  6FB8               	movwf	(___ftmul@f2+2)& (0+255),b
  8746  004FB0  C123  F0B3         	movff	readTempF@j,___ftmul@f1
  8747  004FB4  C124  F0B4         	movff	readTempF@j+1,___ftmul@f1+1
  8748  004FB8  C125  F0B5         	movff	readTempF@j+2,___ftmul@f1+2
  8749  004FBC  ECC8  F023         	call	___ftmul	;wreg free
  8750  004FC0  C0B3  F100         	movff	?___ftmul,___ftadd@f1
  8751  004FC4  C0B4  F101         	movff	?___ftmul+1,___ftadd@f1+1
  8752  004FC8  C0B5  F102         	movff	?___ftmul+2,___ftadd@f1+2
  8753  004FCC  0E00               	movlw	0
  8754  004FCE  0101               	movlb	1	; () banked
  8755  004FD0  0101               	movlb	1	; () banked
  8756  004FD2  6F03               	movwf	___ftadd@f2& (0+255),b
  8757  004FD4  0E20               	movlw	32
  8758  004FD6  0101               	movlb	1	; () banked
  8759  004FD8  0101               	movlb	1	; () banked
  8760  004FDA  6F04               	movwf	(___ftadd@f2+1)& (0+255),b
  8761  004FDC  0EC1               	movlw	193
  8762  004FDE  0101               	movlb	1	; () banked
  8763  004FE0  0101               	movlb	1	; () banked
  8764  004FE2  6F05               	movwf	(___ftadd@f2+2)& (0+255),b
  8765  004FE4  EC8C  F01C         	call	___ftadd	;wreg free
  8766  004FE8  C100  F11E         	movff	?___ftadd,readTempF@temp
  8767  004FEC  C101  F11F         	movff	?___ftadd+1,readTempF@temp+1
  8768  004FF0  C102  F120         	movff	?___ftadd+2,readTempF@temp+2
  8769                           
  8770                           ;functions.c: 165: return temp;
  8771  004FF4  C11E  F11B         	movff	readTempF@temp,?_readTempF
  8772  004FF8  C11F  F11C         	movff	readTempF@temp+1,?_readTempF+1
  8773  004FFC  C120  F11D         	movff	readTempF@temp+2,?_readTempF+2
  8774  005000  0012               	return	
  8775  005002                     __end_of_readTempF:
  8776                           	opt stack 0
  8777                           tblptru	equ	0xFF8
  8778                           tblptrh	equ	0xFF7
  8779                           tblptrl	equ	0xFF6
  8780                           tablat	equ	0xFF5
  8781                           prodh	equ	0xFF4
  8782                           prodl	equ	0xFF3
  8783                           intcon	equ	0xFF2
  8784                           wreg	equ	0xFE8
  8785                           indf2	equ	0xFDF
  8786                           postinc2	equ	0xFDE
  8787                           postdec2	equ	0xFDD
  8788                           fsr2h	equ	0xFDA
  8789                           fsr2l	equ	0xFD9
  8790                           status	equ	0xFD8
  8791                           
  8792 ;; *************** function _read *****************
  8793 ;; Defined at:
  8794 ;;		line 17 in file "functions.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  channel         2   61[BANK0 ] int 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  value           2   65[BANK0 ] int 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  2   61[BANK0 ] int 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8808 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8810 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8811 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;Total ram usage:        6 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    7
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_readTempF
  8819 ;;		_readLight
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text22
  8824  0060A0                     __ptext22:
  8825                           	opt stack 0
  8826  0060A0                     _read:
  8827                           	opt stack 20
  8828                           
  8829                           ;functions.c: 18: int value = 0;
  8830                           
  8831                           ;incstack = 0
  8832  0060A0  0E00               	movlw	0
  8833  0060A2  0100               	movlb	0	; () banked
  8834  0060A4  0100               	movlb	0	; () banked
  8835  0060A6  6FA2               	movwf	(read@value+1)& (0+255),b
  8836  0060A8  0E00               	movlw	0
  8837  0060AA  0100               	movlb	0	; () banked
  8838  0060AC  6FA1               	movwf	read@value& (0+255),b
  8839                           
  8840                           ;functions.c: 19: switch (channel) {
  8841  0060AE  D02C               	goto	l6495
  8842  0060B0                     l109:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;functions.c: 21: ADCON0bits.CHS0 = 0;
  8846  0060B0  94C2               	bcf	4034,2,c	;volatile
  8847                           
  8848                           ;functions.c: 22: ADCON0bits.CHS1 = 0;
  8849  0060B2  96C2               	bcf	4034,3,c	;volatile
  8850                           
  8851                           ;functions.c: 23: ADCON0bits.CHS2 = 0;
  8852  0060B4  98C2               	bcf	4034,4,c	;volatile
  8853                           
  8854                           ;functions.c: 24: ADCON0bits.CHS3 = 0;
  8855  0060B6  9AC2               	bcf	4034,5,c	;volatile
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;functions.c: 26: ANCON0 &= 0b11111110;
  8859  0060B8  010F               	movlb	15	; () banked
  8860  0060BA  010F               	movlb	15	; () banked
  8861  0060BC  9148               	bcf	72,0,b	;volatile
  8862  0060BE  D01F               	goto	L13
  8863  0060C0                     l111:
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;functions.c: 31: ADCON0bits.CHS0 = 1;
  8867  0060C0  84C2               	bsf	4034,2,c	;volatile
  8868                           
  8869                           ;functions.c: 32: ADCON0bits.CHS1 = 0;
  8870  0060C2  96C2               	bcf	4034,3,c	;volatile
  8871                           
  8872                           ;functions.c: 33: ADCON0bits.CHS2 = 0;
  8873  0060C4  98C2               	bcf	4034,4,c	;volatile
  8874                           
  8875                           ;functions.c: 34: ADCON0bits.CHS3 = 0;
  8876  0060C6  9AC2               	bcf	4034,5,c	;volatile
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;functions.c: 36: ANCON0 &= 0b11111101;
  8880  0060C8  010F               	movlb	15	; () banked
  8881  0060CA  010F               	movlb	15	; () banked
  8882  0060CC  9348               	bcf	72,1,b	;volatile
  8883  0060CE  D017               	goto	L13
  8884  0060D0                     l112:
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;functions.c: 41: ADCON0bits.CHS0 = 0;
  8888  0060D0  94C2               	bcf	4034,2,c	;volatile
  8889                           
  8890                           ;functions.c: 42: ADCON0bits.CHS1 = 1;
  8891  0060D2  86C2               	bsf	4034,3,c	;volatile
  8892                           
  8893                           ;functions.c: 43: ADCON0bits.CHS2 = 0;
  8894  0060D4  98C2               	bcf	4034,4,c	;volatile
  8895                           
  8896                           ;functions.c: 44: ADCON0bits.CHS3 = 0;
  8897  0060D6  9AC2               	bcf	4034,5,c	;volatile
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;functions.c: 46: ANCON0 &= 0b11111011;
  8901  0060D8  010F               	movlb	15	; () banked
  8902  0060DA  010F               	movlb	15	; () banked
  8903  0060DC  9548               	bcf	72,2,b	;volatile
  8904  0060DE  D00F               	goto	L13
  8905  0060E0                     l113:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;functions.c: 50: ADCON0bits.CHS0 = 1;
  8909  0060E0  84C2               	bsf	4034,2,c	;volatile
  8910                           
  8911                           ;functions.c: 51: ADCON0bits.CHS1 = 1;
  8912  0060E2  86C2               	bsf	4034,3,c	;volatile
  8913                           
  8914                           ;functions.c: 52: ADCON0bits.CHS2 = 0;
  8915  0060E4  98C2               	bcf	4034,4,c	;volatile
  8916                           
  8917                           ;functions.c: 53: ADCON0bits.CHS3 = 0;
  8918  0060E6  9AC2               	bcf	4034,5,c	;volatile
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;functions.c: 55: ANCON0 &= 0b11110111;
  8922  0060E8  010F               	movlb	15	; () banked
  8923  0060EA  010F               	movlb	15	; () banked
  8924  0060EC  9748               	bcf	72,3,b	;volatile
  8925  0060EE  D007               	goto	L13
  8926  0060F0                     l114:
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;functions.c: 59: ADCON0bits.CHS0 = 1;
  8930  0060F0  84C2               	bsf	4034,2,c	;volatile
  8931                           
  8932                           ;functions.c: 60: ADCON0bits.CHS1 = 1;
  8933  0060F2  86C2               	bsf	4034,3,c	;volatile
  8934                           
  8935                           ;functions.c: 61: ADCON0bits.CHS2 = 1;
  8936  0060F4  88C2               	bsf	4034,4,c	;volatile
  8937                           
  8938                           ;functions.c: 62: ADCON0bits.CHS3 = 0;
  8939  0060F6  9AC2               	bcf	4034,5,c	;volatile
  8940                           
  8941                           ; BSR set to: 0
  8942                           ;functions.c: 64: ANCON0 &= 0b01111111;
  8943  0060F8  010F               	movlb	15	; () banked
  8944  0060FA  010F               	movlb	15	; () banked
  8945  0060FC  9F48               	bcf	72,7,b	;volatile
  8946  0060FE                     L13:
  8947                           
  8948                           ; BSR set to: 15
  8949                           ;functions.c: 65: ANCON1 |= 0b00001111;
  8950  0060FE  0E0F               	movlw	15
  8951  006100  010F               	movlb	15	; () banked
  8952  006102  010F               	movlb	15	; () banked
  8953  006104  1349               	iorwf	73,f,b	;volatile
  8954                           
  8955                           ;functions.c: 66: break;
  8956  006106  D01C               	goto	l110
  8957  006108                     l6495:
  8958  006108  0100               	movlb	0	; () banked
  8959  00610A  C09D  F09F         	movff	read@channel,??_read
  8960  00610E  0100               	movlb	0	; () banked
  8961  006110  C09E  F0A0         	movff	read@channel+1,??_read+1
  8962                           
  8963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8964                           ; Switch size 1, requested type "space"
  8965                           ; Number of cases is 1, Range of values is 0 to 0
  8966                           ; switch strategies available:
  8967                           ; Name         Instructions Cycles
  8968                           ; simple_byte            4     3 (average)
  8969                           ;	Chosen strategy is simple_byte
  8970  006114  0100               	movlb	0	; () banked
  8971  006116  51A0               	movf	(??_read+1)& (0+255),w,b
  8972  006118  0A00               	xorlw	0	; case 0
  8973  00611A  A4D8               	btfss	status,2,c
  8974  00611C  D011               	goto	l110
  8975                           
  8976                           ; BSR set to: 0
  8977                           ; Switch size 1, requested type "space"
  8978                           ; Number of cases is 5, Range of values is 0 to 4
  8979                           ; switch strategies available:
  8980                           ; Name         Instructions Cycles
  8981                           ; simple_byte           16     9 (average)
  8982                           ;	Chosen strategy is simple_byte
  8983  00611E  0100               	movlb	0	; () banked
  8984  006120  519F               	movf	??_read& (0+255),w,b
  8985  006122  0A00               	xorlw	0	; case 0
  8986  006124  B4D8               	btfsc	status,2,c
  8987  006126  D7C4               	goto	l109
  8988  006128  0A01               	xorlw	1	; case 1
  8989  00612A  B4D8               	btfsc	status,2,c
  8990  00612C  D7C9               	goto	l111
  8991  00612E  0A03               	xorlw	3	; case 2
  8992  006130  B4D8               	btfsc	status,2,c
  8993  006132  D7CE               	goto	l112
  8994  006134  0A01               	xorlw	1	; case 3
  8995  006136  B4D8               	btfsc	status,2,c
  8996  006138  D7D3               	goto	l113
  8997  00613A  0A07               	xorlw	7	; case 4
  8998  00613C  B4D8               	btfsc	status,2,c
  8999  00613E  D7D8               	goto	l114
  9000  006140                     l110:
  9001                           
  9002                           ;functions.c: 69: ADCON0bits.VCFG0 = 0;
  9003  006140  9CC2               	bcf	4034,6,c	;volatile
  9004                           
  9005                           ;functions.c: 70: ADCON0bits.VCFG1 = 0;
  9006  006142  9EC2               	bcf	4034,7,c	;volatile
  9007                           
  9008                           ;functions.c: 72: ADCON1bits.ADFM = 1;
  9009  006144  8EC1               	bsf	4033,7,c	;volatile
  9010                           
  9011                           ;functions.c: 74: ADCON1bits.ACQT0 = 0;
  9012  006146  96C1               	bcf	4033,3,c	;volatile
  9013                           
  9014                           ;functions.c: 75: ADCON1bits.ACQT1 = 1;
  9015  006148  88C1               	bsf	4033,4,c	;volatile
  9016                           
  9017                           ;functions.c: 76: ADCON1bits.ACQT2 = 1;
  9018  00614A  8AC1               	bsf	4033,5,c	;volatile
  9019                           
  9020                           ;functions.c: 78: ADCON1bits.ADCS0 = 0;
  9021  00614C  90C1               	bcf	4033,0,c	;volatile
  9022                           
  9023                           ;functions.c: 79: ADCON1bits.ADCS1 = 0;
  9024  00614E  92C1               	bcf	4033,1,c	;volatile
  9025                           
  9026                           ;functions.c: 80: ADCON1bits.ADCS2 = 0;
  9027  006150  94C1               	bcf	4033,2,c	;volatile
  9028                           
  9029                           ;functions.c: 82: ADCON0bits.ADON = 1;
  9030  006152  80C2               	bsf	4034,0,c	;volatile
  9031                           
  9032                           ;functions.c: 83: GO_DONE = 1;
  9033  006154  82C2               	bsf	4034,1,c	;volatile
  9034  006156                     l115:
  9035  006156  B2C2               	btfsc	4034,1,c	;volatile
  9036  006158  D7FE               	goto	l115
  9037                           
  9038                           ;functions.c: 85: value = ((ADRESH << 8) + ADRESL);
  9039  00615A  50C4               	movf	4036,w,c	;volatile
  9040  00615C  0100               	movlb	0	; () banked
  9041  00615E  6FA0               	movwf	(??_read+1)& (0+255),b
  9042  006160  6B9F               	clrf	??_read& (0+255),b
  9043  006162  50C3               	movf	4035,w,c	;volatile
  9044  006164  0100               	movlb	0	; () banked
  9045  006166  259F               	addwf	??_read& (0+255),w,b
  9046  006168  0100               	movlb	0	; () banked
  9047  00616A  0100               	movlb	0	; () banked
  9048  00616C  6FA1               	movwf	read@value& (0+255),b
  9049  00616E  0E00               	movlw	0
  9050  006170  0100               	movlb	0	; () banked
  9051  006172  21A0               	addwfc	(??_read+1)& (0+255),w,b
  9052  006174  0100               	movlb	0	; () banked
  9053  006176  6FA2               	movwf	(read@value+1)& (0+255),b
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;functions.c: 87: ADCON0bits.ADON = 0;
  9057  006178  90C2               	bcf	4034,0,c	;volatile
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;functions.c: 89: return value;
  9061  00617A  C0A1  F09D         	movff	read@value,?_read
  9062  00617E  C0A2  F09E         	movff	read@value+1,?_read+1
  9063  006182  0012               	return	
  9064  006184                     __end_of_read:
  9065                           	opt stack 0
  9066                           tblptru	equ	0xFF8
  9067                           tblptrh	equ	0xFF7
  9068                           tblptrl	equ	0xFF6
  9069                           tablat	equ	0xFF5
  9070                           prodh	equ	0xFF4
  9071                           prodl	equ	0xFF3
  9072                           intcon	equ	0xFF2
  9073                           wreg	equ	0xFE8
  9074                           indf2	equ	0xFDF
  9075                           postinc2	equ	0xFDE
  9076                           postdec2	equ	0xFDD
  9077                           fsr2h	equ	0xFDA
  9078                           fsr2l	equ	0xFD9
  9079                           status	equ	0xFD8
  9080                           
  9081 ;; *************** function ___ftmul *****************
  9082 ;; Defined at:
  9083 ;;		line 51 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftmul.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;  f1              3   83[BANK0 ] float 
  9086 ;;  f2              3   86[BANK0 ] float 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;  f3_as_produc    3   93[BANK0 ] unsigned um
  9089 ;;  sign            1   97[BANK0 ] unsigned char 
  9090 ;;  cntr            1   96[BANK0 ] unsigned char 
  9091 ;;  exp             1   92[BANK0 ] unsigned char 
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  3   83[BANK0 ] float 
  9094 ;; Registers used:
  9095 ;;		wreg, status,2, status,0, cstack
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9101 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9102 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;Total ram usage:       15 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; Hardware stack levels required when called:    8
  9108 ;; This function calls:
  9109 ;;		___ftpack
  9110 ;; This function is called by:
  9111 ;;		_readDistance
  9112 ;;		_readTempF
  9113 ;;		_fround
  9114 ;;		_scale
  9115 ;;		_sprintf
  9116 ;;		___asftmul
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           	psect	text23
  9121  004790                     __ptext23:
  9122                           	opt stack 0
  9123  004790                     ___ftmul:
  9124                           	opt stack 19
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;incstack = 0
  9128  004790  0100               	movlb	0	; () banked
  9129  004792  C0B5  F0B9         	movff	___ftmul@f1+2,??___ftmul
  9130  004796  0100               	movlb	0	; () banked
  9131  004798  6BBA               	clrf	(??___ftmul+1)& (0+255),b
  9132  00479A  6BBB               	clrf	(??___ftmul+2)& (0+255),b
  9133  00479C  0100               	movlb	0	; () banked
  9134  00479E  0100               	movlb	0	; () banked
  9135  0047A0  35B4               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9136  0047A2  0100               	movlb	0	; () banked
  9137  0047A4  37B9               	rlcf	??___ftmul& (0+255),f,b
  9138  0047A6  E301               	bnc	u4391
  9139  0047A8  81BA               	bsf	(??___ftmul+1)& (0+255),0,b
  9140  0047AA                     u4391:
  9141  0047AA  0100               	movlb	0	; () banked
  9142  0047AC  51B9               	movf	??___ftmul& (0+255),w,b
  9143  0047AE  0100               	movlb	0	; () banked
  9144  0047B0  0100               	movlb	0	; () banked
  9145  0047B2  6FBC               	movwf	___ftmul@exp& (0+255),b
  9146  0047B4  0100               	movlb	0	; () banked
  9147  0047B6  67BC               	tstfsz	___ftmul@exp& (0+255),b
  9148  0047B8  D00D               	goto	l6565
  9149                           
  9150                           ; BSR set to: 0
  9151  0047BA  0E00               	movlw	0
  9152  0047BC  0100               	movlb	0	; () banked
  9153  0047BE  0100               	movlb	0	; () banked
  9154  0047C0  6FB3               	movwf	?___ftmul& (0+255),b
  9155  0047C2  0E00               	movlw	0
  9156  0047C4  0100               	movlb	0	; () banked
  9157  0047C6  0100               	movlb	0	; () banked
  9158  0047C8  6FB4               	movwf	(?___ftmul+1)& (0+255),b
  9159  0047CA  0E00               	movlw	0
  9160  0047CC  0100               	movlb	0	; () banked
  9161  0047CE  0100               	movlb	0	; () banked
  9162  0047D0  6FB5               	movwf	(?___ftmul+2)& (0+255),b
  9163  0047D2  0012               	return	
  9164  0047D4                     l6565:
  9165                           
  9166                           ; BSR set to: 0
  9167  0047D4  0100               	movlb	0	; () banked
  9168  0047D6  C0B8  F0B9         	movff	___ftmul@f2+2,??___ftmul
  9169  0047DA  0100               	movlb	0	; () banked
  9170  0047DC  6BBA               	clrf	(??___ftmul+1)& (0+255),b
  9171  0047DE  6BBB               	clrf	(??___ftmul+2)& (0+255),b
  9172  0047E0  0100               	movlb	0	; () banked
  9173  0047E2  0100               	movlb	0	; () banked
  9174  0047E4  35B7               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9175  0047E6  0100               	movlb	0	; () banked
  9176  0047E8  37B9               	rlcf	??___ftmul& (0+255),f,b
  9177  0047EA  E301               	bnc	u4411
  9178  0047EC  81BA               	bsf	(??___ftmul+1)& (0+255),0,b
  9179  0047EE                     u4411:
  9180  0047EE  0100               	movlb	0	; () banked
  9181  0047F0  51B9               	movf	??___ftmul& (0+255),w,b
  9182  0047F2  0100               	movlb	0	; () banked
  9183  0047F4  0100               	movlb	0	; () banked
  9184  0047F6  6FC1               	movwf	___ftmul@sign& (0+255),b
  9185  0047F8  0100               	movlb	0	; () banked
  9186  0047FA  67C1               	tstfsz	___ftmul@sign& (0+255),b
  9187  0047FC  D00D               	goto	l6571
  9188                           
  9189                           ; BSR set to: 0
  9190  0047FE  0E00               	movlw	0
  9191  004800  0100               	movlb	0	; () banked
  9192  004802  0100               	movlb	0	; () banked
  9193  004804  6FB3               	movwf	?___ftmul& (0+255),b
  9194  004806  0E00               	movlw	0
  9195  004808  0100               	movlb	0	; () banked
  9196  00480A  0100               	movlb	0	; () banked
  9197  00480C  6FB4               	movwf	(?___ftmul+1)& (0+255),b
  9198  00480E  0E00               	movlw	0
  9199  004810  0100               	movlb	0	; () banked
  9200  004812  0100               	movlb	0	; () banked
  9201  004814  6FB5               	movwf	(?___ftmul+2)& (0+255),b
  9202  004816  0012               	return	
  9203  004818                     l6571:
  9204                           
  9205                           ; BSR set to: 0
  9206  004818  0100               	movlb	0	; () banked
  9207  00481A  0100               	movlb	0	; () banked
  9208  00481C  51C1               	movf	___ftmul@sign& (0+255),w,b
  9209  00481E  0F7B               	addlw	123
  9210  004820  0100               	movlb	0	; () banked
  9211  004822  0100               	movlb	0	; () banked
  9212  004824  27BC               	addwf	___ftmul@exp& (0+255),f,b
  9213                           
  9214                           ; BSR set to: 0
  9215  004826  C0B5  F0C1         	movff	___ftmul@f1+2,___ftmul@sign
  9216  00482A  0100               	movlb	0	; () banked
  9217  00482C  0100               	movlb	0	; () banked
  9218  00482E  51B8               	movf	(___ftmul@f2+2)& (0+255),w,b
  9219  004830  0100               	movlb	0	; () banked
  9220  004832  0100               	movlb	0	; () banked
  9221  004834  1BC1               	xorwf	___ftmul@sign& (0+255),f,b
  9222  004836  0E80               	movlw	128
  9223  004838  0100               	movlb	0	; () banked
  9224  00483A  0100               	movlb	0	; () banked
  9225  00483C  17C1               	andwf	___ftmul@sign& (0+255),f,b
  9226                           
  9227                           ; BSR set to: 0
  9228  00483E  0100               	movlb	0	; () banked
  9229  004840  0100               	movlb	0	; () banked
  9230  004842  8FB4               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9231                           
  9232                           ; BSR set to: 0
  9233  004844  0100               	movlb	0	; () banked
  9234  004846  0100               	movlb	0	; () banked
  9235  004848  8FB7               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9236                           
  9237                           ; BSR set to: 0
  9238  00484A  0EFF               	movlw	255
  9239  00484C  0100               	movlb	0	; () banked
  9240  00484E  0100               	movlb	0	; () banked
  9241  004850  17B6               	andwf	___ftmul@f2& (0+255),f,b
  9242  004852  0EFF               	movlw	255
  9243  004854  0100               	movlb	0	; () banked
  9244  004856  0100               	movlb	0	; () banked
  9245  004858  17B7               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9246  00485A  0E00               	movlw	0
  9247  00485C  0100               	movlb	0	; () banked
  9248  00485E  0100               	movlb	0	; () banked
  9249  004860  17B8               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9250                           
  9251                           ; BSR set to: 0
  9252  004862  0E00               	movlw	0
  9253  004864  0100               	movlb	0	; () banked
  9254  004866  0100               	movlb	0	; () banked
  9255  004868  6FBD               	movwf	___ftmul@f3_as_product& (0+255),b
  9256  00486A  0E00               	movlw	0
  9257  00486C  0100               	movlb	0	; () banked
  9258  00486E  0100               	movlb	0	; () banked
  9259  004870  6FBE               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9260  004872  0E00               	movlw	0
  9261  004874  0100               	movlb	0	; () banked
  9262  004876  0100               	movlb	0	; () banked
  9263  004878  6FBF               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9264                           
  9265                           ; BSR set to: 0
  9266  00487A  0100               	movlb	0	; () banked
  9267  00487C  6FB9               	movwf	??___ftmul& (0+255),b
  9268  00487E  0E07               	movlw	7
  9269  004880  0100               	movlb	0	; () banked
  9270  004882  0100               	movlb	0	; () banked
  9271  004884  6FC0               	movwf	___ftmul@cntr& (0+255),b
  9272  004886  0100               	movlb	0	; () banked
  9273  004888  51B9               	movf	??___ftmul& (0+255),w,b
  9274  00488A                     l6585:
  9275                           
  9276                           ; BSR set to: 0
  9277  00488A  0100               	movlb	0	; () banked
  9278  00488C  0100               	movlb	0	; () banked
  9279  00488E  A1B3               	btfss	___ftmul@f1& (0+255),0,b
  9280  004890  D012               	goto	l6589
  9281                           
  9282                           ; BSR set to: 0
  9283  004892  0100               	movlb	0	; () banked
  9284  004894  0100               	movlb	0	; () banked
  9285  004896  51B6               	movf	___ftmul@f2& (0+255),w,b
  9286  004898  0100               	movlb	0	; () banked
  9287  00489A  0100               	movlb	0	; () banked
  9288  00489C  27BD               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9289  00489E  0100               	movlb	0	; () banked
  9290  0048A0  0100               	movlb	0	; () banked
  9291  0048A2  51B7               	movf	(___ftmul@f2+1)& (0+255),w,b
  9292  0048A4  0100               	movlb	0	; () banked
  9293  0048A6  0100               	movlb	0	; () banked
  9294  0048A8  23BE               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9295  0048AA  0100               	movlb	0	; () banked
  9296  0048AC  0100               	movlb	0	; () banked
  9297  0048AE  51B8               	movf	(___ftmul@f2+2)& (0+255),w,b
  9298  0048B0  0100               	movlb	0	; () banked
  9299  0048B2  0100               	movlb	0	; () banked
  9300  0048B4  23BF               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9301  0048B6                     l6589:
  9302                           
  9303                           ; BSR set to: 0
  9304  0048B6  0100               	movlb	0	; () banked
  9305  0048B8  90D8               	bcf	status,0,c
  9306  0048BA  0100               	movlb	0	; () banked
  9307  0048BC  33B5               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9308  0048BE  0100               	movlb	0	; () banked
  9309  0048C0  33B4               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9310  0048C2  0100               	movlb	0	; () banked
  9311  0048C4  33B3               	rrcf	___ftmul@f1& (0+255),f,b
  9312  0048C6  0100               	movlb	0	; () banked
  9313  0048C8  90D8               	bcf	status,0,c
  9314  0048CA  0100               	movlb	0	; () banked
  9315  0048CC  37B6               	rlcf	___ftmul@f2& (0+255),f,b
  9316  0048CE  0100               	movlb	0	; () banked
  9317  0048D0  37B7               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9318  0048D2  0100               	movlb	0	; () banked
  9319  0048D4  37B8               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9320                           
  9321                           ; BSR set to: 0
  9322  0048D6  0100               	movlb	0	; () banked
  9323  0048D8  0100               	movlb	0	; () banked
  9324  0048DA  2FC0               	decfsz	___ftmul@cntr& (0+255),f,b
  9325  0048DC  D7D6               	goto	l6585
  9326                           
  9327                           ; BSR set to: 0
  9328                           
  9329                           ; BSR set to: 0
  9330  0048DE  0100               	movlb	0	; () banked
  9331  0048E0  6FB9               	movwf	??___ftmul& (0+255),b
  9332  0048E2  0E09               	movlw	9
  9333  0048E4  0100               	movlb	0	; () banked
  9334  0048E6  0100               	movlb	0	; () banked
  9335  0048E8  6FC0               	movwf	___ftmul@cntr& (0+255),b
  9336  0048EA  0100               	movlb	0	; () banked
  9337  0048EC  51B9               	movf	??___ftmul& (0+255),w,b
  9338  0048EE                     l6595:
  9339                           
  9340                           ; BSR set to: 0
  9341  0048EE  0100               	movlb	0	; () banked
  9342  0048F0  0100               	movlb	0	; () banked
  9343  0048F2  A1B3               	btfss	___ftmul@f1& (0+255),0,b
  9344  0048F4  D012               	goto	l6599
  9345                           
  9346                           ; BSR set to: 0
  9347  0048F6  0100               	movlb	0	; () banked
  9348  0048F8  0100               	movlb	0	; () banked
  9349  0048FA  51B6               	movf	___ftmul@f2& (0+255),w,b
  9350  0048FC  0100               	movlb	0	; () banked
  9351  0048FE  0100               	movlb	0	; () banked
  9352  004900  27BD               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9353  004902  0100               	movlb	0	; () banked
  9354  004904  0100               	movlb	0	; () banked
  9355  004906  51B7               	movf	(___ftmul@f2+1)& (0+255),w,b
  9356  004908  0100               	movlb	0	; () banked
  9357  00490A  0100               	movlb	0	; () banked
  9358  00490C  23BE               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9359  00490E  0100               	movlb	0	; () banked
  9360  004910  0100               	movlb	0	; () banked
  9361  004912  51B8               	movf	(___ftmul@f2+2)& (0+255),w,b
  9362  004914  0100               	movlb	0	; () banked
  9363  004916  0100               	movlb	0	; () banked
  9364  004918  23BF               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9365  00491A                     l6599:
  9366                           
  9367                           ; BSR set to: 0
  9368  00491A  0100               	movlb	0	; () banked
  9369  00491C  90D8               	bcf	status,0,c
  9370  00491E  0100               	movlb	0	; () banked
  9371  004920  33B5               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9372  004922  0100               	movlb	0	; () banked
  9373  004924  33B4               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9374  004926  0100               	movlb	0	; () banked
  9375  004928  33B3               	rrcf	___ftmul@f1& (0+255),f,b
  9376  00492A  0100               	movlb	0	; () banked
  9377  00492C  90D8               	bcf	status,0,c
  9378  00492E  0100               	movlb	0	; () banked
  9379  004930  33BF               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9380  004932  0100               	movlb	0	; () banked
  9381  004934  33BE               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9382  004936  0100               	movlb	0	; () banked
  9383  004938  33BD               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9384                           
  9385                           ; BSR set to: 0
  9386  00493A  0100               	movlb	0	; () banked
  9387  00493C  0100               	movlb	0	; () banked
  9388  00493E  2FC0               	decfsz	___ftmul@cntr& (0+255),f,b
  9389  004940  D7D6               	goto	l6595
  9390                           
  9391                           ; BSR set to: 0
  9392                           
  9393                           ; BSR set to: 0
  9394  004942  C0BD  F09D         	movff	___ftmul@f3_as_product,___ftpack@arg
  9395  004946  C0BE  F09E         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9396  00494A  C0BF  F09F         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9397  00494E  C0BC  F0A0         	movff	___ftmul@exp,___ftpack@exp
  9398  004952  C0C1  F0A1         	movff	___ftmul@sign,___ftpack@sign
  9399  004956  EC59  F029         	call	___ftpack	;wreg free
  9400  00495A  C09D  F0B3         	movff	?___ftpack,?___ftmul
  9401  00495E  C09E  F0B4         	movff	?___ftpack+1,?___ftmul+1
  9402  004962  C09F  F0B5         	movff	?___ftpack+2,?___ftmul+2
  9403  004966  0012               	return	
  9404  004968                     __end_of___ftmul:
  9405                           	opt stack 0
  9406                           tblptru	equ	0xFF8
  9407                           tblptrh	equ	0xFF7
  9408                           tblptrl	equ	0xFF6
  9409                           tablat	equ	0xFF5
  9410                           prodh	equ	0xFF4
  9411                           prodl	equ	0xFF3
  9412                           intcon	equ	0xFF2
  9413                           wreg	equ	0xFE8
  9414                           indf2	equ	0xFDF
  9415                           postinc2	equ	0xFDE
  9416                           postdec2	equ	0xFDD
  9417                           fsr2h	equ	0xFDA
  9418                           fsr2l	equ	0xFD9
  9419                           status	equ	0xFD8
  9420                           
  9421 ;; *************** function ___ftdiv *****************
  9422 ;; Defined at:
  9423 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftdiv.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;  f1              3   12[BANK1 ] float 
  9426 ;;  f2              3   15[BANK1 ] float 
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;  f3              3   22[BANK1 ] float 
  9429 ;;  sign            1   26[BANK1 ] unsigned char 
  9430 ;;  exp             1   25[BANK1 ] unsigned char 
  9431 ;;  cntr            1   21[BANK1 ] unsigned char 
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  3   12[BANK1 ] float 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0, cstack
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9441 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9442 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9443 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9444 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9445 ;;Total ram usage:       15 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:    8
  9448 ;; This function calls:
  9449 ;;		___ftpack
  9450 ;; This function is called by:
  9451 ;;		_readDistance
  9452 ;;		_readTempF
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text24
  9457  004B20                     __ptext24:
  9458                           	opt stack 0
  9459  004B20                     ___ftdiv:
  9460                           	opt stack 19
  9461                           
  9462                           ;incstack = 0
  9463  004B20  0101               	movlb	1	; () banked
  9464  004B22  C10E  F112         	movff	___ftdiv@f1+2,??___ftdiv
  9465  004B26  0101               	movlb	1	; () banked
  9466  004B28  6B13               	clrf	(??___ftdiv+1)& (0+255),b
  9467  004B2A  6B14               	clrf	(??___ftdiv+2)& (0+255),b
  9468  004B2C  0101               	movlb	1	; () banked
  9469  004B2E  0101               	movlb	1	; () banked
  9470  004B30  350D               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  9471  004B32  0101               	movlb	1	; () banked
  9472  004B34  3712               	rlcf	??___ftdiv& (0+255),f,b
  9473  004B36  E301               	bnc	u4341
  9474  004B38  8113               	bsf	(??___ftdiv+1)& (0+255),0,b
  9475  004B3A                     u4341:
  9476  004B3A  0101               	movlb	1	; () banked
  9477  004B3C  5112               	movf	??___ftdiv& (0+255),w,b
  9478  004B3E  0101               	movlb	1	; () banked
  9479  004B40  0101               	movlb	1	; () banked
  9480  004B42  6F19               	movwf	___ftdiv@exp& (0+255),b
  9481  004B44  0101               	movlb	1	; () banked
  9482  004B46  6719               	tstfsz	___ftdiv@exp& (0+255),b
  9483  004B48  D00D               	goto	l6521
  9484                           
  9485                           ; BSR set to: 1
  9486  004B4A  0E00               	movlw	0
  9487  004B4C  0101               	movlb	1	; () banked
  9488  004B4E  0101               	movlb	1	; () banked
  9489  004B50  6F0C               	movwf	?___ftdiv& (0+255),b
  9490  004B52  0E00               	movlw	0
  9491  004B54  0101               	movlb	1	; () banked
  9492  004B56  0101               	movlb	1	; () banked
  9493  004B58  6F0D               	movwf	(?___ftdiv+1)& (0+255),b
  9494  004B5A  0E00               	movlw	0
  9495  004B5C  0101               	movlb	1	; () banked
  9496  004B5E  0101               	movlb	1	; () banked
  9497  004B60  6F0E               	movwf	(?___ftdiv+2)& (0+255),b
  9498  004B62  0012               	return	
  9499  004B64                     l6521:
  9500                           
  9501                           ; BSR set to: 1
  9502  004B64  0101               	movlb	1	; () banked
  9503  004B66  C111  F112         	movff	___ftdiv@f2+2,??___ftdiv
  9504  004B6A  0101               	movlb	1	; () banked
  9505  004B6C  6B13               	clrf	(??___ftdiv+1)& (0+255),b
  9506  004B6E  6B14               	clrf	(??___ftdiv+2)& (0+255),b
  9507  004B70  0101               	movlb	1	; () banked
  9508  004B72  0101               	movlb	1	; () banked
  9509  004B74  3510               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  9510  004B76  0101               	movlb	1	; () banked
  9511  004B78  3712               	rlcf	??___ftdiv& (0+255),f,b
  9512  004B7A  E301               	bnc	u4361
  9513  004B7C  8113               	bsf	(??___ftdiv+1)& (0+255),0,b
  9514  004B7E                     u4361:
  9515  004B7E  0101               	movlb	1	; () banked
  9516  004B80  5112               	movf	??___ftdiv& (0+255),w,b
  9517  004B82  0101               	movlb	1	; () banked
  9518  004B84  0101               	movlb	1	; () banked
  9519  004B86  6F1A               	movwf	___ftdiv@sign& (0+255),b
  9520  004B88  0101               	movlb	1	; () banked
  9521  004B8A  671A               	tstfsz	___ftdiv@sign& (0+255),b
  9522  004B8C  D00D               	goto	l6527
  9523                           
  9524                           ; BSR set to: 1
  9525  004B8E  0E00               	movlw	0
  9526  004B90  0101               	movlb	1	; () banked
  9527  004B92  0101               	movlb	1	; () banked
  9528  004B94  6F0C               	movwf	?___ftdiv& (0+255),b
  9529  004B96  0E00               	movlw	0
  9530  004B98  0101               	movlb	1	; () banked
  9531  004B9A  0101               	movlb	1	; () banked
  9532  004B9C  6F0D               	movwf	(?___ftdiv+1)& (0+255),b
  9533  004B9E  0E00               	movlw	0
  9534  004BA0  0101               	movlb	1	; () banked
  9535  004BA2  0101               	movlb	1	; () banked
  9536  004BA4  6F0E               	movwf	(?___ftdiv+2)& (0+255),b
  9537  004BA6  0012               	return	
  9538  004BA8                     l6527:
  9539                           
  9540                           ; BSR set to: 1
  9541  004BA8  0E00               	movlw	0
  9542  004BAA  0101               	movlb	1	; () banked
  9543  004BAC  0101               	movlb	1	; () banked
  9544  004BAE  6F16               	movwf	___ftdiv@f3& (0+255),b
  9545  004BB0  0E00               	movlw	0
  9546  004BB2  0101               	movlb	1	; () banked
  9547  004BB4  0101               	movlb	1	; () banked
  9548  004BB6  6F17               	movwf	(___ftdiv@f3+1)& (0+255),b
  9549  004BB8  0E00               	movlw	0
  9550  004BBA  0101               	movlb	1	; () banked
  9551  004BBC  0101               	movlb	1	; () banked
  9552  004BBE  6F18               	movwf	(___ftdiv@f3+2)& (0+255),b
  9553                           
  9554                           ; BSR set to: 1
  9555  004BC0  0101               	movlb	1	; () banked
  9556  004BC2  0101               	movlb	1	; () banked
  9557  004BC4  511A               	movf	___ftdiv@sign& (0+255),w,b
  9558  004BC6  0F89               	addlw	137
  9559  004BC8  0101               	movlb	1	; () banked
  9560  004BCA  0101               	movlb	1	; () banked
  9561  004BCC  5F19               	subwf	___ftdiv@exp& (0+255),f,b
  9562                           
  9563                           ; BSR set to: 1
  9564  004BCE  C10E  F11A         	movff	___ftdiv@f1+2,___ftdiv@sign
  9565                           
  9566                           ; BSR set to: 1
  9567  004BD2  0101               	movlb	1	; () banked
  9568  004BD4  0101               	movlb	1	; () banked
  9569  004BD6  5111               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9570  004BD8  0101               	movlb	1	; () banked
  9571  004BDA  0101               	movlb	1	; () banked
  9572  004BDC  1B1A               	xorwf	___ftdiv@sign& (0+255),f,b
  9573                           
  9574                           ; BSR set to: 1
  9575  004BDE  0E80               	movlw	128
  9576  004BE0  0101               	movlb	1	; () banked
  9577  004BE2  0101               	movlb	1	; () banked
  9578  004BE4  171A               	andwf	___ftdiv@sign& (0+255),f,b
  9579                           
  9580                           ; BSR set to: 1
  9581  004BE6  0101               	movlb	1	; () banked
  9582  004BE8  0101               	movlb	1	; () banked
  9583  004BEA  8F0D               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  9584                           
  9585                           ; BSR set to: 1
  9586  004BEC  0EFF               	movlw	255
  9587  004BEE  0101               	movlb	1	; () banked
  9588  004BF0  0101               	movlb	1	; () banked
  9589  004BF2  170C               	andwf	___ftdiv@f1& (0+255),f,b
  9590  004BF4  0EFF               	movlw	255
  9591  004BF6  0101               	movlb	1	; () banked
  9592  004BF8  0101               	movlb	1	; () banked
  9593  004BFA  170D               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  9594  004BFC  0E00               	movlw	0
  9595  004BFE  0101               	movlb	1	; () banked
  9596  004C00  0101               	movlb	1	; () banked
  9597  004C02  170E               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  9598                           
  9599                           ; BSR set to: 1
  9600  004C04  0101               	movlb	1	; () banked
  9601  004C06  0101               	movlb	1	; () banked
  9602  004C08  8F10               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  9603                           
  9604                           ; BSR set to: 1
  9605  004C0A  0EFF               	movlw	255
  9606  004C0C  0101               	movlb	1	; () banked
  9607  004C0E  0101               	movlb	1	; () banked
  9608  004C10  170F               	andwf	___ftdiv@f2& (0+255),f,b
  9609  004C12  0EFF               	movlw	255
  9610  004C14  0101               	movlb	1	; () banked
  9611  004C16  0101               	movlb	1	; () banked
  9612  004C18  1710               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  9613  004C1A  0E00               	movlw	0
  9614  004C1C  0101               	movlb	1	; () banked
  9615  004C1E  0101               	movlb	1	; () banked
  9616  004C20  1711               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  9617                           
  9618                           ; BSR set to: 1
  9619  004C22  0101               	movlb	1	; () banked
  9620  004C24  6F12               	movwf	??___ftdiv& (0+255),b
  9621  004C26  0E18               	movlw	24
  9622  004C28  0101               	movlb	1	; () banked
  9623  004C2A  0101               	movlb	1	; () banked
  9624  004C2C  6F15               	movwf	___ftdiv@cntr& (0+255),b
  9625  004C2E  0101               	movlb	1	; () banked
  9626  004C30  5112               	movf	??___ftdiv& (0+255),w,b
  9627  004C32                     l750:
  9628                           
  9629                           ; BSR set to: 1
  9630  004C32  0101               	movlb	1	; () banked
  9631  004C34  90D8               	bcf	status,0,c
  9632  004C36  0101               	movlb	1	; () banked
  9633  004C38  3716               	rlcf	___ftdiv@f3& (0+255),f,b
  9634  004C3A  0101               	movlb	1	; () banked
  9635  004C3C  3717               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  9636  004C3E  0101               	movlb	1	; () banked
  9637  004C40  3718               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  9638                           
  9639                           ; BSR set to: 1
  9640  004C42  0101               	movlb	1	; () banked
  9641  004C44  0101               	movlb	1	; () banked
  9642  004C46  510F               	movf	___ftdiv@f2& (0+255),w,b
  9643  004C48  0101               	movlb	1	; () banked
  9644  004C4A  0101               	movlb	1	; () banked
  9645  004C4C  5D0C               	subwf	___ftdiv@f1& (0+255),w,b
  9646  004C4E  0101               	movlb	1	; () banked
  9647  004C50  0101               	movlb	1	; () banked
  9648  004C52  5110               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9649  004C54  0101               	movlb	1	; () banked
  9650  004C56  0101               	movlb	1	; () banked
  9651  004C58  590D               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  9652  004C5A  0101               	movlb	1	; () banked
  9653  004C5C  0101               	movlb	1	; () banked
  9654  004C5E  5111               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9655  004C60  0101               	movlb	1	; () banked
  9656  004C62  0101               	movlb	1	; () banked
  9657  004C64  590E               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  9658  004C66  A0D8               	btfss	status,0,c
  9659  004C68  D015               	goto	l751
  9660                           
  9661                           ; BSR set to: 1
  9662  004C6A  0101               	movlb	1	; () banked
  9663  004C6C  0101               	movlb	1	; () banked
  9664  004C6E  510F               	movf	___ftdiv@f2& (0+255),w,b
  9665  004C70  0101               	movlb	1	; () banked
  9666  004C72  0101               	movlb	1	; () banked
  9667  004C74  5F0C               	subwf	___ftdiv@f1& (0+255),f,b
  9668  004C76  0101               	movlb	1	; () banked
  9669  004C78  0101               	movlb	1	; () banked
  9670  004C7A  5110               	movf	(___ftdiv@f2+1)& (0+255),w,b
  9671  004C7C  0101               	movlb	1	; () banked
  9672  004C7E  0101               	movlb	1	; () banked
  9673  004C80  5B0D               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  9674  004C82  0101               	movlb	1	; () banked
  9675  004C84  0101               	movlb	1	; () banked
  9676  004C86  5111               	movf	(___ftdiv@f2+2)& (0+255),w,b
  9677  004C88  0101               	movlb	1	; () banked
  9678  004C8A  0101               	movlb	1	; () banked
  9679  004C8C  5B0E               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  9680                           
  9681                           ; BSR set to: 1
  9682  004C8E  0101               	movlb	1	; () banked
  9683  004C90  0101               	movlb	1	; () banked
  9684  004C92  8116               	bsf	___ftdiv@f3& (0+255),0,b
  9685  004C94                     l751:
  9686                           
  9687                           ; BSR set to: 1
  9688  004C94  0101               	movlb	1	; () banked
  9689  004C96  90D8               	bcf	status,0,c
  9690  004C98  0101               	movlb	1	; () banked
  9691  004C9A  370C               	rlcf	___ftdiv@f1& (0+255),f,b
  9692  004C9C  0101               	movlb	1	; () banked
  9693  004C9E  370D               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  9694  004CA0  0101               	movlb	1	; () banked
  9695  004CA2  370E               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  9696                           
  9697                           ; BSR set to: 1
  9698  004CA4  0101               	movlb	1	; () banked
  9699  004CA6  0101               	movlb	1	; () banked
  9700  004CA8  2F15               	decfsz	___ftdiv@cntr& (0+255),f,b
  9701  004CAA  D7C3               	goto	l750
  9702                           
  9703                           ; BSR set to: 1
  9704                           
  9705                           ; BSR set to: 1
  9706  004CAC  C116  F09D         	movff	___ftdiv@f3,___ftpack@arg
  9707  004CB0  C117  F09E         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9708  004CB4  C118  F09F         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9709  004CB8  C119  F0A0         	movff	___ftdiv@exp,___ftpack@exp
  9710  004CBC  C11A  F0A1         	movff	___ftdiv@sign,___ftpack@sign
  9711  004CC0  EC59  F029         	call	___ftpack	;wreg free
  9712  004CC4  C09D  F10C         	movff	?___ftpack,?___ftdiv
  9713  004CC8  C09E  F10D         	movff	?___ftpack+1,?___ftdiv+1
  9714  004CCC  C09F  F10E         	movff	?___ftpack+2,?___ftdiv+2
  9715  004CD0  0012               	return	
  9716  004CD2                     __end_of___ftdiv:
  9717                           	opt stack 0
  9718                           tblptru	equ	0xFF8
  9719                           tblptrh	equ	0xFF7
  9720                           tblptrl	equ	0xFF6
  9721                           tablat	equ	0xFF5
  9722                           prodh	equ	0xFF4
  9723                           prodl	equ	0xFF3
  9724                           intcon	equ	0xFF2
  9725                           wreg	equ	0xFE8
  9726                           indf2	equ	0xFDF
  9727                           postinc2	equ	0xFDE
  9728                           postdec2	equ	0xFDD
  9729                           fsr2h	equ	0xFDA
  9730                           fsr2l	equ	0xFD9
  9731                           status	equ	0xFD8
  9732                           
  9733 ;; *************** function ___awtoft *****************
  9734 ;; Defined at:
  9735 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\awtoft.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  c               2   69[BANK0 ] int 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;  sign            1   73[BANK0 ] unsigned char 
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  3   69[BANK0 ] float 
  9742 ;; Registers used:
  9743 ;;		wreg, status,2, status,0, prodl, cstack
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9749 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9751 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9752 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9753 ;;Total ram usage:        5 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:    8
  9756 ;; This function calls:
  9757 ;;		___ftpack
  9758 ;; This function is called by:
  9759 ;;		_readDistance
  9760 ;;		_readTempF
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text25
  9765  0067F8                     __ptext25:
  9766                           	opt stack 0
  9767  0067F8                     ___awtoft:
  9768                           	opt stack 19
  9769                           
  9770                           ;incstack = 0
  9771  0067F8  0100               	movlb	0	; () banked
  9772  0067FA  6FA8               	movwf	??___awtoft& (0+255),b
  9773  0067FC  0E00               	movlw	0
  9774  0067FE  0100               	movlb	0	; () banked
  9775  006800  0100               	movlb	0	; () banked
  9776  006802  6FA9               	movwf	___awtoft@sign& (0+255),b
  9777  006804  0100               	movlb	0	; () banked
  9778  006806  51A8               	movf	??___awtoft& (0+255),w,b
  9779                           
  9780                           ; BSR set to: 0
  9781  006808  0100               	movlb	0	; () banked
  9782  00680A  0100               	movlb	0	; () banked
  9783  00680C  51A6               	movf	(___awtoft@c+1)& (0+255),w,b
  9784  00680E  0A80               	xorlw	128
  9785  006810  6EF3               	movwf	prodl,c
  9786  006812  0E80               	movlw	128
  9787  006814  5CF3               	subwf	prodl,w,c
  9788  006816  0E00               	movlw	0
  9789  006818  B4D8               	btfsc	status,2,c
  9790  00681A  5DA5               	subwf	___awtoft@c& (0+255),w,b
  9791  00681C  B0D8               	btfsc	status,0,c
  9792  00681E  D00F               	goto	l6701
  9793                           
  9794                           ; BSR set to: 0
  9795  006820  0100               	movlb	0	; () banked
  9796  006822  0100               	movlb	0	; () banked
  9797  006824  6DA5               	negf	___awtoft@c& (0+255),b
  9798  006826  0100               	movlb	0	; () banked
  9799  006828  1FA6               	comf	(___awtoft@c+1)& (0+255),f,b
  9800  00682A  B0D8               	btfsc	status,0,c
  9801  00682C  2BA6               	incf	(___awtoft@c+1)& (0+255),f,b
  9802                           
  9803                           ; BSR set to: 0
  9804  00682E  0100               	movlb	0	; () banked
  9805  006830  6FA8               	movwf	??___awtoft& (0+255),b
  9806  006832  0E01               	movlw	1
  9807  006834  0100               	movlb	0	; () banked
  9808  006836  0100               	movlb	0	; () banked
  9809  006838  6FA9               	movwf	___awtoft@sign& (0+255),b
  9810  00683A  0100               	movlb	0	; () banked
  9811  00683C  51A8               	movf	??___awtoft& (0+255),w,b
  9812  00683E                     l6701:
  9813                           
  9814                           ; BSR set to: 0
  9815  00683E  0100               	movlb	0	; () banked
  9816  006840  0100               	movlb	0	; () banked
  9817  006842  C0A5  F09D         	movff	___awtoft@c,___ftpack@arg
  9818  006846  0100               	movlb	0	; () banked
  9819  006848  0100               	movlb	0	; () banked
  9820  00684A  C0A6  F09E         	movff	___awtoft@c+1,___ftpack@arg+1
  9821  00684E  0100               	movlb	0	; () banked
  9822  006850  0100               	movlb	0	; () banked
  9823  006852  6B9F               	clrf	(___ftpack@arg+2)& (0+255),b
  9824  006854  0100               	movlb	0	; () banked
  9825  006856  6FA8               	movwf	??___awtoft& (0+255),b
  9826  006858  0E8E               	movlw	142
  9827  00685A  0100               	movlb	0	; () banked
  9828  00685C  0100               	movlb	0	; () banked
  9829  00685E  6FA0               	movwf	___ftpack@exp& (0+255),b
  9830  006860  0100               	movlb	0	; () banked
  9831  006862  51A8               	movf	??___awtoft& (0+255),w,b
  9832  006864  C0A9  F0A1         	movff	___awtoft@sign,___ftpack@sign
  9833  006868  EC59  F029         	call	___ftpack	;wreg free
  9834  00686C  C09D  F0A5         	movff	?___ftpack,?___awtoft
  9835  006870  C09E  F0A6         	movff	?___ftpack+1,?___awtoft+1
  9836  006874  C09F  F0A7         	movff	?___ftpack+2,?___awtoft+2
  9837  006878  0012               	return	
  9838  00687A                     __end_of___awtoft:
  9839                           	opt stack 0
  9840                           tblptru	equ	0xFF8
  9841                           tblptrh	equ	0xFF7
  9842                           tblptrl	equ	0xFF6
  9843                           tablat	equ	0xFF5
  9844                           prodh	equ	0xFF4
  9845                           prodl	equ	0xFF3
  9846                           intcon	equ	0xFF2
  9847                           wreg	equ	0xFE8
  9848                           indf2	equ	0xFDF
  9849                           postinc2	equ	0xFDE
  9850                           postdec2	equ	0xFDD
  9851                           fsr2h	equ	0xFDA
  9852                           fsr2l	equ	0xFD9
  9853                           status	equ	0xFD8
  9854                           
  9855 ;; *************** function ___asftadd *****************
  9856 ;; Defined at:
  9857 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.31\sources\pic18\asftadd.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;  f1p             2   12[BANK1 ] PTR float 
  9860 ;;		 -> sprintf@fval(3), readDistance@a(3), 
  9861 ;;  f2              3   14[BANK1 ] float 
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;		None
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  3   12[BANK1 ] float 
  9866 ;; Registers used:
  9867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9873 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9876 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9877 ;;Total ram usage:        5 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    9
  9880 ;; This function calls:
  9881 ;;		___ftadd
  9882 ;; This function is called by:
  9883 ;;		_readDistance
  9884 ;;		_sprintf
  9885 ;; This function uses a non-reentrant model
  9886 ;;
  9887                           
  9888                           	psect	text26
  9889  006D50                     __ptext26:
  9890                           	opt stack 0
  9891  006D50                     ___asftadd:
  9892                           	opt stack 19
  9893                           
  9894                           ;	Return value of ___asftadd is never used
  9895                           
  9896                           ;incstack = 0
  9897  006D50  C10C  FFD9         	movff	___asftadd@f1p,fsr2l
  9898  006D54  C10D  FFDA         	movff	___asftadd@f1p+1,fsr2h
  9899  006D58  0101               	movlb	1	; () banked
  9900  006D5A  CFDE F100          	movff	postinc2,___ftadd@f1
  9901  006D5E  0101               	movlb	1	; () banked
  9902  006D60  CFDE F101          	movff	postinc2,___ftadd@f1+1
  9903  006D64  0101               	movlb	1	; () banked
  9904  006D66  CFDD F102          	movff	postdec2,___ftadd@f1+2
  9905  006D6A  C10E  F103         	movff	___asftadd@f2,___ftadd@f2
  9906  006D6E  C10F  F104         	movff	___asftadd@f2+1,___ftadd@f2+1
  9907  006D72  C110  F105         	movff	___asftadd@f2+2,___ftadd@f2+2
  9908  006D76  EC8C  F01C         	call	___ftadd	;wreg free
  9909  006D7A  C10C  FFD9         	movff	___asftadd@f1p,fsr2l
  9910  006D7E  C10D  FFDA         	movff	___asftadd@f1p+1,fsr2h
  9911  006D82  C100  FFDE         	movff	?___ftadd,postinc2
  9912  006D86  C101  FFDE         	movff	?___ftadd+1,postinc2
  9913  006D8A  C102  FFDD         	movff	?___ftadd+2,postdec2
  9914  006D8E  52DD               	movf	postdec2,f,c
  9915  006D90  0012               	return	
  9916  006D92                     __end_of___asftadd:
  9917                           	opt stack 0
  9918                           tblptru	equ	0xFF8
  9919                           tblptrh	equ	0xFF7
  9920                           tblptrl	equ	0xFF6
  9921                           tablat	equ	0xFF5
  9922                           prodh	equ	0xFF4
  9923                           prodl	equ	0xFF3
  9924                           intcon	equ	0xFF2
  9925                           wreg	equ	0xFE8
  9926                           indf2	equ	0xFDF
  9927                           postinc2	equ	0xFDE
  9928                           postdec2	equ	0xFDD
  9929                           fsr2h	equ	0xFDA
  9930                           fsr2l	equ	0xFD9
  9931                           status	equ	0xFD8
  9932                           
  9933 ;; *************** function ___ftadd *****************
  9934 ;; Defined at:
  9935 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftadd.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  f1              3    0[BANK1 ] float 
  9938 ;;  f2              3    3[BANK1 ] float 
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;  exp1            1   11[BANK1 ] unsigned char 
  9941 ;;  exp2            1   10[BANK1 ] unsigned char 
  9942 ;;  sign            1    9[BANK1 ] unsigned char 
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  3    0[BANK1 ] float 
  9945 ;; Registers used:
  9946 ;;		wreg, status,2, status,0, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9952 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9953 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9954 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9955 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9956 ;;Total ram usage:       12 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:    8
  9959 ;; This function calls:
  9960 ;;		___ftpack
  9961 ;; This function is called by:
  9962 ;;		_readDistance
  9963 ;;		_readTempF
  9964 ;;		___asftadd
  9965 ;;		___ftsub
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           	psect	text27
  9970  003918                     __ptext27:
  9971                           	opt stack 0
  9972  003918                     ___ftadd:
  9973                           	opt stack 18
  9974                           
  9975                           ;incstack = 0
  9976  003918  0101               	movlb	1	; () banked
  9977  00391A  C102  F106         	movff	___ftadd@f1+2,??___ftadd
  9978  00391E  0101               	movlb	1	; () banked
  9979  003920  6B07               	clrf	(??___ftadd+1)& (0+255),b
  9980  003922  6B08               	clrf	(??___ftadd+2)& (0+255),b
  9981  003924  0101               	movlb	1	; () banked
  9982  003926  0101               	movlb	1	; () banked
  9983  003928  3501               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  9984  00392A  0101               	movlb	1	; () banked
  9985  00392C  3706               	rlcf	??___ftadd& (0+255),f,b
  9986  00392E  E301               	bnc	u3761
  9987  003930  8107               	bsf	(??___ftadd+1)& (0+255),0,b
  9988  003932                     u3761:
  9989  003932  0101               	movlb	1	; () banked
  9990  003934  5106               	movf	??___ftadd& (0+255),w,b
  9991  003936  0101               	movlb	1	; () banked
  9992  003938  0101               	movlb	1	; () banked
  9993  00393A  6F0B               	movwf	___ftadd@exp1& (0+255),b
  9994  00393C  0101               	movlb	1	; () banked
  9995  00393E  C105  F106         	movff	___ftadd@f2+2,??___ftadd
  9996  003942  0101               	movlb	1	; () banked
  9997  003944  6B07               	clrf	(??___ftadd+1)& (0+255),b
  9998  003946  6B08               	clrf	(??___ftadd+2)& (0+255),b
  9999  003948  0101               	movlb	1	; () banked
 10000  00394A  0101               	movlb	1	; () banked
 10001  00394C  3504               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 10002  00394E  0101               	movlb	1	; () banked
 10003  003950  3706               	rlcf	??___ftadd& (0+255),f,b
 10004  003952  E301               	bnc	u3771
 10005  003954  8107               	bsf	(??___ftadd+1)& (0+255),0,b
 10006  003956                     u3771:
 10007  003956  0101               	movlb	1	; () banked
 10008  003958  5106               	movf	??___ftadd& (0+255),w,b
 10009  00395A  0101               	movlb	1	; () banked
 10010  00395C  0101               	movlb	1	; () banked
 10011  00395E  6F0A               	movwf	___ftadd@exp2& (0+255),b
 10012                           
 10013                           ; BSR set to: 1
 10014  003960  0101               	movlb	1	; () banked
 10015  003962  0101               	movlb	1	; () banked
 10016  003964  510B               	movf	___ftadd@exp1& (0+255),w,b
 10017  003966  B4D8               	btfsc	status,2,c
 10018  003968  D016               	goto	l716
 10019                           
 10020                           ; BSR set to: 1
 10021  00396A  0101               	movlb	1	; () banked
 10022  00396C  0101               	movlb	1	; () banked
 10023  00396E  510A               	movf	___ftadd@exp2& (0+255),w,b
 10024  003970  0101               	movlb	1	; () banked
 10025  003972  0101               	movlb	1	; () banked
 10026  003974  5D0B               	subwf	___ftadd@exp1& (0+255),w,b
 10027  003976  B0D8               	btfsc	status,0,c
 10028  003978  D015               	goto	l6199
 10029                           
 10030                           ; BSR set to: 1
 10031  00397A  0101               	movlb	1	; () banked
 10032  00397C  0101               	movlb	1	; () banked
 10033  00397E  510B               	movf	___ftadd@exp1& (0+255),w,b
 10034  003980  0800               	sublw	0
 10035  003982  0101               	movlb	1	; () banked
 10036  003984  0101               	movlb	1	; () banked
 10037  003986  250A               	addwf	___ftadd@exp2& (0+255),w,b
 10038  003988  0101               	movlb	1	; () banked
 10039  00398A  6F06               	movwf	??___ftadd& (0+255),b
 10040  00398C  0E19               	movlw	25
 10041  00398E  0101               	movlb	1	; () banked
 10042  003990  5D06               	subwf	??___ftadd& (0+255),w,b
 10043  003992  A0D8               	btfss	status,0,c
 10044  003994  D007               	goto	l6199
 10045  003996                     l716:
 10046                           
 10047                           ; BSR set to: 1
 10048  003996  C103  F100         	movff	___ftadd@f2,?___ftadd
 10049  00399A  C104  F101         	movff	___ftadd@f2+1,?___ftadd+1
 10050  00399E  C105  F102         	movff	___ftadd@f2+2,?___ftadd+2
 10051  0039A2  0012               	return	
 10052  0039A4                     l6199:
 10053                           
 10054                           ; BSR set to: 1
 10055  0039A4  0101               	movlb	1	; () banked
 10056  0039A6  0101               	movlb	1	; () banked
 10057  0039A8  510A               	movf	___ftadd@exp2& (0+255),w,b
 10058  0039AA  B4D8               	btfsc	status,2,c
 10059  0039AC  D016               	goto	l720
 10060                           
 10061                           ; BSR set to: 1
 10062  0039AE  0101               	movlb	1	; () banked
 10063  0039B0  0101               	movlb	1	; () banked
 10064  0039B2  510B               	movf	___ftadd@exp1& (0+255),w,b
 10065  0039B4  0101               	movlb	1	; () banked
 10066  0039B6  0101               	movlb	1	; () banked
 10067  0039B8  5D0A               	subwf	___ftadd@exp2& (0+255),w,b
 10068  0039BA  B0D8               	btfsc	status,0,c
 10069  0039BC  D015               	goto	l6205
 10070                           
 10071                           ; BSR set to: 1
 10072  0039BE  0101               	movlb	1	; () banked
 10073  0039C0  0101               	movlb	1	; () banked
 10074  0039C2  510A               	movf	___ftadd@exp2& (0+255),w,b
 10075  0039C4  0800               	sublw	0
 10076  0039C6  0101               	movlb	1	; () banked
 10077  0039C8  0101               	movlb	1	; () banked
 10078  0039CA  250B               	addwf	___ftadd@exp1& (0+255),w,b
 10079  0039CC  0101               	movlb	1	; () banked
 10080  0039CE  6F06               	movwf	??___ftadd& (0+255),b
 10081  0039D0  0E19               	movlw	25
 10082  0039D2  0101               	movlb	1	; () banked
 10083  0039D4  5D06               	subwf	??___ftadd& (0+255),w,b
 10084  0039D6  A0D8               	btfss	status,0,c
 10085  0039D8  D007               	goto	l6205
 10086  0039DA                     l720:
 10087                           
 10088                           ; BSR set to: 1
 10089  0039DA  C100  F100         	movff	___ftadd@f1,?___ftadd
 10090  0039DE  C101  F101         	movff	___ftadd@f1+1,?___ftadd+1
 10091  0039E2  C102  F102         	movff	___ftadd@f1+2,?___ftadd+2
 10092  0039E6  0012               	return	
 10093  0039E8                     l6205:
 10094                           
 10095                           ; BSR set to: 1
 10096  0039E8  0101               	movlb	1	; () banked
 10097  0039EA  6F06               	movwf	??___ftadd& (0+255),b
 10098  0039EC  0E06               	movlw	6
 10099  0039EE  0101               	movlb	1	; () banked
 10100  0039F0  0101               	movlb	1	; () banked
 10101  0039F2  6F09               	movwf	___ftadd@sign& (0+255),b
 10102  0039F4  0101               	movlb	1	; () banked
 10103  0039F6  5106               	movf	??___ftadd& (0+255),w,b
 10104                           
 10105                           ; BSR set to: 1
 10106  0039F8  0101               	movlb	1	; () banked
 10107  0039FA  0101               	movlb	1	; () banked
 10108  0039FC  AF02               	btfss	(___ftadd@f1+2)& (0+255),7,b
 10109  0039FE  D003               	goto	l6211
 10110                           
 10111                           ; BSR set to: 1
 10112  003A00  0101               	movlb	1	; () banked
 10113  003A02  0101               	movlb	1	; () banked
 10114  003A04  8F09               	bsf	___ftadd@sign& (0+255),7,b
 10115  003A06                     l6211:
 10116                           
 10117                           ; BSR set to: 1
 10118  003A06  0101               	movlb	1	; () banked
 10119  003A08  0101               	movlb	1	; () banked
 10120  003A0A  AF05               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10121  003A0C  D003               	goto	l722
 10122                           
 10123                           ; BSR set to: 1
 10124  003A0E  0101               	movlb	1	; () banked
 10125  003A10  0101               	movlb	1	; () banked
 10126  003A12  8D09               	bsf	___ftadd@sign& (0+255),6,b
 10127  003A14                     l722:
 10128                           
 10129                           ; BSR set to: 1
 10130  003A14  0101               	movlb	1	; () banked
 10131  003A16  0101               	movlb	1	; () banked
 10132  003A18  8F01               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10133                           
 10134                           ; BSR set to: 1
 10135  003A1A  0EFF               	movlw	255
 10136  003A1C  0101               	movlb	1	; () banked
 10137  003A1E  0101               	movlb	1	; () banked
 10138  003A20  1700               	andwf	___ftadd@f1& (0+255),f,b
 10139  003A22  0EFF               	movlw	255
 10140  003A24  0101               	movlb	1	; () banked
 10141  003A26  0101               	movlb	1	; () banked
 10142  003A28  1701               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10143  003A2A  0E00               	movlw	0
 10144  003A2C  0101               	movlb	1	; () banked
 10145  003A2E  0101               	movlb	1	; () banked
 10146  003A30  1702               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10147  003A32  0101               	movlb	1	; () banked
 10148  003A34  0101               	movlb	1	; () banked
 10149  003A36  8F04               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10150                           
 10151                           ; BSR set to: 1
 10152  003A38  0EFF               	movlw	255
 10153  003A3A  0101               	movlb	1	; () banked
 10154  003A3C  0101               	movlb	1	; () banked
 10155  003A3E  1703               	andwf	___ftadd@f2& (0+255),f,b
 10156  003A40  0EFF               	movlw	255
 10157  003A42  0101               	movlb	1	; () banked
 10158  003A44  0101               	movlb	1	; () banked
 10159  003A46  1704               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10160  003A48  0E00               	movlw	0
 10161  003A4A  0101               	movlb	1	; () banked
 10162  003A4C  0101               	movlb	1	; () banked
 10163  003A4E  1705               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10164                           
 10165                           ; BSR set to: 1
 10166  003A50  0101               	movlb	1	; () banked
 10167  003A52  0101               	movlb	1	; () banked
 10168  003A54  510A               	movf	___ftadd@exp2& (0+255),w,b
 10169  003A56  0101               	movlb	1	; () banked
 10170  003A58  0101               	movlb	1	; () banked
 10171  003A5A  5D0B               	subwf	___ftadd@exp1& (0+255),w,b
 10172  003A5C  B0D8               	btfsc	status,0,c
 10173  003A5E  D031               	goto	l6231
 10174  003A60                     l6221:
 10175                           
 10176                           ; BSR set to: 1
 10177  003A60  0101               	movlb	1	; () banked
 10178  003A62  90D8               	bcf	status,0,c
 10179  003A64  0101               	movlb	1	; () banked
 10180  003A66  3703               	rlcf	___ftadd@f2& (0+255),f,b
 10181  003A68  0101               	movlb	1	; () banked
 10182  003A6A  3704               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10183  003A6C  0101               	movlb	1	; () banked
 10184  003A6E  3705               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10185  003A70  0101               	movlb	1	; () banked
 10186  003A72  0101               	movlb	1	; () banked
 10187  003A74  070A               	decf	___ftadd@exp2& (0+255),f,b
 10188                           
 10189                           ; BSR set to: 1
 10190  003A76  0101               	movlb	1	; () banked
 10191  003A78  0101               	movlb	1	; () banked
 10192  003A7A  510A               	movf	___ftadd@exp2& (0+255),w,b
 10193  003A7C  0101               	movlb	1	; () banked
 10194  003A7E  0101               	movlb	1	; () banked
 10195  003A80  190B               	xorwf	___ftadd@exp1& (0+255),w,b
 10196  003A82  B4D8               	btfsc	status,2,c
 10197  003A84  D016               	goto	l6229
 10198                           
 10199                           ; BSR set to: 1
 10200  003A86  0101               	movlb	1	; () banked
 10201  003A88  0101               	movlb	1	; () banked
 10202  003A8A  0709               	decf	___ftadd@sign& (0+255),f,b
 10203  003A8C  C109  F106         	movff	___ftadd@sign,??___ftadd
 10204  003A90  0E07               	movlw	7
 10205  003A92  0101               	movlb	1	; () banked
 10206  003A94  1706               	andwf	??___ftadd& (0+255),f,b
 10207  003A96  B4D8               	btfsc	status,2,c
 10208  003A98  D00C               	goto	l6229
 10209  003A9A  D7E2               	goto	l6221
 10210  003A9C                     l6227:
 10211                           
 10212                           ; BSR set to: 1
 10213  003A9C  0101               	movlb	1	; () banked
 10214  003A9E  90D8               	bcf	status,0,c
 10215  003AA0  0101               	movlb	1	; () banked
 10216  003AA2  3302               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10217  003AA4  0101               	movlb	1	; () banked
 10218  003AA6  3301               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10219  003AA8  0101               	movlb	1	; () banked
 10220  003AAA  3300               	rrcf	___ftadd@f1& (0+255),f,b
 10221  003AAC  0101               	movlb	1	; () banked
 10222  003AAE  0101               	movlb	1	; () banked
 10223  003AB0  2B0B               	incf	___ftadd@exp1& (0+255),f,b
 10224  003AB2                     l6229:
 10225                           
 10226                           ; BSR set to: 1
 10227  003AB2  0101               	movlb	1	; () banked
 10228  003AB4  0101               	movlb	1	; () banked
 10229  003AB6  510A               	movf	___ftadd@exp2& (0+255),w,b
 10230  003AB8  0101               	movlb	1	; () banked
 10231  003ABA  0101               	movlb	1	; () banked
 10232  003ABC  630B               	cpfseq	___ftadd@exp1& (0+255),b
 10233  003ABE  D7EE               	goto	l6227
 10234  003AC0  D038               	goto	l731
 10235  003AC2                     l6231:
 10236                           
 10237                           ; BSR set to: 1
 10238  003AC2  0101               	movlb	1	; () banked
 10239  003AC4  0101               	movlb	1	; () banked
 10240  003AC6  510B               	movf	___ftadd@exp1& (0+255),w,b
 10241  003AC8  0101               	movlb	1	; () banked
 10242  003ACA  0101               	movlb	1	; () banked
 10243  003ACC  5D0A               	subwf	___ftadd@exp2& (0+255),w,b
 10244  003ACE  B0D8               	btfsc	status,0,c
 10245  003AD0  D030               	goto	l731
 10246  003AD2                     l6233:
 10247                           
 10248                           ; BSR set to: 1
 10249  003AD2  0101               	movlb	1	; () banked
 10250  003AD4  90D8               	bcf	status,0,c
 10251  003AD6  0101               	movlb	1	; () banked
 10252  003AD8  3700               	rlcf	___ftadd@f1& (0+255),f,b
 10253  003ADA  0101               	movlb	1	; () banked
 10254  003ADC  3701               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10255  003ADE  0101               	movlb	1	; () banked
 10256  003AE0  3702               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10257  003AE2  0101               	movlb	1	; () banked
 10258  003AE4  0101               	movlb	1	; () banked
 10259  003AE6  070B               	decf	___ftadd@exp1& (0+255),f,b
 10260                           
 10261                           ; BSR set to: 1
 10262  003AE8  0101               	movlb	1	; () banked
 10263  003AEA  0101               	movlb	1	; () banked
 10264  003AEC  510A               	movf	___ftadd@exp2& (0+255),w,b
 10265  003AEE  0101               	movlb	1	; () banked
 10266  003AF0  0101               	movlb	1	; () banked
 10267  003AF2  190B               	xorwf	___ftadd@exp1& (0+255),w,b
 10268  003AF4  B4D8               	btfsc	status,2,c
 10269  003AF6  D016               	goto	l6241
 10270                           
 10271                           ; BSR set to: 1
 10272  003AF8  0101               	movlb	1	; () banked
 10273  003AFA  0101               	movlb	1	; () banked
 10274  003AFC  0709               	decf	___ftadd@sign& (0+255),f,b
 10275  003AFE  C109  F106         	movff	___ftadd@sign,??___ftadd
 10276  003B02  0E07               	movlw	7
 10277  003B04  0101               	movlb	1	; () banked
 10278  003B06  1706               	andwf	??___ftadd& (0+255),f,b
 10279  003B08  B4D8               	btfsc	status,2,c
 10280  003B0A  D00C               	goto	l6241
 10281  003B0C  D7E2               	goto	l6233
 10282  003B0E                     l6239:
 10283                           
 10284                           ; BSR set to: 1
 10285  003B0E  0101               	movlb	1	; () banked
 10286  003B10  90D8               	bcf	status,0,c
 10287  003B12  0101               	movlb	1	; () banked
 10288  003B14  3305               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10289  003B16  0101               	movlb	1	; () banked
 10290  003B18  3304               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10291  003B1A  0101               	movlb	1	; () banked
 10292  003B1C  3303               	rrcf	___ftadd@f2& (0+255),f,b
 10293  003B1E  0101               	movlb	1	; () banked
 10294  003B20  0101               	movlb	1	; () banked
 10295  003B22  2B0A               	incf	___ftadd@exp2& (0+255),f,b
 10296  003B24                     l6241:
 10297                           
 10298                           ; BSR set to: 1
 10299  003B24  0101               	movlb	1	; () banked
 10300  003B26  0101               	movlb	1	; () banked
 10301  003B28  510A               	movf	___ftadd@exp2& (0+255),w,b
 10302  003B2A  0101               	movlb	1	; () banked
 10303  003B2C  0101               	movlb	1	; () banked
 10304  003B2E  630B               	cpfseq	___ftadd@exp1& (0+255),b
 10305  003B30  D7EE               	goto	l6239
 10306  003B32                     l731:
 10307                           
 10308                           ; BSR set to: 1
 10309  003B32  0101               	movlb	1	; () banked
 10310  003B34  0101               	movlb	1	; () banked
 10311  003B36  AF09               	btfss	___ftadd@sign& (0+255),7,b
 10312  003B38  D018               	goto	l740
 10313                           
 10314                           ; BSR set to: 1
 10315  003B3A  0EFF               	movlw	255
 10316  003B3C  0101               	movlb	1	; () banked
 10317  003B3E  0101               	movlb	1	; () banked
 10318  003B40  1B00               	xorwf	___ftadd@f1& (0+255),f,b
 10319  003B42  0EFF               	movlw	255
 10320  003B44  0101               	movlb	1	; () banked
 10321  003B46  0101               	movlb	1	; () banked
 10322  003B48  1B01               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10323  003B4A  0EFF               	movlw	255
 10324  003B4C  0101               	movlb	1	; () banked
 10325  003B4E  0101               	movlb	1	; () banked
 10326  003B50  1B02               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10327  003B52  0E01               	movlw	1
 10328  003B54  0101               	movlb	1	; () banked
 10329  003B56  0101               	movlb	1	; () banked
 10330  003B58  2700               	addwf	___ftadd@f1& (0+255),f,b
 10331  003B5A  0E00               	movlw	0
 10332  003B5C  0101               	movlb	1	; () banked
 10333  003B5E  0101               	movlb	1	; () banked
 10334  003B60  2301               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10335  003B62  0E00               	movlw	0
 10336  003B64  0101               	movlb	1	; () banked
 10337  003B66  0101               	movlb	1	; () banked
 10338  003B68  2302               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10339  003B6A                     l740:
 10340                           
 10341                           ; BSR set to: 1
 10342  003B6A  0101               	movlb	1	; () banked
 10343  003B6C  0101               	movlb	1	; () banked
 10344  003B6E  AD09               	btfss	___ftadd@sign& (0+255),6,b
 10345  003B70  D018               	goto	l6247
 10346                           
 10347                           ; BSR set to: 1
 10348  003B72  0EFF               	movlw	255
 10349  003B74  0101               	movlb	1	; () banked
 10350  003B76  0101               	movlb	1	; () banked
 10351  003B78  1B03               	xorwf	___ftadd@f2& (0+255),f,b
 10352  003B7A  0EFF               	movlw	255
 10353  003B7C  0101               	movlb	1	; () banked
 10354  003B7E  0101               	movlb	1	; () banked
 10355  003B80  1B04               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10356  003B82  0EFF               	movlw	255
 10357  003B84  0101               	movlb	1	; () banked
 10358  003B86  0101               	movlb	1	; () banked
 10359  003B88  1B05               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10360  003B8A  0E01               	movlw	1
 10361  003B8C  0101               	movlb	1	; () banked
 10362  003B8E  0101               	movlb	1	; () banked
 10363  003B90  2703               	addwf	___ftadd@f2& (0+255),f,b
 10364  003B92  0E00               	movlw	0
 10365  003B94  0101               	movlb	1	; () banked
 10366  003B96  0101               	movlb	1	; () banked
 10367  003B98  2304               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10368  003B9A  0E00               	movlw	0
 10369  003B9C  0101               	movlb	1	; () banked
 10370  003B9E  0101               	movlb	1	; () banked
 10371  003BA0  2305               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10372  003BA2                     l6247:
 10373                           
 10374                           ; BSR set to: 1
 10375  003BA2  0101               	movlb	1	; () banked
 10376  003BA4  6F06               	movwf	??___ftadd& (0+255),b
 10377  003BA6  0E00               	movlw	0
 10378  003BA8  0101               	movlb	1	; () banked
 10379  003BAA  0101               	movlb	1	; () banked
 10380  003BAC  6F09               	movwf	___ftadd@sign& (0+255),b
 10381  003BAE  0101               	movlb	1	; () banked
 10382  003BB0  5106               	movf	??___ftadd& (0+255),w,b
 10383                           
 10384                           ; BSR set to: 1
 10385  003BB2  0101               	movlb	1	; () banked
 10386  003BB4  0101               	movlb	1	; () banked
 10387  003BB6  5100               	movf	___ftadd@f1& (0+255),w,b
 10388  003BB8  0101               	movlb	1	; () banked
 10389  003BBA  0101               	movlb	1	; () banked
 10390  003BBC  2703               	addwf	___ftadd@f2& (0+255),f,b
 10391  003BBE  0101               	movlb	1	; () banked
 10392  003BC0  0101               	movlb	1	; () banked
 10393  003BC2  5101               	movf	(___ftadd@f1+1)& (0+255),w,b
 10394  003BC4  0101               	movlb	1	; () banked
 10395  003BC6  0101               	movlb	1	; () banked
 10396  003BC8  2304               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10397  003BCA  0101               	movlb	1	; () banked
 10398  003BCC  0101               	movlb	1	; () banked
 10399  003BCE  5102               	movf	(___ftadd@f1+2)& (0+255),w,b
 10400  003BD0  0101               	movlb	1	; () banked
 10401  003BD2  0101               	movlb	1	; () banked
 10402  003BD4  2305               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10403                           
 10404                           ; BSR set to: 1
 10405  003BD6  0101               	movlb	1	; () banked
 10406  003BD8  0101               	movlb	1	; () banked
 10407  003BDA  AF05               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10408  003BDC  D020               	goto	l6257
 10409                           
 10410                           ; BSR set to: 1
 10411  003BDE  0EFF               	movlw	255
 10412  003BE0  0101               	movlb	1	; () banked
 10413  003BE2  0101               	movlb	1	; () banked
 10414  003BE4  1B03               	xorwf	___ftadd@f2& (0+255),f,b
 10415  003BE6  0EFF               	movlw	255
 10416  003BE8  0101               	movlb	1	; () banked
 10417  003BEA  0101               	movlb	1	; () banked
 10418  003BEC  1B04               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10419  003BEE  0EFF               	movlw	255
 10420  003BF0  0101               	movlb	1	; () banked
 10421  003BF2  0101               	movlb	1	; () banked
 10422  003BF4  1B05               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10423  003BF6  0E01               	movlw	1
 10424  003BF8  0101               	movlb	1	; () banked
 10425  003BFA  0101               	movlb	1	; () banked
 10426  003BFC  2703               	addwf	___ftadd@f2& (0+255),f,b
 10427  003BFE  0E00               	movlw	0
 10428  003C00  0101               	movlb	1	; () banked
 10429  003C02  0101               	movlb	1	; () banked
 10430  003C04  2304               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10431  003C06  0E00               	movlw	0
 10432  003C08  0101               	movlb	1	; () banked
 10433  003C0A  0101               	movlb	1	; () banked
 10434  003C0C  2305               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10435                           
 10436                           ; BSR set to: 1
 10437  003C0E  0101               	movlb	1	; () banked
 10438  003C10  6F06               	movwf	??___ftadd& (0+255),b
 10439  003C12  0E01               	movlw	1
 10440  003C14  0101               	movlb	1	; () banked
 10441  003C16  0101               	movlb	1	; () banked
 10442  003C18  6F09               	movwf	___ftadd@sign& (0+255),b
 10443  003C1A  0101               	movlb	1	; () banked
 10444  003C1C  5106               	movf	??___ftadd& (0+255),w,b
 10445  003C1E                     l6257:
 10446                           
 10447                           ; BSR set to: 1
 10448  003C1E  C103  F09D         	movff	___ftadd@f2,___ftpack@arg
 10449  003C22  C104  F09E         	movff	___ftadd@f2+1,___ftpack@arg+1
 10450  003C26  C105  F09F         	movff	___ftadd@f2+2,___ftpack@arg+2
 10451  003C2A  C10B  F0A0         	movff	___ftadd@exp1,___ftpack@exp
 10452  003C2E  C109  F0A1         	movff	___ftadd@sign,___ftpack@sign
 10453  003C32  EC59  F029         	call	___ftpack	;wreg free
 10454  003C36  C09D  F100         	movff	?___ftpack,?___ftadd
 10455  003C3A  C09E  F101         	movff	?___ftpack+1,?___ftadd+1
 10456  003C3E  C09F  F102         	movff	?___ftpack+2,?___ftadd+2
 10457  003C42  0012               	return	
 10458  003C44                     __end_of___ftadd:
 10459                           	opt stack 0
 10460                           tblptru	equ	0xFF8
 10461                           tblptrh	equ	0xFF7
 10462                           tblptrl	equ	0xFF6
 10463                           tablat	equ	0xFF5
 10464                           prodh	equ	0xFF4
 10465                           prodl	equ	0xFF3
 10466                           intcon	equ	0xFF2
 10467                           wreg	equ	0xFE8
 10468                           indf2	equ	0xFDF
 10469                           postinc2	equ	0xFDE
 10470                           postdec2	equ	0xFDD
 10471                           fsr2h	equ	0xFDA
 10472                           fsr2l	equ	0xFD9
 10473                           status	equ	0xFD8
 10474                           
 10475 ;; *************** function ___ftpack *****************
 10476 ;; Defined at:
 10477 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\float.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  arg             3   61[BANK0 ] unsigned um
 10480 ;;  exp             1   64[BANK0 ] unsigned char 
 10481 ;;  sign            1   65[BANK0 ] unsigned char 
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;		None
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  3   61[BANK0 ] float 
 10486 ;; Registers used:
 10487 ;;		wreg, status,2, status,0
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10493 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10495 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10496 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10497 ;;Total ram usage:        8 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    7
 10500 ;; This function calls:
 10501 ;;		Nothing
 10502 ;; This function is called by:
 10503 ;;		___awtoft
 10504 ;;		___ftadd
 10505 ;;		___ftdiv
 10506 ;;		___ftmul
 10507 ;;		___lltoft
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text28
 10512  0052B2                     __ptext28:
 10513                           	opt stack 0
 10514  0052B2                     ___ftpack:
 10515                           	opt stack 19
 10516                           
 10517                           ;incstack = 0
 10518  0052B2  0100               	movlb	0	; () banked
 10519  0052B4  0100               	movlb	0	; () banked
 10520  0052B6  51A0               	movf	___ftpack@exp& (0+255),w,b
 10521  0052B8  B4D8               	btfsc	status,2,c
 10522  0052BA  D009               	goto	l6109
 10523                           
 10524                           ; BSR set to: 0
 10525  0052BC  0100               	movlb	0	; () banked
 10526  0052BE  0100               	movlb	0	; () banked
 10527  0052C0  519D               	movf	___ftpack@arg& (0+255),w,b
 10528  0052C2  0100               	movlb	0	; () banked
 10529  0052C4  119E               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10530  0052C6  0100               	movlb	0	; () banked
 10531  0052C8  119F               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10532  0052CA  A4D8               	btfss	status,2,c
 10533  0052CC  D018               	goto	l6115
 10534  0052CE                     l6109:
 10535                           
 10536                           ; BSR set to: 0
 10537  0052CE  0E00               	movlw	0
 10538  0052D0  0100               	movlb	0	; () banked
 10539  0052D2  0100               	movlb	0	; () banked
 10540  0052D4  6F9D               	movwf	?___ftpack& (0+255),b
 10541  0052D6  0E00               	movlw	0
 10542  0052D8  0100               	movlb	0	; () banked
 10543  0052DA  0100               	movlb	0	; () banked
 10544  0052DC  6F9E               	movwf	(?___ftpack+1)& (0+255),b
 10545  0052DE  0E00               	movlw	0
 10546  0052E0  0100               	movlb	0	; () banked
 10547  0052E2  0100               	movlb	0	; () banked
 10548  0052E4  6F9F               	movwf	(?___ftpack+2)& (0+255),b
 10549  0052E6  0012               	return	
 10550  0052E8                     l6113:
 10551                           
 10552                           ; BSR set to: 0
 10553  0052E8  0100               	movlb	0	; () banked
 10554  0052EA  0100               	movlb	0	; () banked
 10555  0052EC  2BA0               	incf	___ftpack@exp& (0+255),f,b
 10556  0052EE  0100               	movlb	0	; () banked
 10557  0052F0  90D8               	bcf	status,0,c
 10558  0052F2  0100               	movlb	0	; () banked
 10559  0052F4  339F               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10560  0052F6  0100               	movlb	0	; () banked
 10561  0052F8  339E               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10562  0052FA  0100               	movlb	0	; () banked
 10563  0052FC  339D               	rrcf	___ftpack@arg& (0+255),f,b
 10564  0052FE                     l6115:
 10565                           
 10566                           ; BSR set to: 0
 10567  0052FE  0E00               	movlw	0
 10568  005300  0100               	movlb	0	; () banked
 10569  005302  0100               	movlb	0	; () banked
 10570  005304  159D               	andwf	___ftpack@arg& (0+255),w,b
 10571  005306  0100               	movlb	0	; () banked
 10572  005308  6FA2               	movwf	??___ftpack& (0+255),b
 10573  00530A  0E00               	movlw	0
 10574  00530C  0100               	movlb	0	; () banked
 10575  00530E  0100               	movlb	0	; () banked
 10576  005310  159E               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10577  005312  0100               	movlb	0	; () banked
 10578  005314  6FA3               	movwf	(??___ftpack+1)& (0+255),b
 10579  005316  0EFE               	movlw	254
 10580  005318  0100               	movlb	0	; () banked
 10581  00531A  0100               	movlb	0	; () banked
 10582  00531C  159F               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10583  00531E  0100               	movlb	0	; () banked
 10584  005320  6FA4               	movwf	(??___ftpack+2)& (0+255),b
 10585  005322  0100               	movlb	0	; () banked
 10586  005324  51A2               	movf	??___ftpack& (0+255),w,b
 10587  005326  11A3               	iorwf	(??___ftpack+1)& (0+255),w,b
 10588  005328  11A4               	iorwf	(??___ftpack+2)& (0+255),w,b
 10589  00532A  B4D8               	btfsc	status,2,c
 10590  00532C  D018               	goto	l6121
 10591  00532E  D7DC               	goto	l6113
 10592  005330                     l6117:
 10593                           
 10594                           ; BSR set to: 0
 10595  005330  0100               	movlb	0	; () banked
 10596  005332  0100               	movlb	0	; () banked
 10597  005334  2BA0               	incf	___ftpack@exp& (0+255),f,b
 10598                           
 10599                           ; BSR set to: 0
 10600  005336  0E01               	movlw	1
 10601  005338  0100               	movlb	0	; () banked
 10602  00533A  0100               	movlb	0	; () banked
 10603  00533C  279D               	addwf	___ftpack@arg& (0+255),f,b
 10604  00533E  0E00               	movlw	0
 10605  005340  0100               	movlb	0	; () banked
 10606  005342  0100               	movlb	0	; () banked
 10607  005344  239E               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10608  005346  0E00               	movlw	0
 10609  005348  0100               	movlb	0	; () banked
 10610  00534A  0100               	movlb	0	; () banked
 10611  00534C  239F               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10612  00534E  0100               	movlb	0	; () banked
 10613  005350  90D8               	bcf	status,0,c
 10614  005352  0100               	movlb	0	; () banked
 10615  005354  339F               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10616  005356  0100               	movlb	0	; () banked
 10617  005358  339E               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10618  00535A  0100               	movlb	0	; () banked
 10619  00535C  339D               	rrcf	___ftpack@arg& (0+255),f,b
 10620  00535E                     l6121:
 10621                           
 10622                           ; BSR set to: 0
 10623  00535E  0E00               	movlw	0
 10624  005360  0100               	movlb	0	; () banked
 10625  005362  0100               	movlb	0	; () banked
 10626  005364  159D               	andwf	___ftpack@arg& (0+255),w,b
 10627  005366  0100               	movlb	0	; () banked
 10628  005368  6FA2               	movwf	??___ftpack& (0+255),b
 10629  00536A  0E00               	movlw	0
 10630  00536C  0100               	movlb	0	; () banked
 10631  00536E  0100               	movlb	0	; () banked
 10632  005370  159E               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10633  005372  0100               	movlb	0	; () banked
 10634  005374  6FA3               	movwf	(??___ftpack+1)& (0+255),b
 10635  005376  0EFF               	movlw	255
 10636  005378  0100               	movlb	0	; () banked
 10637  00537A  0100               	movlb	0	; () banked
 10638  00537C  159F               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10639  00537E  0100               	movlb	0	; () banked
 10640  005380  6FA4               	movwf	(??___ftpack+2)& (0+255),b
 10641  005382  0100               	movlb	0	; () banked
 10642  005384  51A2               	movf	??___ftpack& (0+255),w,b
 10643  005386  11A3               	iorwf	(??___ftpack+1)& (0+255),w,b
 10644  005388  11A4               	iorwf	(??___ftpack+2)& (0+255),w,b
 10645  00538A  B4D8               	btfsc	status,2,c
 10646  00538C  D00C               	goto	l6125
 10647  00538E  D7D0               	goto	l6117
 10648  005390                     l6123:
 10649                           
 10650                           ; BSR set to: 0
 10651  005390  0100               	movlb	0	; () banked
 10652  005392  0100               	movlb	0	; () banked
 10653  005394  07A0               	decf	___ftpack@exp& (0+255),f,b
 10654  005396  0100               	movlb	0	; () banked
 10655  005398  90D8               	bcf	status,0,c
 10656  00539A  0100               	movlb	0	; () banked
 10657  00539C  379D               	rlcf	___ftpack@arg& (0+255),f,b
 10658  00539E  0100               	movlb	0	; () banked
 10659  0053A0  379E               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10660  0053A2  0100               	movlb	0	; () banked
 10661  0053A4  379F               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10662  0053A6                     l6125:
 10663                           
 10664                           ; BSR set to: 0
 10665  0053A6  0100               	movlb	0	; () banked
 10666  0053A8  0100               	movlb	0	; () banked
 10667  0053AA  AF9E               	btfss	(___ftpack@arg+1)& (0+255),7,b
 10668  0053AC  D7F1               	goto	l6123
 10669                           
 10670                           ; BSR set to: 0
 10671  0053AE  0100               	movlb	0	; () banked
 10672  0053B0  0100               	movlb	0	; () banked
 10673  0053B2  B1A0               	btfsc	___ftpack@exp& (0+255),0,b
 10674  0053B4  D003               	goto	l6129
 10675                           
 10676                           ; BSR set to: 0
 10677  0053B6  0100               	movlb	0	; () banked
 10678  0053B8  0100               	movlb	0	; () banked
 10679  0053BA  9F9E               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10680  0053BC                     l6129:
 10681                           
 10682                           ; BSR set to: 0
 10683  0053BC  0100               	movlb	0	; () banked
 10684  0053BE  90D8               	bcf	status,0,c
 10685  0053C0  33A0               	rrcf	___ftpack@exp& (0+255),f,b
 10686  0053C2  0100               	movlb	0	; () banked
 10687  0053C4  0100               	movlb	0	; () banked
 10688  0053C6  51A0               	movf	___ftpack@exp& (0+255),w,b
 10689  0053C8  0100               	movlb	0	; () banked
 10690  0053CA  0100               	movlb	0	; () banked
 10691  0053CC  139F               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10692                           
 10693                           ; BSR set to: 0
 10694  0053CE  0100               	movlb	0	; () banked
 10695  0053D0  0100               	movlb	0	; () banked
 10696  0053D2  51A1               	movf	___ftpack@sign& (0+255),w,b
 10697  0053D4  B4D8               	btfsc	status,2,c
 10698  0053D6  D003               	goto	l6135
 10699                           
 10700                           ; BSR set to: 0
 10701  0053D8  0100               	movlb	0	; () banked
 10702  0053DA  0100               	movlb	0	; () banked
 10703  0053DC  8F9F               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10704  0053DE                     l6135:
 10705                           
 10706                           ; BSR set to: 0
 10707  0053DE  C09D  F09D         	movff	___ftpack@arg,?___ftpack
 10708  0053E2  C09E  F09E         	movff	___ftpack@arg+1,?___ftpack+1
 10709  0053E6  C09F  F09F         	movff	___ftpack@arg+2,?___ftpack+2
 10710  0053EA  0012               	return	
 10711  0053EC                     __end_of___ftpack:
 10712                           	opt stack 0
 10713                           tblptru	equ	0xFF8
 10714                           tblptrh	equ	0xFF7
 10715                           tblptrl	equ	0xFF6
 10716                           tablat	equ	0xFF5
 10717                           prodh	equ	0xFF4
 10718                           prodl	equ	0xFF3
 10719                           intcon	equ	0xFF2
 10720                           wreg	equ	0xFE8
 10721                           indf2	equ	0xFDF
 10722                           postinc2	equ	0xFDE
 10723                           postdec2	equ	0xFDD
 10724                           fsr2h	equ	0xFDA
 10725                           fsr2l	equ	0xFD9
 10726                           status	equ	0xFD8
 10727                           
 10728 ;; *************** function _setServo *****************
 10729 ;; Defined at:
 10730 ;;		line 97 in file "functions.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;  degree          2   61[BANK0 ] int 
 10733 ;; Auto vars:     Size  Location     Type
 10734 ;;  i               2   74[BANK0 ] int 
 10735 ;;  i               2   68[BANK0 ] int 
 10736 ;;  i               2   66[BANK0 ] int 
 10737 ;;  i               2   72[BANK0 ] int 
 10738 ;;  j               2   70[BANK0 ] int 
 10739 ;; Return value:  Size  Location     Type
 10740 ;;		None               void
 10741 ;; Registers used:
 10742 ;;		wreg, status,2, status,0
 10743 ;; Tracked objects:
 10744 ;;		On entry : 0/0
 10745 ;;		On exit  : 0/0
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10749 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10750 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10751 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10752 ;;Total ram usage:       15 bytes
 10753 ;; Hardware stack levels used:    1
 10754 ;; Hardware stack levels required when called:    7
 10755 ;; This function calls:
 10756 ;;		Nothing
 10757 ;; This function is called by:
 10758 ;;		_main
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762                           	psect	text29
 10763  0053EC                     __ptext29:
 10764                           	opt stack 0
 10765  0053EC                     _setServo:
 10766                           	opt stack 23
 10767                           
 10768                           ;functions.c: 98: for (int j = 0; j < 20; j++) {
 10769                           
 10770                           ; BSR set to: 0
 10771                           ;incstack = 0
 10772  0053EC  0E00               	movlw	0
 10773  0053EE  0100               	movlb	0	; () banked
 10774  0053F0  0100               	movlb	0	; () banked
 10775  0053F2  6FA7               	movwf	(setServo@j+1)& (0+255),b
 10776  0053F4  0E00               	movlw	0
 10777  0053F6  0100               	movlb	0	; () banked
 10778  0053F8  6FA6               	movwf	setServo@j& (0+255),b
 10779  0053FA                     
 10780                           ; BSR set to: 0
 10781  0053FA  0100               	movlb	0	; () banked
 10782  0053FC  0100               	movlb	0	; () banked
 10783  0053FE  51A7               	movf	(setServo@j+1)& (0+255),w,b
 10784  005400  0A80               	xorlw	128
 10785  005402  0F80               	addlw	-128
 10786  005404  0E14               	movlw	20
 10787  005406  B4D8               	btfsc	status,2,c
 10788  005408  5DA6               	subwf	setServo@j& (0+255),w,b
 10789  00540A  B0D8               	btfsc	status,0,c
 10790  00540C  0012               	return	
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;functions.c: 101: LATBbits.LATB0 = 1;
 10794                           
 10795                           ; BSR set to: 0
 10796  00540E  808A               	bsf	3978,0,c	;volatile
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;functions.c: 102: for (int i = 0; i < 10; i++)_delay((unsigned long)((25)*(12000000/400
      +                          0000.0)));
 10800  005410  0E00               	movlw	0
 10801  005412  0100               	movlb	0	; () banked
 10802  005414  0100               	movlb	0	; () banked
 10803  005416  6FA9               	movwf	(setServo@i+1)& (0+255),b
 10804  005418  0E00               	movlw	0
 10805  00541A  0100               	movlb	0	; () banked
 10806  00541C  6FA8               	movwf	setServo@i& (0+255),b
 10807  00541E                     
 10808                           ; BSR set to: 0
 10809  00541E  0100               	movlb	0	; () banked
 10810  005420  0100               	movlb	0	; () banked
 10811  005422  51A9               	movf	(setServo@i+1)& (0+255),w,b
 10812  005424  0A80               	xorlw	128
 10813  005426  0F80               	addlw	-128
 10814  005428  0E0A               	movlw	10
 10815  00542A  B4D8               	btfsc	status,2,c
 10816  00542C  5DA8               	subwf	setServo@i& (0+255),w,b
 10817  00542E  B0D8               	btfsc	status,0,c
 10818  005430  D008               	goto	l8343
 10819                           
 10820                           ; BSR set to: 0
 10821                           
 10822                           ; BSR set to: 0
 10823                           
 10824                           ; BSR set to: 0
 10825  005432  0E19               	movlw	25
 10826  005434                     u7307:
 10827  005434  2EE8               	decfsz	wreg,f,c
 10828  005436  D7FE               	goto	u7307
 10829  005438  0100               	movlb	0	; () banked
 10830  00543A  0100               	movlb	0	; () banked
 10831  00543C  4BA8               	infsnz	setServo@i& (0+255),f,b
 10832  00543E  2BA9               	incf	(setServo@i+1)& (0+255),f,b
 10833  005440  D7EE               	goto	L15
 10834  005442                     l8343:
 10835                           
 10836                           ; BSR set to: 0
 10837                           ;functions.c: 103: for (int i = 0; i < degree; i++)_delay((unsigned long)((4)*(12000000/
      +                          4000000.0)));
 10838  005442  0E00               	movlw	0
 10839  005444  0100               	movlb	0	; () banked
 10840  005446  0100               	movlb	0	; () banked
 10841  005448  6FA3               	movwf	(setServo@i_722+1)& (0+255),b
 10842  00544A  0E00               	movlw	0
 10843  00544C  0100               	movlb	0	; () banked
 10844  00544E  6FA2               	movwf	setServo@i_722& (0+255),b
 10845  005450  D007               	goto	l125
 10846  005452                     l8345:
 10847                           
 10848                           ; BSR set to: 0
 10849  005452  0E04               	movlw	4
 10850  005454                     u7317:
 10851  005454  2EE8               	decfsz	wreg,f,c
 10852  005456  D7FE               	goto	u7317
 10853  005458  0100               	movlb	0	; () banked
 10854  00545A  0100               	movlb	0	; () banked
 10855  00545C  4BA2               	infsnz	setServo@i_722& (0+255),f,b
 10856  00545E  2BA3               	incf	(setServo@i_722+1)& (0+255),f,b
 10857  005460                     l125:
 10858                           
 10859                           ; BSR set to: 0
 10860  005460  0100               	movlb	0	; () banked
 10861  005462  0100               	movlb	0	; () banked
 10862  005464  51A3               	movf	(setServo@i_722+1)& (0+255),w,b
 10863  005466  0A80               	xorlw	128
 10864  005468  0100               	movlb	0	; () banked
 10865  00546A  6F9F               	movwf	??_setServo& (0+255),b
 10866  00546C  0100               	movlb	0	; () banked
 10867  00546E  519D               	movf	setServo@degree& (0+255),w,b
 10868  005470  0100               	movlb	0	; () banked
 10869  005472  0100               	movlb	0	; () banked
 10870  005474  5DA2               	subwf	setServo@i_722& (0+255),w,b
 10871  005476  0100               	movlb	0	; () banked
 10872  005478  0100               	movlb	0	; () banked
 10873  00547A  519E               	movf	(setServo@degree+1)& (0+255),w,b
 10874  00547C  0A80               	xorlw	128
 10875  00547E  0100               	movlb	0	; () banked
 10876  005480  599F               	subwfb	??_setServo& (0+255),w,b
 10877  005482  A0D8               	btfss	status,0,c
 10878  005484  D7E6               	goto	l8345
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;functions.c: 105: LATBbits.LATB0 = 0;
 10882  005486  908A               	bcf	3978,0,c	;volatile
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;functions.c: 106: for (int i = 0; i < 180 - degree; i++)
 10886  005488  0E00               	movlw	0
 10887  00548A  0100               	movlb	0	; () banked
 10888  00548C  0100               	movlb	0	; () banked
 10889  00548E  6FA5               	movwf	(setServo@i_723+1)& (0+255),b
 10890  005490  0E00               	movlw	0
 10891  005492  0100               	movlb	0	; () banked
 10892  005494  6FA4               	movwf	setServo@i_723& (0+255),b
 10893  005496  D007               	goto	l128
 10894  005498                     l8351:
 10895                           
 10896                           ; BSR set to: 0
 10897                           ;functions.c: 107: {
 10898                           ;functions.c: 108: _delay((unsigned long)((3)*(12000000/4000000.0)));
 10899  005498  0E03               	movlw	3
 10900  00549A                     u7327:
 10901  00549A  2EE8               	decfsz	wreg,f,c
 10902  00549C  D7FE               	goto	u7327
 10903  00549E  0100               	movlb	0	; () banked
 10904  0054A0  0100               	movlb	0	; () banked
 10905  0054A2  4BA4               	infsnz	setServo@i_723& (0+255),f,b
 10906  0054A4  2BA5               	incf	(setServo@i_723+1)& (0+255),f,b
 10907  0054A6                     l128:
 10908                           
 10909                           ; BSR set to: 0
 10910  0054A6  0100               	movlb	0	; () banked
 10911  0054A8  C09D  F09F         	movff	setServo@degree,??_setServo
 10912  0054AC  0100               	movlb	0	; () banked
 10913  0054AE  C09E  F0A0         	movff	setServo@degree+1,??_setServo+1
 10914  0054B2  0100               	movlb	0	; () banked
 10915  0054B4  1F9F               	comf	??_setServo& (0+255),f,b
 10916  0054B6  1FA0               	comf	(??_setServo+1)& (0+255),f,b
 10917  0054B8  4B9F               	infsnz	??_setServo& (0+255),f,b
 10918  0054BA  2BA0               	incf	(??_setServo+1)& (0+255),f,b
 10919  0054BC  0EB4               	movlw	180
 10920  0054BE  0100               	movlb	0	; () banked
 10921  0054C0  279F               	addwf	??_setServo& (0+255),f,b
 10922  0054C2  0E00               	movlw	0
 10923  0054C4  23A0               	addwfc	(??_setServo+1)& (0+255),f,b
 10924  0054C6  0100               	movlb	0	; () banked
 10925  0054C8  0100               	movlb	0	; () banked
 10926  0054CA  51A5               	movf	(setServo@i_723+1)& (0+255),w,b
 10927  0054CC  0A80               	xorlw	128
 10928  0054CE  0100               	movlb	0	; () banked
 10929  0054D0  6FA1               	movwf	(??_setServo+2)& (0+255),b
 10930  0054D2  519F               	movf	??_setServo& (0+255),w,b
 10931  0054D4  0100               	movlb	0	; () banked
 10932  0054D6  0100               	movlb	0	; () banked
 10933  0054D8  5DA4               	subwf	setServo@i_723& (0+255),w,b
 10934  0054DA  0100               	movlb	0	; () banked
 10935  0054DC  51A0               	movf	(??_setServo+1)& (0+255),w,b
 10936  0054DE  0A80               	xorlw	128
 10937  0054E0  0100               	movlb	0	; () banked
 10938  0054E2  59A1               	subwfb	(??_setServo+2)& (0+255),w,b
 10939  0054E4  A0D8               	btfss	status,0,c
 10940  0054E6  D7D8               	goto	l8351
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;functions.c: 109: }
 10944                           ;functions.c: 111: for (int i = 0; i < 1775; i++)
 10945                           
 10946                           ; BSR set to: 0
 10947  0054E8  0E00               	movlw	0
 10948  0054EA  0100               	movlb	0	; () banked
 10949  0054EC  0100               	movlb	0	; () banked
 10950  0054EE  6FAB               	movwf	(setServo@i_724+1)& (0+255),b
 10951  0054F0  0E00               	movlw	0
 10952  0054F2  0100               	movlb	0	; () banked
 10953  0054F4  6FAA               	movwf	setServo@i_724& (0+255),b
 10954  0054F6                     
 10955                           ; BSR set to: 0
 10956  0054F6  0100               	movlb	0	; () banked
 10957  0054F8  0100               	movlb	0	; () banked
 10958  0054FA  51AB               	movf	(setServo@i_724+1)& (0+255),w,b
 10959  0054FC  0A80               	xorlw	128
 10960  0054FE  0F7A               	addlw	-134
 10961  005500  0EEF               	movlw	239
 10962  005502  B4D8               	btfsc	status,2,c
 10963  005504  5DAA               	subwf	setServo@i_724& (0+255),w,b
 10964  005506  B0D8               	btfsc	status,0,c
 10965  005508  D008               	goto	l8365
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;functions.c: 112: {
 10969                           ;functions.c: 113: _delay((unsigned long)((10)*(12000000/4000000.0)));
 10970                           
 10971                           ; BSR set to: 0
 10972                           
 10973                           ; BSR set to: 0
 10974  00550A  0E0A               	movlw	10
 10975  00550C                     u7337:
 10976  00550C  2EE8               	decfsz	wreg,f,c
 10977  00550E  D7FE               	goto	u7337
 10978  005510  0100               	movlb	0	; () banked
 10979  005512  0100               	movlb	0	; () banked
 10980  005514  4BAA               	infsnz	setServo@i_724& (0+255),f,b
 10981  005516  2BAB               	incf	(setServo@i_724+1)& (0+255),f,b
 10982  005518  D7EE               	goto	L16
 10983  00551A                     l8365:
 10984                           
 10985                           ; BSR set to: 0
 10986  00551A  0100               	movlb	0	; () banked
 10987  00551C  0100               	movlb	0	; () banked
 10988  00551E  4BA6               	infsnz	setServo@j& (0+255),f,b
 10989  005520  2BA7               	incf	(setServo@j+1)& (0+255),f,b
 10990  005522  D76B               	goto	L17
 10991  005524                     __end_of_setServo:
 10992                           	opt stack 0
 10993                           tblptru	equ	0xFF8
 10994                           tblptrh	equ	0xFF7
 10995                           tblptrl	equ	0xFF6
 10996                           tablat	equ	0xFF5
 10997                           prodh	equ	0xFF4
 10998                           prodl	equ	0xFF3
 10999                           intcon	equ	0xFF2
 11000                           wreg	equ	0xFE8
 11001                           indf2	equ	0xFDF
 11002                           postinc2	equ	0xFDE
 11003                           postdec2	equ	0xFDD
 11004                           fsr2h	equ	0xFDA
 11005                           fsr2l	equ	0xFD9
 11006                           status	equ	0xFD8
 11007                           
 11008 ;; *************** function _lcdInit *****************
 11009 ;; Defined at:
 11010 ;;		line 54 in file "lcd.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;		None
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;  i               2   83[BANK0 ] int 
 11015 ;;  i               2   81[BANK0 ] int 
 11016 ;;  i               2   79[BANK0 ] int 
 11017 ;;  i               2   77[BANK0 ] int 
 11018 ;; Return value:  Size  Location     Type
 11019 ;;		None               void
 11020 ;; Registers used:
 11021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11028 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11029 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11030 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11031 ;;Total ram usage:        9 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; Hardware stack levels required when called:   13
 11034 ;; This function calls:
 11035 ;;		_intro
 11036 ;;		_lcdWriteCmd
 11037 ;;		_writeDigit
 11038 ;; This function is called by:
 11039 ;;		_main
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text30
 11044  005790                     __ptext30:
 11045                           	opt stack 0
 11046  005790                     _lcdInit:
 11047                           	opt stack 17
 11048                           
 11049                           ;lcd.c: 57: TRISDbits.TRISD0 = 0;
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;incstack = 0
 11053  005790  9095               	bcf	3989,0,c	;volatile
 11054                           
 11055                           ;lcd.c: 58: TRISDbits.TRISD1 = 0;
 11056  005792  9295               	bcf	3989,1,c	;volatile
 11057                           
 11058                           ;lcd.c: 59: TRISDbits.TRISD2 = 0;
 11059  005794  9495               	bcf	3989,2,c	;volatile
 11060                           
 11061                           ;lcd.c: 60: TRISDbits.TRISD3 = 0;
 11062  005796  9695               	bcf	3989,3,c	;volatile
 11063                           
 11064                           ;lcd.c: 62: TRISEbits.TRISE0 = 0;
 11065  005798  9096               	bcf	3990,0,c	;volatile
 11066                           
 11067                           ;lcd.c: 63: LATEbits.LATE0 = 0;
 11068  00579A  908D               	bcf	3981,0,c	;volatile
 11069                           
 11070                           ;lcd.c: 65: TRISEbits.TRISE1 = 0;
 11071  00579C  9296               	bcf	3990,1,c	;volatile
 11072                           
 11073                           ;lcd.c: 66: LATEbits.LATE1 = 0;
 11074  00579E  928D               	bcf	3981,1,c	;volatile
 11075                           
 11076                           ;lcd.c: 69: _delay((unsigned long)((15)*(12000000/4000.0)));
 11077  0057A0  0E3B               	movlw	59
 11078  0057A2  0100               	movlb	0	; () banked
 11079  0057A4  6FAC               	movwf	??_lcdInit& (0+255),b
 11080  0057A6  0E70               	movlw	112
 11081  0057A8                     u7347:
 11082  0057A8  2EE8               	decfsz	wreg,f,c
 11083  0057AA  D7FE               	goto	u7347
 11084  0057AC  2FAC               	decfsz	??_lcdInit& (0+255),f,b
 11085  0057AE  D7FC               	goto	u7347
 11086                           
 11087                           ;lcd.c: 73: LATEbits.LATE0 = 0;
 11088  0057B0  908D               	bcf	3981,0,c	;volatile
 11089                           
 11090                           ;lcd.c: 74: writeDigit(0x03);
 11091  0057B2  0E03               	movlw	3
 11092  0057B4  ECC9  F036         	call	_writeDigit
 11093                           
 11094                           ;lcd.c: 75: for(int i = 0; i < 100; i++) _delay((unsigned long)((41)*(12000000/4000000.0
      +                          )));
 11095  0057B8  0E00               	movlw	0
 11096  0057BA  0100               	movlb	0	; () banked
 11097  0057BC  0100               	movlb	0	; () banked
 11098  0057BE  6FAE               	movwf	(lcdInit@i+1)& (0+255),b
 11099  0057C0  0E00               	movlw	0
 11100  0057C2  0100               	movlb	0	; () banked
 11101  0057C4  6FAD               	movwf	lcdInit@i& (0+255),b
 11102  0057C6                     
 11103                           ; BSR set to: 0
 11104  0057C6  0100               	movlb	0	; () banked
 11105  0057C8  0100               	movlb	0	; () banked
 11106  0057CA  51AE               	movf	(lcdInit@i+1)& (0+255),w,b
 11107  0057CC  0A80               	xorlw	128
 11108  0057CE  0F80               	addlw	-128
 11109  0057D0  0E64               	movlw	100
 11110  0057D2  B4D8               	btfsc	status,2,c
 11111  0057D4  5DAD               	subwf	lcdInit@i& (0+255),w,b
 11112  0057D6  B0D8               	btfsc	status,0,c
 11113  0057D8  D008               	goto	l8277
 11114                           
 11115                           ; BSR set to: 0
 11116                           
 11117                           ; BSR set to: 0
 11118                           
 11119                           ; BSR set to: 0
 11120  0057DA  0E29               	movlw	41
 11121  0057DC                     u7357:
 11122  0057DC  2EE8               	decfsz	wreg,f,c
 11123  0057DE  D7FE               	goto	u7357
 11124  0057E0  0100               	movlb	0	; () banked
 11125  0057E2  0100               	movlb	0	; () banked
 11126  0057E4  4BAD               	infsnz	lcdInit@i& (0+255),f,b
 11127  0057E6  2BAE               	incf	(lcdInit@i+1)& (0+255),f,b
 11128  0057E8  D7EE               	goto	L18
 11129  0057EA                     l8277:
 11130                           
 11131                           ; BSR set to: 0
 11132                           ;lcd.c: 77: writeDigit(0x03);
 11133  0057EA  0E03               	movlw	3
 11134  0057EC  ECC9  F036         	call	_writeDigit
 11135                           
 11136                           ;lcd.c: 78: for(int i = 0; i < 10; i++) _delay((unsigned long)((12)*(12000000/4000000.0)
      +                          ));
 11137  0057F0  0E00               	movlw	0
 11138  0057F2  0100               	movlb	0	; () banked
 11139  0057F4  0100               	movlb	0	; () banked
 11140  0057F6  6FB0               	movwf	(lcdInit@i_979+1)& (0+255),b
 11141  0057F8  0E00               	movlw	0
 11142  0057FA  0100               	movlb	0	; () banked
 11143  0057FC  6FAF               	movwf	lcdInit@i_979& (0+255),b
 11144  0057FE                     
 11145                           ; BSR set to: 0
 11146  0057FE  0100               	movlb	0	; () banked
 11147  005800  0100               	movlb	0	; () banked
 11148  005802  51B0               	movf	(lcdInit@i_979+1)& (0+255),w,b
 11149  005804  0A80               	xorlw	128
 11150  005806  0F80               	addlw	-128
 11151  005808  0E0A               	movlw	10
 11152  00580A  B4D8               	btfsc	status,2,c
 11153  00580C  5DAF               	subwf	lcdInit@i_979& (0+255),w,b
 11154  00580E  B0D8               	btfsc	status,0,c
 11155  005810  D008               	goto	l8289
 11156                           
 11157                           ; BSR set to: 0
 11158                           
 11159                           ; BSR set to: 0
 11160                           
 11161                           ; BSR set to: 0
 11162  005812  0E0C               	movlw	12
 11163  005814                     u7367:
 11164  005814  2EE8               	decfsz	wreg,f,c
 11165  005816  D7FE               	goto	u7367
 11166  005818  0100               	movlb	0	; () banked
 11167  00581A  0100               	movlb	0	; () banked
 11168  00581C  4BAF               	infsnz	lcdInit@i_979& (0+255),f,b
 11169  00581E  2BB0               	incf	(lcdInit@i_979+1)& (0+255),f,b
 11170  005820  D7EE               	goto	L19
 11171  005822                     l8289:
 11172                           
 11173                           ; BSR set to: 0
 11174                           ;lcd.c: 80: writeDigit(0x03);
 11175  005822  0E03               	movlw	3
 11176  005824  ECC9  F036         	call	_writeDigit
 11177                           
 11178                           ;lcd.c: 81: for(int i = 0; i < 10; i++) _delay((unsigned long)((12)*(12000000/4000000.0)
      +                          ));
 11179  005828  0E00               	movlw	0
 11180  00582A  0100               	movlb	0	; () banked
 11181  00582C  0100               	movlb	0	; () banked
 11182  00582E  6FB2               	movwf	(lcdInit@i_980+1)& (0+255),b
 11183  005830  0E00               	movlw	0
 11184  005832  0100               	movlb	0	; () banked
 11185  005834  6FB1               	movwf	lcdInit@i_980& (0+255),b
 11186  005836                     
 11187                           ; BSR set to: 0
 11188  005836  0100               	movlb	0	; () banked
 11189  005838  0100               	movlb	0	; () banked
 11190  00583A  51B2               	movf	(lcdInit@i_980+1)& (0+255),w,b
 11191  00583C  0A80               	xorlw	128
 11192  00583E  0F80               	addlw	-128
 11193  005840  0E0A               	movlw	10
 11194  005842  B4D8               	btfsc	status,2,c
 11195  005844  5DB1               	subwf	lcdInit@i_980& (0+255),w,b
 11196  005846  B0D8               	btfsc	status,0,c
 11197  005848  D008               	goto	l8301
 11198                           
 11199                           ; BSR set to: 0
 11200                           
 11201                           ; BSR set to: 0
 11202                           
 11203                           ; BSR set to: 0
 11204  00584A  0E0C               	movlw	12
 11205  00584C                     u7377:
 11206  00584C  2EE8               	decfsz	wreg,f,c
 11207  00584E  D7FE               	goto	u7377
 11208  005850  0100               	movlb	0	; () banked
 11209  005852  0100               	movlb	0	; () banked
 11210  005854  4BB1               	infsnz	lcdInit@i_980& (0+255),f,b
 11211  005856  2BB2               	incf	(lcdInit@i_980+1)& (0+255),f,b
 11212  005858  D7EE               	goto	L20
 11213  00585A                     l8301:
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;lcd.c: 83: writeDigit(0x02);
 11217  00585A  0E02               	movlw	2
 11218  00585C  ECC9  F036         	call	_writeDigit
 11219                           
 11220                           ;lcd.c: 84: for(int i = 0; i < 10; i++) _delay((unsigned long)((12)*(12000000/4000000.0)
      +                          ));
 11221  005860  0E00               	movlw	0
 11222  005862  0100               	movlb	0	; () banked
 11223  005864  0100               	movlb	0	; () banked
 11224  005866  6FB4               	movwf	(lcdInit@i_981+1)& (0+255),b
 11225  005868  0E00               	movlw	0
 11226  00586A  0100               	movlb	0	; () banked
 11227  00586C  6FB3               	movwf	lcdInit@i_981& (0+255),b
 11228  00586E                     
 11229                           ; BSR set to: 0
 11230  00586E  0100               	movlb	0	; () banked
 11231  005870  0100               	movlb	0	; () banked
 11232  005872  51B4               	movf	(lcdInit@i_981+1)& (0+255),w,b
 11233  005874  0A80               	xorlw	128
 11234  005876  0F80               	addlw	-128
 11235  005878  0E0A               	movlw	10
 11236  00587A  B4D8               	btfsc	status,2,c
 11237  00587C  5DB3               	subwf	lcdInit@i_981& (0+255),w,b
 11238  00587E  B0D8               	btfsc	status,0,c
 11239  005880  D008               	goto	l8313
 11240                           
 11241                           ; BSR set to: 0
 11242                           
 11243                           ; BSR set to: 0
 11244                           
 11245                           ; BSR set to: 0
 11246  005882  0E0C               	movlw	12
 11247  005884                     u7387:
 11248  005884  2EE8               	decfsz	wreg,f,c
 11249  005886  D7FE               	goto	u7387
 11250  005888  0100               	movlb	0	; () banked
 11251  00588A  0100               	movlb	0	; () banked
 11252  00588C  4BB3               	infsnz	lcdInit@i_981& (0+255),f,b
 11253  00588E  2BB4               	incf	(lcdInit@i_981+1)& (0+255),f,b
 11254  005890  D7EE               	goto	L21
 11255  005892                     l8313:
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;lcd.c: 92: lcdWriteCmd(0x28);
 11259  005892  0E28               	movlw	40
 11260  005894  EC65  F035         	call	_lcdWriteCmd
 11261                           
 11262                           ;lcd.c: 98: lcdWriteCmd(0x01);
 11263  005898  0E01               	movlw	1
 11264  00589A  EC65  F035         	call	_lcdWriteCmd
 11265                           
 11266                           ;lcd.c: 101: lcdWriteCmd(0x06);
 11267  00589E  0E06               	movlw	6
 11268  0058A0  EC65  F035         	call	_lcdWriteCmd
 11269                           
 11270                           ;lcd.c: 104: lcdWriteCmd(0x0C);
 11271  0058A4  0E0C               	movlw	12
 11272  0058A6  EC65  F035         	call	_lcdWriteCmd
 11273                           
 11274                           ;lcd.c: 106: intro();
 11275  0058AA  ECDA  F032         	call	_intro	;wreg free
 11276  0058AE  0012               	return	
 11277  0058B0                     __end_of_lcdInit:
 11278                           	opt stack 0
 11279                           tblptru	equ	0xFF8
 11280                           tblptrh	equ	0xFF7
 11281                           tblptrl	equ	0xFF6
 11282                           tablat	equ	0xFF5
 11283                           prodh	equ	0xFF4
 11284                           prodl	equ	0xFF3
 11285                           intcon	equ	0xFF2
 11286                           wreg	equ	0xFE8
 11287                           indf2	equ	0xFDF
 11288                           postinc2	equ	0xFDE
 11289                           postdec2	equ	0xFDD
 11290                           fsr2h	equ	0xFDA
 11291                           fsr2l	equ	0xFD9
 11292                           status	equ	0xFD8
 11293                           
 11294 ;; *************** function _intro *****************
 11295 ;; Defined at:
 11296 ;;		line 168 in file "lcd.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;		None
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;  i               2   74[BANK0 ] int 
 11301 ;; Return value:  Size  Location     Type
 11302 ;;		None               void
 11303 ;; Registers used:
 11304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11313 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11314 ;;Total ram usage:        3 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:   12
 11317 ;; This function calls:
 11318 ;;		_lcdClean
 11319 ;;		_lcdSetPos
 11320 ;;		_lcdWriteStrC
 11321 ;; This function is called by:
 11322 ;;		_lcdInit
 11323 ;; This function uses a non-reentrant model
 11324 ;;
 11325                           
 11326                           	psect	text31
 11327  0065B4                     __ptext31:
 11328                           	opt stack 0
 11329  0065B4                     _intro:
 11330                           	opt stack 17
 11331                           
 11332                           ;lcd.c: 171: int i;
 11333                           ;lcd.c: 172: lcdSetPos(0,0);
 11334                           
 11335                           ;incstack = 0
 11336  0065B4  0100               	movlb	0	; () banked
 11337  0065B6  6FA9               	movwf	??_intro& (0+255),b
 11338  0065B8  0E00               	movlw	0
 11339  0065BA  0100               	movlb	0	; () banked
 11340  0065BC  0100               	movlb	0	; () banked
 11341  0065BE  6FA3               	movwf	lcdSetPos@y& (0+255),b
 11342  0065C0  0100               	movlb	0	; () banked
 11343  0065C2  51A9               	movf	??_intro& (0+255),w,b
 11344  0065C4  0E00               	movlw	0
 11345  0065C6  EC06  F035         	call	_lcdSetPos
 11346                           
 11347                           ;lcd.c: 173: lcdWriteStrC("Roberino");
 11348  0065CA  0E0F               	movlw	high STR_9
 11349  0065CC  0100               	movlb	0	; () banked
 11350  0065CE  0100               	movlb	0	; () banked
 11351  0065D0  6FA1               	movwf	(lcdWriteStrC@s+1)& (0+255),b
 11352  0065D2  0EBC               	movlw	low STR_9
 11353  0065D4  0100               	movlb	0	; () banked
 11354  0065D6  0100               	movlb	0	; () banked
 11355  0065D8  6FA0               	movwf	lcdWriteStrC@s& (0+255),b
 11356  0065DA  ECD5  F034         	call	_lcdWriteStrC	;wreg free
 11357                           
 11358                           ;lcd.c: 174: lcdSetPos(0,1);
 11359  0065DE  0100               	movlb	0	; () banked
 11360  0065E0  6FA9               	movwf	??_intro& (0+255),b
 11361  0065E2  0E01               	movlw	1
 11362  0065E4  0100               	movlb	0	; () banked
 11363  0065E6  0100               	movlb	0	; () banked
 11364  0065E8  6FA3               	movwf	lcdSetPos@y& (0+255),b
 11365  0065EA  0100               	movlb	0	; () banked
 11366  0065EC  51A9               	movf	??_intro& (0+255),w,b
 11367  0065EE  0E00               	movlw	0
 11368  0065F0  EC06  F035         	call	_lcdSetPos
 11369                           
 11370                           ;lcd.c: 175: lcdWriteStrC("Singh Be Rosa");
 11371  0065F4  0E0F               	movlw	high STR_10
 11372  0065F6  0100               	movlb	0	; () banked
 11373  0065F8  0100               	movlb	0	; () banked
 11374  0065FA  6FA1               	movwf	(lcdWriteStrC@s+1)& (0+255),b
 11375  0065FC  0E98               	movlw	low STR_10
 11376  0065FE  0100               	movlb	0	; () banked
 11377  006600  0100               	movlb	0	; () banked
 11378  006602  6FA0               	movwf	lcdWriteStrC@s& (0+255),b
 11379  006604  ECD5  F034         	call	_lcdWriteStrC	;wreg free
 11380                           
 11381                           ;lcd.c: 177: for(i = 0; i < 100; i++) _delay((unsigned long)((50)*(12000000/4000.0)));
 11382  006608  0E00               	movlw	0
 11383  00660A  0100               	movlb	0	; () banked
 11384  00660C  0100               	movlb	0	; () banked
 11385  00660E  6FAB               	movwf	(intro@i+1)& (0+255),b
 11386  006610  0E00               	movlw	0
 11387  006612  0100               	movlb	0	; () banked
 11388  006614  6FAA               	movwf	intro@i& (0+255),b
 11389  006616                     
 11390                           ; BSR set to: 0
 11391  006616  0100               	movlb	0	; () banked
 11392  006618  0100               	movlb	0	; () banked
 11393  00661A  51AB               	movf	(intro@i+1)& (0+255),w,b
 11394  00661C  0A80               	xorlw	128
 11395  00661E  0F80               	addlw	-128
 11396  006620  0E64               	movlw	100
 11397  006622  B4D8               	btfsc	status,2,c
 11398  006624  5DAA               	subwf	intro@i& (0+255),w,b
 11399  006626  B0D8               	btfsc	status,0,c
 11400  006628  D00E               	goto	l7931
 11401                           
 11402                           ; BSR set to: 0
 11403                           
 11404                           ; BSR set to: 0
 11405                           
 11406                           ; BSR set to: 0
 11407  00662A  0EC3               	movlw	195
 11408  00662C  0100               	movlb	0	; () banked
 11409  00662E  6FA9               	movwf	??_intro& (0+255),b
 11410  006630  0ECD               	movlw	205
 11411  006632                     u7397:
 11412  006632  2EE8               	decfsz	wreg,f,c
 11413  006634  D7FE               	goto	u7397
 11414  006636  2FA9               	decfsz	??_intro& (0+255),f,b
 11415  006638  D7FC               	goto	u7397
 11416  00663A  F000               	nop	
 11417  00663C  0100               	movlb	0	; () banked
 11418  00663E  0100               	movlb	0	; () banked
 11419  006640  4BAA               	infsnz	intro@i& (0+255),f,b
 11420  006642  2BAB               	incf	(intro@i+1)& (0+255),f,b
 11421  006644  D7E8               	goto	L22
 11422  006646                     l7931:
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;lcd.c: 178: lcdClean();
 11426  006646  ECB7  F028         	call	_lcdClean	;wreg free
 11427  00664A  0012               	return	
 11428  00664C                     __end_of_intro:
 11429                           	opt stack 0
 11430                           tblptru	equ	0xFF8
 11431                           tblptrh	equ	0xFF7
 11432                           tblptrl	equ	0xFF6
 11433                           tablat	equ	0xFF5
 11434                           prodh	equ	0xFF4
 11435                           prodl	equ	0xFF3
 11436                           intcon	equ	0xFF2
 11437                           wreg	equ	0xFE8
 11438                           indf2	equ	0xFDF
 11439                           postinc2	equ	0xFDE
 11440                           postdec2	equ	0xFDD
 11441                           fsr2h	equ	0xFDA
 11442                           fsr2l	equ	0xFD9
 11443                           status	equ	0xFD8
 11444                           
 11445 ;; *************** function _lcdWriteStrC *****************
 11446 ;; Defined at:
 11447 ;;		line 130 in file "lcd.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  s               2   64[BANK0 ] PTR const unsigned char 
 11450 ;;		 -> STR_10(14), STR_9(9), showAccelerometerVal@buffer(10), STR_5(15), 
 11451 ;;		 -> showTempLight@buffer(10), showDistance@buffer(10), STR_1(18), 
 11452 ;; Auto vars:     Size  Location     Type
 11453 ;;		None
 11454 ;; Return value:  Size  Location     Type
 11455 ;;		None               void
 11456 ;; Registers used:
 11457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11463 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11466 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11467 ;;Total ram usage:        2 bytes
 11468 ;; Hardware stack levels used:    1
 11469 ;; Hardware stack levels required when called:   10
 11470 ;; This function calls:
 11471 ;;		_lcdWriteChar
 11472 ;; This function is called by:
 11473 ;;		_showDistance
 11474 ;;		_intro
 11475 ;;		_showTempLight
 11476 ;; This function uses a non-reentrant model
 11477 ;;
 11478                           
 11479                           	psect	text32
 11480  0069AA                     __ptext32:
 11481                           	opt stack 0
 11482  0069AA                     _lcdWriteStrC:
 11483                           	opt stack 19
 11484                           
 11485                           ;lcd.c: 132: while(*s) lcdWriteChar(*s++);
 11486                           
 11487                           ;incstack = 0
 11488  0069AA  D019               	goto	l6849
 11489  0069AC                     l6845:
 11490  0069AC  0100               	movlb	0	; () banked
 11491  0069AE  C0A0  FFF6         	movff	lcdWriteStrC@s,tblptrl
 11492  0069B2  0100               	movlb	0	; () banked
 11493  0069B4  C0A1  FFF7         	movff	lcdWriteStrC@s+1,tblptrh
 11494  0069B8  0E00               	movlw	low (__smallconst shr (0+16))
 11495  0069BA  6EF8               	movwf	tblptru,c
 11496  0069BC  0E0E               	movlw	(high __ramtop+-1)
 11497  0069BE  64F7               	cpfsgt	tblptrh,c
 11498  0069C0  D003               	bra	u4717
 11499  0069C2  0008               	tblrd		*
 11500  0069C4  50F5               	movf	tablat,w,c
 11501  0069C6  D005               	bra	u4710
 11502  0069C8                     u4717:
 11503  0069C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 11504  0069CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 11505  0069D0  50EF               	movf	indf0,w,c
 11506  0069D2                     u4710:
 11507  0069D2  EC16  F038         	call	_lcdWriteChar
 11508  0069D6  0100               	movlb	0	; () banked
 11509  0069D8  0100               	movlb	0	; () banked
 11510  0069DA  4BA0               	infsnz	lcdWriteStrC@s& (0+255),f,b
 11511  0069DC  2BA1               	incf	(lcdWriteStrC@s+1)& (0+255),f,b
 11512  0069DE                     l6849:
 11513  0069DE  0100               	movlb	0	; () banked
 11514  0069E0  C0A0  FFF6         	movff	lcdWriteStrC@s,tblptrl
 11515  0069E4  0100               	movlb	0	; () banked
 11516  0069E6  C0A1  FFF7         	movff	lcdWriteStrC@s+1,tblptrh
 11517  0069EA  0E00               	movlw	low (__smallconst shr (0+16))
 11518  0069EC  6EF8               	movwf	tblptru,c
 11519  0069EE  0E0E               	movlw	(high __ramtop+-1)
 11520  0069F0  64F7               	cpfsgt	tblptrh,c
 11521  0069F2  D003               	bra	u4727
 11522  0069F4  0008               	tblrd		*
 11523  0069F6  50F5               	movf	tablat,w,c
 11524  0069F8  D005               	bra	u4720
 11525  0069FA                     u4727:
 11526  0069FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 11527  0069FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 11528  006A02  50EF               	movf	indf0,w,c
 11529  006A04                     u4720:
 11530  006A04  0900               	iorlw	0
 11531  006A06  B4D8               	btfsc	status,2,c
 11532  006A08  0012               	return	
 11533  006A0A  D7D0               	goto	l6845
 11534  006A0C                     __end_of_lcdWriteStrC:
 11535                           	opt stack 0
 11536                           tblptru	equ	0xFF8
 11537                           tblptrh	equ	0xFF7
 11538                           tblptrl	equ	0xFF6
 11539                           tablat	equ	0xFF5
 11540                           prodh	equ	0xFF4
 11541                           prodl	equ	0xFF3
 11542                           intcon	equ	0xFF2
 11543                           indf0	equ	0xFEF
 11544                           fsr0h	equ	0xFEA
 11545                           fsr0l	equ	0xFE9
 11546                           wreg	equ	0xFE8
 11547                           indf2	equ	0xFDF
 11548                           postinc2	equ	0xFDE
 11549                           postdec2	equ	0xFDD
 11550                           fsr2h	equ	0xFDA
 11551                           fsr2l	equ	0xFD9
 11552                           status	equ	0xFD8
 11553                           
 11554 ;; *************** function _lcdClean *****************
 11555 ;; Defined at:
 11556 ;;		line 139 in file "lcd.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;		None
 11559 ;; Auto vars:     Size  Location     Type
 11560 ;;  i               2   71[BANK0 ] int 
 11561 ;; Return value:  Size  Location     Type
 11562 ;;		None               void
 11563 ;; Registers used:
 11564 ;;		wreg, status,2, status,0, cstack
 11565 ;; Tracked objects:
 11566 ;;		On entry : 0/0
 11567 ;;		On exit  : 0/0
 11568 ;;		Unchanged: 0/0
 11569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11571 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11572 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11573 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11574 ;;Total ram usage:        3 bytes
 11575 ;; Hardware stack levels used:    1
 11576 ;; Hardware stack levels required when called:   11
 11577 ;; This function calls:
 11578 ;;		_lcdClear
 11579 ;;		_lcdSetPos
 11580 ;;		_lcdWriteChar
 11581 ;; This function is called by:
 11582 ;;		_intro
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text33
 11587  00516E                     __ptext33:
 11588                           	opt stack 0
 11589  00516E                     _lcdClean:
 11590                           	opt stack 17
 11591                           
 11592                           ;lcd.c: 141: int i;
 11593                           ;lcd.c: 142: for(i = 0; i < 16; i++)
 11594                           
 11595                           ;incstack = 0
 11596  00516E  0E00               	movlw	0
 11597  005170  0100               	movlb	0	; () banked
 11598  005172  0100               	movlb	0	; () banked
 11599  005174  6FA8               	movwf	(lcdClean@i+1)& (0+255),b
 11600  005176  0E00               	movlw	0
 11601  005178  0100               	movlb	0	; () banked
 11602  00517A  6FA7               	movwf	lcdClean@i& (0+255),b
 11603  00517C                     
 11604                           ; BSR set to: 0
 11605  00517C  0100               	movlb	0	; () banked
 11606  00517E  0100               	movlb	0	; () banked
 11607  005180  51A8               	movf	(lcdClean@i+1)& (0+255),w,b
 11608  005182  0A80               	xorlw	128
 11609  005184  0F80               	addlw	-128
 11610  005186  0E10               	movlw	16
 11611  005188  B4D8               	btfsc	status,2,c
 11612  00518A  5DA7               	subwf	lcdClean@i& (0+255),w,b
 11613  00518C  B0D8               	btfsc	status,0,c
 11614  00518E  D01E               	goto	l6891
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;lcd.c: 143: {
 11618                           ;lcd.c: 144: lcdSetPos(i,0);
 11619                           
 11620                           ; BSR set to: 0
 11621                           
 11622                           ; BSR set to: 0
 11623  005190  0100               	movlb	0	; () banked
 11624  005192  6FA6               	movwf	??_lcdClean& (0+255),b
 11625  005194  0E00               	movlw	0
 11626  005196  0100               	movlb	0	; () banked
 11627  005198  0100               	movlb	0	; () banked
 11628  00519A  6FA3               	movwf	lcdSetPos@y& (0+255),b
 11629  00519C  0100               	movlb	0	; () banked
 11630  00519E  51A6               	movf	??_lcdClean& (0+255),w,b
 11631  0051A0  0100               	movlb	0	; () banked
 11632  0051A2  0100               	movlb	0	; () banked
 11633  0051A4  51A7               	movf	lcdClean@i& (0+255),w,b
 11634  0051A6  EC06  F035         	call	_lcdSetPos
 11635                           
 11636                           ;lcd.c: 145: lcdWriteChar('-');
 11637  0051AA  0E2D               	movlw	45
 11638  0051AC  EC16  F038         	call	_lcdWriteChar
 11639                           
 11640                           ;lcd.c: 146: _delay((unsigned long)((20)*(12000000/4000.0)));
 11641  0051B0  0E4E               	movlw	78
 11642  0051B2  0100               	movlb	0	; () banked
 11643  0051B4  6FA6               	movwf	??_lcdClean& (0+255),b
 11644  0051B6  0EEB               	movlw	235
 11645  0051B8                     u7407:
 11646  0051B8  2EE8               	decfsz	wreg,f,c
 11647  0051BA  D7FE               	goto	u7407
 11648  0051BC  2FA6               	decfsz	??_lcdClean& (0+255),f,b
 11649  0051BE  D7FC               	goto	u7407
 11650  0051C0  F000               	nop	
 11651  0051C2  0100               	movlb	0	; () banked
 11652  0051C4  0100               	movlb	0	; () banked
 11653  0051C6  4BA7               	infsnz	lcdClean@i& (0+255),f,b
 11654  0051C8  2BA8               	incf	(lcdClean@i+1)& (0+255),f,b
 11655  0051CA  D7D8               	goto	L23
 11656  0051CC                     l6891:
 11657                           
 11658                           ; BSR set to: 0
 11659                           ;lcd.c: 148: }
 11660                           ;lcd.c: 149: for(i = 0; i < 16; i++)
 11661  0051CC  0E00               	movlw	0
 11662  0051CE  0100               	movlb	0	; () banked
 11663  0051D0  0100               	movlb	0	; () banked
 11664  0051D2  6FA8               	movwf	(lcdClean@i+1)& (0+255),b
 11665  0051D4  0E00               	movlw	0
 11666  0051D6  0100               	movlb	0	; () banked
 11667  0051D8  6FA7               	movwf	lcdClean@i& (0+255),b
 11668  0051DA                     
 11669                           ; BSR set to: 0
 11670  0051DA  0100               	movlb	0	; () banked
 11671  0051DC  0100               	movlb	0	; () banked
 11672  0051DE  51A8               	movf	(lcdClean@i+1)& (0+255),w,b
 11673  0051E0  0A80               	xorlw	128
 11674  0051E2  0F80               	addlw	-128
 11675  0051E4  0E10               	movlw	16
 11676  0051E6  B4D8               	btfsc	status,2,c
 11677  0051E8  5DA7               	subwf	lcdClean@i& (0+255),w,b
 11678  0051EA  B0D8               	btfsc	status,0,c
 11679  0051EC  D030               	goto	l6905
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;lcd.c: 150: {
 11683                           ;lcd.c: 151: lcdSetPos(i,0);
 11684                           
 11685                           ; BSR set to: 0
 11686                           
 11687                           ; BSR set to: 0
 11688  0051EE  0100               	movlb	0	; () banked
 11689  0051F0  6FA6               	movwf	??_lcdClean& (0+255),b
 11690  0051F2  0E00               	movlw	0
 11691  0051F4  0100               	movlb	0	; () banked
 11692  0051F6  0100               	movlb	0	; () banked
 11693  0051F8  6FA3               	movwf	lcdSetPos@y& (0+255),b
 11694  0051FA  0100               	movlb	0	; () banked
 11695  0051FC  51A6               	movf	??_lcdClean& (0+255),w,b
 11696  0051FE  0100               	movlb	0	; () banked
 11697  005200  0100               	movlb	0	; () banked
 11698  005202  51A7               	movf	lcdClean@i& (0+255),w,b
 11699  005204  EC06  F035         	call	_lcdSetPos
 11700                           
 11701                           ;lcd.c: 152: lcdWriteChar(' ');
 11702  005208  0E20               	movlw	32
 11703  00520A  EC16  F038         	call	_lcdWriteChar
 11704                           
 11705                           ;lcd.c: 153: lcdSetPos(16-i,1);
 11706  00520E  0100               	movlb	0	; () banked
 11707  005210  6FA6               	movwf	??_lcdClean& (0+255),b
 11708  005212  0E01               	movlw	1
 11709  005214  0100               	movlb	0	; () banked
 11710  005216  0100               	movlb	0	; () banked
 11711  005218  6FA3               	movwf	lcdSetPos@y& (0+255),b
 11712  00521A  0100               	movlb	0	; () banked
 11713  00521C  51A6               	movf	??_lcdClean& (0+255),w,b
 11714  00521E  0100               	movlb	0	; () banked
 11715  005220  0100               	movlb	0	; () banked
 11716  005222  51A7               	movf	lcdClean@i& (0+255),w,b
 11717  005224  0800               	sublw	0
 11718  005226  0F10               	addlw	16
 11719  005228  EC06  F035         	call	_lcdSetPos
 11720                           
 11721                           ;lcd.c: 154: lcdWriteChar('-');
 11722  00522C  0E2D               	movlw	45
 11723  00522E  EC16  F038         	call	_lcdWriteChar
 11724                           
 11725                           ;lcd.c: 155: _delay((unsigned long)((20)*(12000000/4000.0)));
 11726  005232  0E4E               	movlw	78
 11727  005234  0100               	movlb	0	; () banked
 11728  005236  6FA6               	movwf	??_lcdClean& (0+255),b
 11729  005238  0EEB               	movlw	235
 11730  00523A                     u7417:
 11731  00523A  2EE8               	decfsz	wreg,f,c
 11732  00523C  D7FE               	goto	u7417
 11733  00523E  2FA6               	decfsz	??_lcdClean& (0+255),f,b
 11734  005240  D7FC               	goto	u7417
 11735  005242  F000               	nop	
 11736  005244  0100               	movlb	0	; () banked
 11737  005246  0100               	movlb	0	; () banked
 11738  005248  4BA7               	infsnz	lcdClean@i& (0+255),f,b
 11739  00524A  2BA8               	incf	(lcdClean@i+1)& (0+255),f,b
 11740  00524C  D7C6               	goto	L24
 11741  00524E                     l6905:
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;lcd.c: 157: }
 11745                           ;lcd.c: 158: for(i = 0; i < 16; i++)
 11746  00524E  0E00               	movlw	0
 11747  005250  0100               	movlb	0	; () banked
 11748  005252  0100               	movlb	0	; () banked
 11749  005254  6FA8               	movwf	(lcdClean@i+1)& (0+255),b
 11750  005256  0E00               	movlw	0
 11751  005258  0100               	movlb	0	; () banked
 11752  00525A  6FA7               	movwf	lcdClean@i& (0+255),b
 11753  00525C                     
 11754                           ; BSR set to: 0
 11755  00525C  0100               	movlb	0	; () banked
 11756  00525E  0100               	movlb	0	; () banked
 11757  005260  51A8               	movf	(lcdClean@i+1)& (0+255),w,b
 11758  005262  0A80               	xorlw	128
 11759  005264  0F80               	addlw	-128
 11760  005266  0E10               	movlw	16
 11761  005268  B4D8               	btfsc	status,2,c
 11762  00526A  5DA7               	subwf	lcdClean@i& (0+255),w,b
 11763  00526C  B0D8               	btfsc	status,0,c
 11764  00526E  D01E               	goto	l6919
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;lcd.c: 159: {
 11768                           ;lcd.c: 160: lcdSetPos(i,1);
 11769                           
 11770                           ; BSR set to: 0
 11771                           
 11772                           ; BSR set to: 0
 11773  005270  0100               	movlb	0	; () banked
 11774  005272  6FA6               	movwf	??_lcdClean& (0+255),b
 11775  005274  0E01               	movlw	1
 11776  005276  0100               	movlb	0	; () banked
 11777  005278  0100               	movlb	0	; () banked
 11778  00527A  6FA3               	movwf	lcdSetPos@y& (0+255),b
 11779  00527C  0100               	movlb	0	; () banked
 11780  00527E  51A6               	movf	??_lcdClean& (0+255),w,b
 11781  005280  0100               	movlb	0	; () banked
 11782  005282  0100               	movlb	0	; () banked
 11783  005284  51A7               	movf	lcdClean@i& (0+255),w,b
 11784  005286  EC06  F035         	call	_lcdSetPos
 11785                           
 11786                           ;lcd.c: 161: lcdWriteChar(' ');
 11787  00528A  0E20               	movlw	32
 11788  00528C  EC16  F038         	call	_lcdWriteChar
 11789                           
 11790                           ;lcd.c: 162: _delay((unsigned long)((20)*(12000000/4000.0)));
 11791  005290  0E4E               	movlw	78
 11792  005292  0100               	movlb	0	; () banked
 11793  005294  6FA6               	movwf	??_lcdClean& (0+255),b
 11794  005296  0EEB               	movlw	235
 11795  005298                     u7427:
 11796  005298  2EE8               	decfsz	wreg,f,c
 11797  00529A  D7FE               	goto	u7427
 11798  00529C  2FA6               	decfsz	??_lcdClean& (0+255),f,b
 11799  00529E  D7FC               	goto	u7427
 11800  0052A0  F000               	nop	
 11801  0052A2  0100               	movlb	0	; () banked
 11802  0052A4  0100               	movlb	0	; () banked
 11803  0052A6  4BA7               	infsnz	lcdClean@i& (0+255),f,b
 11804  0052A8  2BA8               	incf	(lcdClean@i+1)& (0+255),f,b
 11805  0052AA  D7D8               	goto	L25
 11806  0052AC                     l6919:
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;lcd.c: 164: }
 11810                           ;lcd.c: 165: lcdClear();
 11811  0052AC  EC37  F038         	call	_lcdClear	;wreg free
 11812  0052B0  0012               	return	
 11813  0052B2                     __end_of_lcdClean:
 11814                           	opt stack 0
 11815                           tblptru	equ	0xFF8
 11816                           tblptrh	equ	0xFF7
 11817                           tblptrl	equ	0xFF6
 11818                           tablat	equ	0xFF5
 11819                           prodh	equ	0xFF4
 11820                           prodl	equ	0xFF3
 11821                           intcon	equ	0xFF2
 11822                           indf0	equ	0xFEF
 11823                           fsr0h	equ	0xFEA
 11824                           fsr0l	equ	0xFE9
 11825                           wreg	equ	0xFE8
 11826                           indf2	equ	0xFDF
 11827                           postinc2	equ	0xFDE
 11828                           postdec2	equ	0xFDD
 11829                           fsr2h	equ	0xFDA
 11830                           fsr2l	equ	0xFD9
 11831                           status	equ	0xFD8
 11832                           
 11833 ;; *************** function _lcdWriteChar *****************
 11834 ;; Defined at:
 11835 ;;		line 43 in file "lcd.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;  n               1    wreg     unsigned char 
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;  n               1   63[BANK0 ] unsigned char 
 11840 ;; Return value:  Size  Location     Type
 11841 ;;		None               void
 11842 ;; Registers used:
 11843 ;;		wreg, status,2, status,0, cstack
 11844 ;; Tracked objects:
 11845 ;;		On entry : 0/0
 11846 ;;		On exit  : 0/0
 11847 ;;		Unchanged: 0/0
 11848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11850 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11852 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11853 ;;Total ram usage:        1 bytes
 11854 ;; Hardware stack levels used:    1
 11855 ;; Hardware stack levels required when called:    9
 11856 ;; This function calls:
 11857 ;;		_writeByte
 11858 ;; This function is called by:
 11859 ;;		_lcdWriteStrC
 11860 ;;		_lcdClean
 11861 ;;		_lcdWriteStr
 11862 ;; This function uses a non-reentrant model
 11863 ;;
 11864                           
 11865                           	psect	text34
 11866  00702C                     __ptext34:
 11867                           	opt stack 0
 11868  00702C                     _lcdWriteChar:
 11869                           	opt stack 19
 11870                           
 11871                           ;incstack = 0
 11872                           ;lcdWriteChar@n stored from wreg
 11873  00702C  CFE8 F09F          	movff	wreg,lcdWriteChar@n
 11874                           
 11875                           ;lcd.c: 46: LATEbits.LATE0 = 1;
 11876  007030  808D               	bsf	3981,0,c	;volatile
 11877                           
 11878                           ;lcd.c: 48: writeByte(n);
 11879  007032  0100               	movlb	0	; () banked
 11880  007034  0100               	movlb	0	; () banked
 11881  007036  519F               	movf	lcdWriteChar@n& (0+255),w,b
 11882  007038  EC07  F038         	call	_writeByte
 11883                           
 11884                           ;lcd.c: 51: _delay((unsigned long)((43)*(12000000/4000000.0)));
 11885  00703C  0E2B               	movlw	43
 11886  00703E                     u7437:
 11887  00703E  2EE8               	decfsz	wreg,f,c
 11888  007040  D7FE               	goto	u7437
 11889  007042  0012               	return	
 11890  007044                     __end_of_lcdWriteChar:
 11891                           	opt stack 0
 11892                           tblptru	equ	0xFF8
 11893                           tblptrh	equ	0xFF7
 11894                           tblptrl	equ	0xFF6
 11895                           tablat	equ	0xFF5
 11896                           prodh	equ	0xFF4
 11897                           prodl	equ	0xFF3
 11898                           intcon	equ	0xFF2
 11899                           indf0	equ	0xFEF
 11900                           fsr0h	equ	0xFEA
 11901                           fsr0l	equ	0xFE9
 11902                           wreg	equ	0xFE8
 11903                           indf2	equ	0xFDF
 11904                           postinc2	equ	0xFDE
 11905                           postdec2	equ	0xFDD
 11906                           fsr2h	equ	0xFDA
 11907                           fsr2l	equ	0xFD9
 11908                           status	equ	0xFD8
 11909                           
 11910 ;; *************** function _lcdSetPos *****************
 11911 ;; Defined at:
 11912 ;;		line 115 in file "lcd.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  x               1    wreg     unsigned char 
 11915 ;;  y               1   67[BANK0 ] unsigned char 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  x               1   69[BANK0 ] unsigned char 
 11918 ;;  p               1   68[BANK0 ] unsigned char 
 11919 ;; Return value:  Size  Location     Type
 11920 ;;		None               void
 11921 ;; Registers used:
 11922 ;;		wreg, status,2, status,0, cstack
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11928 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11931 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11932 ;;Total ram usage:        3 bytes
 11933 ;; Hardware stack levels used:    1
 11934 ;; Hardware stack levels required when called:   10
 11935 ;; This function calls:
 11936 ;;		_lcdWriteCmd
 11937 ;; This function is called by:
 11938 ;;		_showDistance
 11939 ;;		_lcdClean
 11940 ;;		_intro
 11941 ;;		_showTempLight
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           	psect	text35
 11946  006A0C                     __ptext35:
 11947                           	opt stack 0
 11948  006A0C                     _lcdSetPos:
 11949                           	opt stack 19
 11950                           
 11951                           ;incstack = 0
 11952                           ;lcdSetPos@x stored from wreg
 11953  006A0C  CFE8 F0A5          	movff	wreg,lcdSetPos@x
 11954                           
 11955                           ;lcd.c: 117: unsigned char p;
 11956                           ;lcd.c: 119: switch(y)
 11957  006A10  D015               	goto	l6459
 11958  006A12                     l6449:
 11959  006A12  C0A5  F0A4         	movff	lcdSetPos@x,lcdSetPos@p
 11960  006A16  D021               	goto	l6461
 11961  006A18                     l6451:
 11962  006A18  0100               	movlb	0	; () banked
 11963  006A1A  0100               	movlb	0	; () banked
 11964  006A1C  51A5               	movf	lcdSetPos@x& (0+255),w,b
 11965  006A1E  0F40               	addlw	64
 11966  006A20  D009               	goto	L27
 11967  006A22                     l6453:
 11968                           
 11969                           ; BSR set to: 0
 11970  006A22  0100               	movlb	0	; () banked
 11971  006A24  0100               	movlb	0	; () banked
 11972  006A26  51A5               	movf	lcdSetPos@x& (0+255),w,b
 11973  006A28  0F14               	addlw	20
 11974  006A2A  D004               	goto	L27
 11975  006A2C                     l6455:
 11976                           
 11977                           ; BSR set to: 0
 11978  006A2C  0100               	movlb	0	; () banked
 11979  006A2E  0100               	movlb	0	; () banked
 11980  006A30  51A5               	movf	lcdSetPos@x& (0+255),w,b
 11981  006A32  0F54               	addlw	84
 11982  006A34                     L27:
 11983  006A34  0100               	movlb	0	; () banked
 11984  006A36  0100               	movlb	0	; () banked
 11985  006A38  6FA4               	movwf	lcdSetPos@p& (0+255),b
 11986  006A3A  D00F               	goto	l6461
 11987  006A3C                     l6459:
 11988  006A3C  0100               	movlb	0	; () banked
 11989  006A3E  0100               	movlb	0	; () banked
 11990  006A40  51A3               	movf	lcdSetPos@y& (0+255),w,b
 11991                           
 11992                           ; Switch size 1, requested type "space"
 11993                           ; Number of cases is 4, Range of values is 0 to 3
 11994                           ; switch strategies available:
 11995                           ; Name         Instructions Cycles
 11996                           ; simple_byte           13     7 (average)
 11997                           ;	Chosen strategy is simple_byte
 11998  006A42  0A00               	xorlw	0	; case 0
 11999  006A44  B4D8               	btfsc	status,2,c
 12000  006A46  D7E5               	goto	l6449
 12001  006A48  0A01               	xorlw	1	; case 1
 12002  006A4A  B4D8               	btfsc	status,2,c
 12003  006A4C  D7E5               	goto	l6451
 12004  006A4E  0A03               	xorlw	3	; case 2
 12005  006A50  B4D8               	btfsc	status,2,c
 12006  006A52  D7E7               	goto	l6453
 12007  006A54  0A01               	xorlw	1	; case 3
 12008  006A56  B4D8               	btfsc	status,2,c
 12009  006A58  D7E9               	goto	l6455
 12010  006A5A                     l6461:
 12011                           
 12012                           ;lcd.c: 126: p |= 0x80;
 12013  006A5A  0100               	movlb	0	; () banked
 12014  006A5C  0100               	movlb	0	; () banked
 12015  006A5E  8FA4               	bsf	lcdSetPos@p& (0+255),7,b
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;lcd.c: 127: lcdWriteCmd(p);
 12019  006A60  0100               	movlb	0	; () banked
 12020  006A62  0100               	movlb	0	; () banked
 12021  006A64  51A4               	movf	lcdSetPos@p& (0+255),w,b
 12022  006A66  EC65  F035         	call	_lcdWriteCmd
 12023  006A6A  0012               	return	
 12024  006A6C                     __end_of_lcdSetPos:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           intcon	equ	0xFF2
 12033                           indf0	equ	0xFEF
 12034                           fsr0h	equ	0xFEA
 12035                           fsr0l	equ	0xFE9
 12036                           wreg	equ	0xFE8
 12037                           indf2	equ	0xFDF
 12038                           postinc2	equ	0xFDE
 12039                           postdec2	equ	0xFDD
 12040                           fsr2h	equ	0xFDA
 12041                           fsr2l	equ	0xFD9
 12042                           status	equ	0xFD8
 12043                           
 12044 ;; *************** function _lcdClear *****************
 12045 ;; Defined at:
 12046 ;;		line 110 in file "lcd.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;		None
 12049 ;; Auto vars:     Size  Location     Type
 12050 ;;		None
 12051 ;; Return value:  Size  Location     Type
 12052 ;;		None               void
 12053 ;; Registers used:
 12054 ;;		wreg, status,2, status,0, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 0/0
 12057 ;;		On exit  : 0/0
 12058 ;;		Unchanged: 0/0
 12059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12064 ;;Total ram usage:        0 bytes
 12065 ;; Hardware stack levels used:    1
 12066 ;; Hardware stack levels required when called:   10
 12067 ;; This function calls:
 12068 ;;		_lcdWriteCmd
 12069 ;; This function is called by:
 12070 ;;		_showDistance
 12071 ;;		_lcdClean
 12072 ;;		_showTempLight
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075                           
 12076                           	psect	text36
 12077  00706E                     __ptext36:
 12078                           	opt stack 0
 12079  00706E                     _lcdClear:
 12080                           	opt stack 19
 12081                           
 12082                           ;lcd.c: 112: lcdWriteCmd(0x01);
 12083                           
 12084                           ;incstack = 0
 12085  00706E  0E01               	movlw	1
 12086  007070  EC65  F035         	call	_lcdWriteCmd
 12087  007074  0012               	return	
 12088  007076                     __end_of_lcdClear:
 12089                           	opt stack 0
 12090                           tblptru	equ	0xFF8
 12091                           tblptrh	equ	0xFF7
 12092                           tblptrl	equ	0xFF6
 12093                           tablat	equ	0xFF5
 12094                           prodh	equ	0xFF4
 12095                           prodl	equ	0xFF3
 12096                           intcon	equ	0xFF2
 12097                           indf0	equ	0xFEF
 12098                           fsr0h	equ	0xFEA
 12099                           fsr0l	equ	0xFE9
 12100                           wreg	equ	0xFE8
 12101                           indf2	equ	0xFDF
 12102                           postinc2	equ	0xFDE
 12103                           postdec2	equ	0xFDD
 12104                           fsr2h	equ	0xFDA
 12105                           fsr2l	equ	0xFD9
 12106                           status	equ	0xFD8
 12107                           
 12108 ;; *************** function _lcdWriteCmd *****************
 12109 ;; Defined at:
 12110 ;;		line 30 in file "lcd.c"
 12111 ;; Parameters:    Size  Location     Type
 12112 ;;  n               1    wreg     unsigned char 
 12113 ;; Auto vars:     Size  Location     Type
 12114 ;;  n               1   64[BANK0 ] unsigned char 
 12115 ;;  i               2   65[BANK0 ] int 
 12116 ;; Return value:  Size  Location     Type
 12117 ;;		None               void
 12118 ;; Registers used:
 12119 ;;		wreg, status,2, status,0, cstack
 12120 ;; Tracked objects:
 12121 ;;		On entry : 0/0
 12122 ;;		On exit  : 0/0
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12126 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12128 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12129 ;;Total ram usage:        4 bytes
 12130 ;; Hardware stack levels used:    1
 12131 ;; Hardware stack levels required when called:    9
 12132 ;; This function calls:
 12133 ;;		_writeByte
 12134 ;; This function is called by:
 12135 ;;		_lcdInit
 12136 ;;		_lcdClear
 12137 ;;		_lcdSetPos
 12138 ;; This function uses a non-reentrant model
 12139 ;;
 12140                           
 12141                           	psect	text37
 12142  006ACA                     __ptext37:
 12143                           	opt stack 0
 12144  006ACA                     _lcdWriteCmd:
 12145                           	opt stack 19
 12146                           
 12147                           ;incstack = 0
 12148                           ;lcdWriteCmd@n stored from wreg
 12149  006ACA  CFE8 F0A0          	movff	wreg,lcdWriteCmd@n
 12150                           
 12151                           ;lcd.c: 33: LATEbits.LATE0 = 0;
 12152  006ACE  908D               	bcf	3981,0,c	;volatile
 12153                           
 12154                           ;lcd.c: 35: writeByte(n);
 12155  006AD0  0100               	movlb	0	; () banked
 12156  006AD2  0100               	movlb	0	; () banked
 12157  006AD4  51A0               	movf	lcdWriteCmd@n& (0+255),w,b
 12158  006AD6  EC07  F038         	call	_writeByte
 12159                           
 12160                           ;lcd.c: 39: if (!(n & 0xFC)) for(int i = 0; i < 100; i++) _delay((unsigned long)((16)*(1
      +                          2000000/4000000.0)));
 12161  006ADA  C0A0  F09F         	movff	lcdWriteCmd@n,??_lcdWriteCmd
 12162  006ADE  0EFC               	movlw	252
 12163  006AE0  0100               	movlb	0	; () banked
 12164  006AE2  179F               	andwf	??_lcdWriteCmd& (0+255),f,b
 12165  006AE4  A4D8               	btfss	status,2,c
 12166  006AE6  D019               	goto	l6189
 12167                           
 12168                           ; BSR set to: 0
 12169  006AE8  0E00               	movlw	0
 12170  006AEA  0100               	movlb	0	; () banked
 12171  006AEC  0100               	movlb	0	; () banked
 12172  006AEE  6FA2               	movwf	(lcdWriteCmd@i+1)& (0+255),b
 12173  006AF0  0E00               	movlw	0
 12174  006AF2  0100               	movlb	0	; () banked
 12175  006AF4  6FA1               	movwf	lcdWriteCmd@i& (0+255),b
 12176  006AF6                     
 12177                           ; BSR set to: 0
 12178  006AF6  0100               	movlb	0	; () banked
 12179  006AF8  0100               	movlb	0	; () banked
 12180  006AFA  51A2               	movf	(lcdWriteCmd@i+1)& (0+255),w,b
 12181  006AFC  0A80               	xorlw	128
 12182  006AFE  0F80               	addlw	-128
 12183  006B00  0E64               	movlw	100
 12184  006B02  B4D8               	btfsc	status,2,c
 12185  006B04  5DA1               	subwf	lcdWriteCmd@i& (0+255),w,b
 12186  006B06  B0D8               	btfsc	status,0,c
 12187  006B08  0012               	return	
 12188                           
 12189                           ; BSR set to: 0
 12190                           
 12191                           ; BSR set to: 0
 12192                           
 12193                           ; BSR set to: 0
 12194  006B0A  0E10               	movlw	16
 12195  006B0C                     u7447:
 12196  006B0C  2EE8               	decfsz	wreg,f,c
 12197  006B0E  D7FE               	goto	u7447
 12198  006B10  0100               	movlb	0	; () banked
 12199  006B12  0100               	movlb	0	; () banked
 12200  006B14  4BA1               	infsnz	lcdWriteCmd@i& (0+255),f,b
 12201  006B16  2BA2               	incf	(lcdWriteCmd@i+1)& (0+255),f,b
 12202  006B18  D7EE               	goto	L28
 12203  006B1A                     l6189:
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;lcd.c: 40: else _delay((unsigned long)((43)*(12000000/4000000.0)));
 12207  006B1A  0E2B               	movlw	43
 12208  006B1C                     u7457:
 12209  006B1C  2EE8               	decfsz	wreg,f,c
 12210  006B1E  D7FE               	goto	u7457
 12211  006B20  0012               	return	
 12212  006B22                     __end_of_lcdWriteCmd:
 12213                           	opt stack 0
 12214                           tblptru	equ	0xFF8
 12215                           tblptrh	equ	0xFF7
 12216                           tblptrl	equ	0xFF6
 12217                           tablat	equ	0xFF5
 12218                           prodh	equ	0xFF4
 12219                           prodl	equ	0xFF3
 12220                           intcon	equ	0xFF2
 12221                           indf0	equ	0xFEF
 12222                           fsr0h	equ	0xFEA
 12223                           fsr0l	equ	0xFE9
 12224                           wreg	equ	0xFE8
 12225                           indf2	equ	0xFDF
 12226                           postinc2	equ	0xFDE
 12227                           postdec2	equ	0xFDD
 12228                           fsr2h	equ	0xFDA
 12229                           fsr2l	equ	0xFD9
 12230                           status	equ	0xFD8
 12231                           
 12232 ;; *************** function _writeByte *****************
 12233 ;; Defined at:
 12234 ;;		line 22 in file "lcd.c"
 12235 ;; Parameters:    Size  Location     Type
 12236 ;;  n               1    wreg     unsigned char 
 12237 ;; Auto vars:     Size  Location     Type
 12238 ;;  n               1   62[BANK0 ] unsigned char 
 12239 ;; Return value:  Size  Location     Type
 12240 ;;		None               void
 12241 ;; Registers used:
 12242 ;;		wreg, status,2, status,0, cstack
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12249 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12251 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12252 ;;Total ram usage:        1 bytes
 12253 ;; Hardware stack levels used:    1
 12254 ;; Hardware stack levels required when called:    8
 12255 ;; This function calls:
 12256 ;;		_writeDigit
 12257 ;; This function is called by:
 12258 ;;		_lcdWriteCmd
 12259 ;;		_lcdWriteChar
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           	psect	text38
 12264  00700E                     __ptext38:
 12265                           	opt stack 0
 12266  00700E                     _writeByte:
 12267                           	opt stack 19
 12268                           
 12269                           ;incstack = 0
 12270                           ;writeByte@n stored from wreg
 12271  00700E  CFE8 F09E          	movff	wreg,writeByte@n
 12272                           
 12273                           ;lcd.c: 25: writeDigit(n >> 4);
 12274  007012  0100               	movlb	0	; () banked
 12275  007014  0100               	movlb	0	; () banked
 12276  007016  399E               	swapf	writeByte@n& (0+255),w,b
 12277  007018  0B0F               	andlw	15
 12278  00701A  ECC9  F036         	call	_writeDigit
 12279                           
 12280                           ;lcd.c: 27: writeDigit(n & 0x0F);
 12281  00701E  0100               	movlb	0	; () banked
 12282  007020  0100               	movlb	0	; () banked
 12283  007022  519E               	movf	writeByte@n& (0+255),w,b
 12284  007024  0B0F               	andlw	15
 12285  007026  ECC9  F036         	call	_writeDigit
 12286  00702A  0012               	return	
 12287  00702C                     __end_of_writeByte:
 12288                           	opt stack 0
 12289                           tblptru	equ	0xFF8
 12290                           tblptrh	equ	0xFF7
 12291                           tblptrl	equ	0xFF6
 12292                           tablat	equ	0xFF5
 12293                           prodh	equ	0xFF4
 12294                           prodl	equ	0xFF3
 12295                           intcon	equ	0xFF2
 12296                           indf0	equ	0xFEF
 12297                           fsr0h	equ	0xFEA
 12298                           fsr0l	equ	0xFE9
 12299                           wreg	equ	0xFE8
 12300                           indf2	equ	0xFDF
 12301                           postinc2	equ	0xFDE
 12302                           postdec2	equ	0xFDD
 12303                           fsr2h	equ	0xFDA
 12304                           fsr2l	equ	0xFD9
 12305                           status	equ	0xFD8
 12306                           
 12307 ;; *************** function _writeDigit *****************
 12308 ;; Defined at:
 12309 ;;		line 6 in file "lcd.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;  n               1    wreg     unsigned char 
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;  n               1   61[BANK0 ] unsigned char 
 12314 ;; Return value:  Size  Location     Type
 12315 ;;		None               void
 12316 ;; Registers used:
 12317 ;;		wreg
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12326 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12327 ;;Total ram usage:        1 bytes
 12328 ;; Hardware stack levels used:    1
 12329 ;; Hardware stack levels required when called:    7
 12330 ;; This function calls:
 12331 ;;		Nothing
 12332 ;; This function is called by:
 12333 ;;		_writeByte
 12334 ;;		_lcdInit
 12335 ;; This function uses a non-reentrant model
 12336 ;;
 12337                           
 12338                           	psect	text39
 12339  006D92                     __ptext39:
 12340                           	opt stack 0
 12341  006D92                     _writeDigit:
 12342                           	opt stack 19
 12343                           
 12344                           ;incstack = 0
 12345                           ;writeDigit@n stored from wreg
 12346  006D92  CFE8 F09D          	movff	wreg,writeDigit@n
 12347                           
 12348                           ;lcd.c: 9: LATEbits.LATE1 = 1;
 12349  006D96  828D               	bsf	3981,1,c	;volatile
 12350                           
 12351                           ;lcd.c: 12: if (n & 0x01) LATDbits.LATD0 = 1; else LATDbits.LATD0 = 0;
 12352  006D98  0100               	movlb	0	; () banked
 12353  006D9A  0100               	movlb	0	; () banked
 12354  006D9C  A19D               	btfss	writeDigit@n& (0+255),0,b
 12355  006D9E  D002               	goto	l179
 12356                           
 12357                           ; BSR set to: 0
 12358  006DA0  808C               	bsf	3980,0,c	;volatile
 12359  006DA2  D001               	goto	l6091
 12360  006DA4                     l179:
 12361                           
 12362                           ; BSR set to: 0
 12363  006DA4  908C               	bcf	3980,0,c	;volatile
 12364  006DA6                     l6091:
 12365                           
 12366                           ; BSR set to: 0
 12367                           ;lcd.c: 13: if (n & 0x02) LATDbits.LATD1 = 1; else LATDbits.LATD1 = 0;
 12368  006DA6  0100               	movlb	0	; () banked
 12369  006DA8  0100               	movlb	0	; () banked
 12370  006DAA  A39D               	btfss	writeDigit@n& (0+255),1,b
 12371  006DAC  D002               	goto	l181
 12372                           
 12373                           ; BSR set to: 0
 12374  006DAE  828C               	bsf	3980,1,c	;volatile
 12375  006DB0  D001               	goto	l6095
 12376  006DB2                     l181:
 12377                           
 12378                           ; BSR set to: 0
 12379  006DB2  928C               	bcf	3980,1,c	;volatile
 12380  006DB4                     l6095:
 12381                           
 12382                           ; BSR set to: 0
 12383                           ;lcd.c: 14: if (n & 0x04) LATDbits.LATD2 = 1; else LATDbits.LATD2 = 0;
 12384  006DB4  0100               	movlb	0	; () banked
 12385  006DB6  0100               	movlb	0	; () banked
 12386  006DB8  A59D               	btfss	writeDigit@n& (0+255),2,b
 12387  006DBA  D002               	goto	l183
 12388                           
 12389                           ; BSR set to: 0
 12390  006DBC  848C               	bsf	3980,2,c	;volatile
 12391  006DBE  D001               	goto	l6099
 12392  006DC0                     l183:
 12393                           
 12394                           ; BSR set to: 0
 12395  006DC0  948C               	bcf	3980,2,c	;volatile
 12396  006DC2                     l6099:
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;lcd.c: 15: if (n & 0x08) LATDbits.LATD3 = 1; else LATDbits.LATD3 = 0;
 12400  006DC2  0100               	movlb	0	; () banked
 12401  006DC4  0100               	movlb	0	; () banked
 12402  006DC6  A79D               	btfss	writeDigit@n& (0+255),3,b
 12403  006DC8  D002               	goto	l185
 12404                           
 12405                           ; BSR set to: 0
 12406  006DCA  868C               	bsf	3980,3,c	;volatile
 12407  006DCC  D001               	goto	l186
 12408  006DCE                     l185:
 12409                           
 12410                           ; BSR set to: 0
 12411  006DCE  968C               	bcf	3980,3,c	;volatile
 12412  006DD0                     l186:
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;lcd.c: 19: LATEbits.LATE1 = 0;
 12416  006DD0  928D               	bcf	3981,1,c	;volatile
 12417                           
 12418                           ; BSR set to: 0
 12419  006DD2  0012               	return	
 12420  006DD4                     __end_of_writeDigit:
 12421                           	opt stack 0
 12422                           tblptru	equ	0xFF8
 12423                           tblptrh	equ	0xFF7
 12424                           tblptrl	equ	0xFF6
 12425                           tablat	equ	0xFF5
 12426                           prodh	equ	0xFF4
 12427                           prodl	equ	0xFF3
 12428                           intcon	equ	0xFF2
 12429                           indf0	equ	0xFEF
 12430                           fsr0h	equ	0xFEA
 12431                           fsr0l	equ	0xFE9
 12432                           wreg	equ	0xFE8
 12433                           indf2	equ	0xFDF
 12434                           postinc2	equ	0xFDE
 12435                           postdec2	equ	0xFDD
 12436                           fsr2h	equ	0xFDA
 12437                           fsr2l	equ	0xFD9
 12438                           status	equ	0xFD8
 12439                           
 12440 ;; *************** function _ISR *****************
 12441 ;; Defined at:
 12442 ;;		line 91 in file "main.c"
 12443 ;; Parameters:    Size  Location     Type
 12444 ;;		None
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;		None
 12447 ;; Return value:  Size  Location     Type
 12448 ;;		None               void
 12449 ;; Registers used:
 12450 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12458 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12459 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12460 ;;Total ram usage:       14 bytes
 12461 ;; Hardware stack levels used:    1
 12462 ;; Hardware stack levels required when called:    6
 12463 ;; This function calls:
 12464 ;;		_showAccelerometerVal
 12465 ;; This function is called by:
 12466 ;;		Interrupt level 2
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           	psect	intcode
 12471  000008                     __pintcode:
 12472                           	opt stack 0
 12473  000008                     _ISR:
 12474                           	opt stack 17
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;incstack = 0
 12478  000008  CFFA F08F          	movff	pclath,??_ISR
 12479  00000C  CFFB F090          	movff	pclatu,??_ISR+1
 12480  000010  CFE9 F091          	movff	fsr0l,??_ISR+2
 12481  000014  CFEA F092          	movff	fsr0h,??_ISR+3
 12482  000018  CFE1 F093          	movff	fsr1l,??_ISR+4
 12483  00001C  CFE2 F094          	movff	fsr1h,??_ISR+5
 12484  000020  CFD9 F095          	movff	fsr2l,??_ISR+6
 12485  000024  CFDA F096          	movff	fsr2h,??_ISR+7
 12486  000028  CFF3 F097          	movff	prodl,??_ISR+8
 12487  00002C  CFF4 F098          	movff	prodh,??_ISR+9
 12488  000030  CFF6 F099          	movff	tblptrl,??_ISR+10
 12489  000034  CFF7 F09A          	movff	tblptrh,??_ISR+11
 12490  000038  CFF8 F09B          	movff	tblptru,??_ISR+12
 12491  00003C  CFF5 F09C          	movff	tablat,??_ISR+13
 12492                           
 12493                           ;main.c: 93: if(INTCONbits.RBIF == 1)
 12494  000040  A0F2               	btfss	intcon,0,c	;volatile
 12495  000042  D004               	goto	i2l57
 12496                           
 12497                           ;main.c: 94: {
 12498                           ;main.c: 96: if(PORTBbits.RB4 == 0)
 12499  000044  5081               	movf	3969,w,c	;volatile
 12500                           
 12501                           ;main.c: 99: }
 12502                           ;main.c: 100: if(PORTBbits.RB5 == 0)
 12503                           
 12504                           ;main.c: 97: {
 12505  000046  5081               	movf	3969,w,c	;volatile
 12506                           
 12507                           ;main.c: 103: }
 12508                           ;main.c: 104: if(PORTBbits.RB6 == 0)
 12509                           
 12510                           ;main.c: 101: {
 12511  000048  5081               	movf	3969,w,c	;volatile
 12512                           
 12513                           ;main.c: 107: }
 12514                           ;main.c: 108: INTCONbits.RBIF = 0;
 12515                           
 12516                           ;main.c: 105: {
 12517  00004A  90F2               	bcf	intcon,0,c	;volatile
 12518  00004C                     i2l57:
 12519                           
 12520                           ;main.c: 109: }
 12521                           ;main.c: 110: if(INTCON3bits.INT1IF == 1)
 12522  00004C  A0F0               	btfss	intcon3,0,c	;volatile
 12523  00004E  D003               	goto	i2l62
 12524                           
 12525                           ;main.c: 111: {
 12526                           ;main.c: 112: showAccelerometerVal();
 12527  000050  EC58  F02C         	call	_showAccelerometerVal	;wreg free
 12528                           
 12529                           ;main.c: 113: INTCON3bits.INT1IF = 0;
 12530  000054  90F0               	bcf	intcon3,0,c	;volatile
 12531  000056                     i2l62:
 12532  000056  C09C  FFF5         	movff	??_ISR+13,tablat
 12533  00005A  C09B  FFF8         	movff	??_ISR+12,tblptru
 12534  00005E  C09A  FFF7         	movff	??_ISR+11,tblptrh
 12535  000062  C099  FFF6         	movff	??_ISR+10,tblptrl
 12536  000066  C098  FFF4         	movff	??_ISR+9,prodh
 12537  00006A  C097  FFF3         	movff	??_ISR+8,prodl
 12538  00006E  C096  FFDA         	movff	??_ISR+7,fsr2h
 12539  000072  C095  FFD9         	movff	??_ISR+6,fsr2l
 12540  000076  C094  FFE2         	movff	??_ISR+5,fsr1h
 12541  00007A  C093  FFE1         	movff	??_ISR+4,fsr1l
 12542  00007E  C092  FFEA         	movff	??_ISR+3,fsr0h
 12543  000082  C091  FFE9         	movff	??_ISR+2,fsr0l
 12544  000086  C090  FFFB         	movff	??_ISR+1,pclatu
 12545  00008A  C08F  FFFA         	movff	??_ISR,pclath
 12546  00008E  0011               	retfie		f
 12547  000090                     __end_of_ISR:
 12548                           	opt stack 0
 12549                           pclatu	equ	0xFFB
 12550                           pclath	equ	0xFFA
 12551                           tblptru	equ	0xFF8
 12552                           tblptrh	equ	0xFF7
 12553                           tblptrl	equ	0xFF6
 12554                           tablat	equ	0xFF5
 12555                           prodh	equ	0xFF4
 12556                           prodl	equ	0xFF3
 12557                           intcon	equ	0xFF2
 12558                           intcon3	equ	0xFF0
 12559                           indf0	equ	0xFEF
 12560                           fsr0h	equ	0xFEA
 12561                           fsr0l	equ	0xFE9
 12562                           wreg	equ	0xFE8
 12563                           fsr1h	equ	0xFE2
 12564                           fsr1l	equ	0xFE1
 12565                           indf2	equ	0xFDF
 12566                           postinc2	equ	0xFDE
 12567                           postdec2	equ	0xFDD
 12568                           fsr2h	equ	0xFDA
 12569                           fsr2l	equ	0xFD9
 12570                           status	equ	0xFD8
 12571                           
 12572 ;; *************** function _showAccelerometerVal *****************
 12573 ;; Defined at:
 12574 ;;		line 140 in file "main.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;		None
 12577 ;; Auto vars:     Size  Location     Type
 12578 ;;  buffer         10   37[BANK0 ] unsigned char [10]
 12579 ;; Return value:  Size  Location     Type
 12580 ;;		None               void
 12581 ;; Registers used:
 12582 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12583 ;; Tracked objects:
 12584 ;;		On entry : 0/0
 12585 ;;		On exit  : 0/0
 12586 ;;		Unchanged: 0/0
 12587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12589 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12591 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12592 ;;Total ram usage:       11 bytes
 12593 ;; Hardware stack levels used:    1
 12594 ;; Hardware stack levels required when called:    5
 12595 ;; This function calls:
 12596 ;;		_single_axis_measure
 12597 ;;		i2_lcdClear
 12598 ;;		i2_lcdSetPos
 12599 ;;		i2_lcdWriteChar
 12600 ;;		i2_lcdWriteStrC
 12601 ;;		i2_sprintf
 12602 ;; This function is called by:
 12603 ;;		_ISR
 12604 ;; This function uses a non-reentrant model
 12605 ;;
 12606                           
 12607                           	psect	text41
 12608  0058B0                     __ptext41:
 12609                           	opt stack 0
 12610  0058B0                     _showAccelerometerVal:
 12611                           	opt stack 17
 12612                           
 12613                           ;main.c: 142: char buffer [10];
 12614                           ;main.c: 143: lcdClear();
 12615                           
 12616                           ;incstack = 0
 12617  0058B0  EC3B  F038         	call	i2_lcdClear	;wreg free
 12618                           
 12619                           ;main.c: 145: lcdWriteStrC("Aclmtr values:");
 12620  0058B4  0E0F               	movlw	high STR_5
 12621  0058B6  6E05               	movwf	i2lcdWriteStrC@s+1,c
 12622  0058B8  0E89               	movlw	low STR_5
 12623  0058BA  6E04               	movwf	i2lcdWriteStrC@s,c
 12624  0058BC  EC91  F035         	call	i2_lcdWriteStrC	;wreg free
 12625                           
 12626                           ;main.c: 146: lcdSetPos(0,1);
 12627  0058C0  6E5D               	movwf	??_showAccelerometerVal& (0+255),c
 12628  0058C2  0E01               	movlw	1
 12629  0058C4  6E07               	movwf	i2lcdSetPos@y,c
 12630  0058C6  505D               	movf	??_showAccelerometerVal& (0+255),w,c
 12631  0058C8  0E00               	movlw	0
 12632  0058CA  EC01  F036         	call	i2_lcdSetPos
 12633                           
 12634                           ;main.c: 147: sprintf(buffer,"%1.2f",single_axis_measure(2, 10));
 12635  0058CE  0100               	movlb	0	; () banked
 12636  0058D0  0E00               	movlw	high showAccelerometerVal@buffer
 12637  0058D2  6E51               	movwf	i2sprintf@sp+1,c
 12638  0058D4  0100               	movlb	0	; () banked
 12639  0058D6  0E85               	movlw	low showAccelerometerVal@buffer
 12640  0058D8  6E50               	movwf	i2sprintf@sp,c
 12641  0058DA  0E0F               	movlw	high STR_6
 12642  0058DC  6E53               	movwf	i2sprintf@f+1,c
 12643  0058DE  0EC5               	movlw	low STR_6
 12644  0058E0  6E52               	movwf	i2sprintf@f,c
 12645  0058E2  0E00               	movlw	0
 12646  0058E4  6E41               	movwf	single_axis_measure@axis+1,c
 12647  0058E6  0E02               	movlw	2
 12648  0058E8  6E40               	movwf	single_axis_measure@axis,c
 12649  0058EA  0E00               	movlw	0
 12650  0058EC  6E42               	movwf	single_axis_measure@iteration,c
 12651  0058EE  0E20               	movlw	32
 12652  0058F0  6E43               	movwf	single_axis_measure@iteration+1,c
 12653  0058F2  0E41               	movlw	65
 12654  0058F4  6E44               	movwf	single_axis_measure@iteration+2,c
 12655  0058F6  ECEC  F02D         	call	_single_axis_measure	;wreg free
 12656  0058FA  C040  F054         	movff	?_single_axis_measure,?i2_sprintf+4
 12657  0058FE  C041  F055         	movff	?_single_axis_measure+1,?i2_sprintf+5
 12658  005902  C042  F056         	movff	?_single_axis_measure+2,?i2_sprintf+6
 12659  005906  EC0A  F00F         	call	i2_sprintf	;wreg free
 12660                           
 12661                           ;main.c: 148: lcdWriteStrC(buffer);
 12662  00590A  0100               	movlb	0	; () banked
 12663  00590C  0E00               	movlw	high showAccelerometerVal@buffer
 12664  00590E  6E05               	movwf	i2lcdWriteStrC@s+1,c
 12665  005910  0100               	movlb	0	; () banked
 12666  005912  0E85               	movlw	low showAccelerometerVal@buffer
 12667  005914  6E04               	movwf	i2lcdWriteStrC@s,c
 12668  005916  EC91  F035         	call	i2_lcdWriteStrC	;wreg free
 12669                           
 12670                           ;main.c: 149: lcdWriteChar(' ');
 12671  00591A  0E20               	movlw	32
 12672  00591C  EC2D  F038         	call	i2_lcdWriteChar
 12673                           
 12674                           ;main.c: 150: sprintf(buffer,"%1.2f",single_axis_measure(3, 10));
 12675  005920  0100               	movlb	0	; () banked
 12676  005922  0E00               	movlw	high showAccelerometerVal@buffer
 12677  005924  6E51               	movwf	i2sprintf@sp+1,c
 12678  005926  0100               	movlb	0	; () banked
 12679  005928  0E85               	movlw	low showAccelerometerVal@buffer
 12680  00592A  6E50               	movwf	i2sprintf@sp,c
 12681  00592C  0E0F               	movlw	high STR_6
 12682  00592E  6E53               	movwf	i2sprintf@f+1,c
 12683  005930  0EC5               	movlw	low STR_6
 12684  005932  6E52               	movwf	i2sprintf@f,c
 12685  005934  0E00               	movlw	0
 12686  005936  6E41               	movwf	single_axis_measure@axis+1,c
 12687  005938  0E03               	movlw	3
 12688  00593A  6E40               	movwf	single_axis_measure@axis,c
 12689  00593C  0E00               	movlw	0
 12690  00593E  6E42               	movwf	single_axis_measure@iteration,c
 12691  005940  0E20               	movlw	32
 12692  005942  6E43               	movwf	single_axis_measure@iteration+1,c
 12693  005944  0E41               	movlw	65
 12694  005946  6E44               	movwf	single_axis_measure@iteration+2,c
 12695  005948  ECEC  F02D         	call	_single_axis_measure	;wreg free
 12696  00594C  C040  F054         	movff	?_single_axis_measure,?i2_sprintf+4
 12697  005950  C041  F055         	movff	?_single_axis_measure+1,?i2_sprintf+5
 12698  005954  C042  F056         	movff	?_single_axis_measure+2,?i2_sprintf+6
 12699  005958  EC0A  F00F         	call	i2_sprintf	;wreg free
 12700                           
 12701                           ;main.c: 151: lcdWriteStrC(buffer);
 12702  00595C  0100               	movlb	0	; () banked
 12703  00595E  0E00               	movlw	high showAccelerometerVal@buffer
 12704  005960  6E05               	movwf	i2lcdWriteStrC@s+1,c
 12705  005962  0100               	movlb	0	; () banked
 12706  005964  0E85               	movlw	low showAccelerometerVal@buffer
 12707  005966  6E04               	movwf	i2lcdWriteStrC@s,c
 12708  005968  EC91  F035         	call	i2_lcdWriteStrC	;wreg free
 12709                           
 12710                           ;main.c: 152: lcdWriteChar(' ');
 12711  00596C  0E20               	movlw	32
 12712  00596E  EC2D  F038         	call	i2_lcdWriteChar
 12713                           
 12714                           ;main.c: 153: sprintf(buffer,"%1.2f",single_axis_measure(4, 10));
 12715  005972  0100               	movlb	0	; () banked
 12716  005974  0E00               	movlw	high showAccelerometerVal@buffer
 12717  005976  6E51               	movwf	i2sprintf@sp+1,c
 12718  005978  0100               	movlb	0	; () banked
 12719  00597A  0E85               	movlw	low showAccelerometerVal@buffer
 12720  00597C  6E50               	movwf	i2sprintf@sp,c
 12721  00597E  0E0F               	movlw	high STR_6
 12722  005980  6E53               	movwf	i2sprintf@f+1,c
 12723  005982  0EC5               	movlw	low STR_6
 12724  005984  6E52               	movwf	i2sprintf@f,c
 12725  005986  0E00               	movlw	0
 12726  005988  6E41               	movwf	single_axis_measure@axis+1,c
 12727  00598A  0E04               	movlw	4
 12728  00598C  6E40               	movwf	single_axis_measure@axis,c
 12729  00598E  0E00               	movlw	0
 12730  005990  6E42               	movwf	single_axis_measure@iteration,c
 12731  005992  0E20               	movlw	32
 12732  005994  6E43               	movwf	single_axis_measure@iteration+1,c
 12733  005996  0E41               	movlw	65
 12734  005998  6E44               	movwf	single_axis_measure@iteration+2,c
 12735  00599A  ECEC  F02D         	call	_single_axis_measure	;wreg free
 12736  00599E  C040  F054         	movff	?_single_axis_measure,?i2_sprintf+4
 12737  0059A2  C041  F055         	movff	?_single_axis_measure+1,?i2_sprintf+5
 12738  0059A6  C042  F056         	movff	?_single_axis_measure+2,?i2_sprintf+6
 12739  0059AA  EC0A  F00F         	call	i2_sprintf	;wreg free
 12740                           
 12741                           ;main.c: 154: lcdWriteStrC(buffer);
 12742  0059AE  0100               	movlb	0	; () banked
 12743  0059B0  0E00               	movlw	high showAccelerometerVal@buffer
 12744  0059B2  6E05               	movwf	i2lcdWriteStrC@s+1,c
 12745  0059B4  0100               	movlb	0	; () banked
 12746  0059B6  0E85               	movlw	low showAccelerometerVal@buffer
 12747  0059B8  6E04               	movwf	i2lcdWriteStrC@s,c
 12748  0059BA  EC91  F035         	call	i2_lcdWriteStrC	;wreg free
 12749  0059BE  0012               	return	
 12750  0059C0                     __end_of_showAccelerometerVal:
 12751                           	opt stack 0
 12752                           pclatu	equ	0xFFB
 12753                           pclath	equ	0xFFA
 12754                           tblptru	equ	0xFF8
 12755                           tblptrh	equ	0xFF7
 12756                           tblptrl	equ	0xFF6
 12757                           tablat	equ	0xFF5
 12758                           prodh	equ	0xFF4
 12759                           prodl	equ	0xFF3
 12760                           intcon	equ	0xFF2
 12761                           intcon3	equ	0xFF0
 12762                           indf0	equ	0xFEF
 12763                           fsr0h	equ	0xFEA
 12764                           fsr0l	equ	0xFE9
 12765                           wreg	equ	0xFE8
 12766                           fsr1h	equ	0xFE2
 12767                           fsr1l	equ	0xFE1
 12768                           indf2	equ	0xFDF
 12769                           postinc2	equ	0xFDE
 12770                           postdec2	equ	0xFDD
 12771                           fsr2h	equ	0xFDA
 12772                           fsr2l	equ	0xFD9
 12773                           status	equ	0xFD8
 12774                           
 12775 ;; *************** function i2_sprintf *****************
 12776 ;; Defined at:
 12777 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\doprnt.c"
 12778 ;; Parameters:    Size  Location     Type
 12779 ;;  sp              2   79[COMRAM] PTR unsigned char 
 12780 ;;		 -> showAccelerometerVal@buffer(10), showTempLight@buffer(10), showDistance@buffer(10), 
 12781 ;;  f               2   81[COMRAM] PTR const unsigned char 
 12782 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_4(10), 
 12783 ;;		 -> STR_3(12), STR_2(6), 
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;  sprintf         5   24[BANK0 ] struct .
 12786 ;;  sprintf         4   11[BANK0 ] unsigned long 
 12787 ;;  sprintf         4    7[BANK0 ] unsigned long 
 12788 ;;  sprintf         4    3[BANK0 ] unsigned long 
 12789 ;;  sprintf         3   31[BANK0 ] unsigned long 
 12790 ;;  sprintf         3   17[BANK0 ] unsigned long 
 12791 ;;  sprintf         3    0        unsigned long 
 12792 ;;  sprintf         3    0        unsigned long 
 12793 ;;  sprintf         2   34[BANK0 ] int 
 12794 ;;  sprintf         2   29[BANK0 ] int 
 12795 ;;  sprintf         2   22[BANK0 ] int 
 12796 ;;  sprintf         2   20[BANK0 ] unsigned short 
 12797 ;;  sprintf         2   15[BANK0 ] PTR void [1]
 12798 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 12799 ;;  sprintf         1   36[BANK0 ] char 
 12800 ;;  sprintf         1    0        unsigned char 
 12801 ;; Return value:  Size  Location     Type
 12802 ;;                  2   79[COMRAM] int 
 12803 ;; Registers used:
 12804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12805 ;; Tracked objects:
 12806 ;;		On entry : 0/0
 12807 ;;		On exit  : 0/0
 12808 ;;		Unchanged: 0/0
 12809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12810 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12811 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12812 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12813 ;;      Totals:        13      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12814 ;;Total ram usage:       50 bytes
 12815 ;; Hardware stack levels used:    1
 12816 ;; Hardware stack levels required when called:    4
 12817 ;; This function calls:
 12818 ;;		i2___asftadd
 12819 ;;		i2___asftmul
 12820 ;;		i2___asftsub
 12821 ;;		i2___awdiv
 12822 ;;		i2___ftge
 12823 ;;		i2___ftmul
 12824 ;;		i2___ftneg
 12825 ;;		i2___fttol
 12826 ;;		i2___lldiv
 12827 ;;		i2___llmod
 12828 ;;		i2___lltoft
 12829 ;;		i2___wmul
 12830 ;;		i2__div_to_l_
 12831 ;;		i2__tdiv_to_l_
 12832 ;;		i2_fround
 12833 ;;		i2_isdigit
 12834 ;;		i2_scale
 12835 ;; This function is called by:
 12836 ;;		_showAccelerometerVal
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           	psect	text42
 12841  001E14                     __ptext42:
 12842                           	opt stack 0
 12843  001E14                     i2_sprintf:
 12844                           	opt stack 17
 12845                           
 12846                           ;doprnt.c: 494: va_list ap;
 12847                           ;doprnt.c: 499: signed char c;
 12848                           ;doprnt.c: 501: int width;
 12849                           ;doprnt.c: 504: int prec;
 12850                           ;doprnt.c: 508: unsigned short flag;
 12851                           ;doprnt.c: 515: char d;
 12852                           ;doprnt.c: 516: double fval, integ;
 12853                           ;doprnt.c: 517: int exp;
 12854                           ;doprnt.c: 518: double ival;
 12855                           ;doprnt.c: 519: union {
 12856                           ;doprnt.c: 520: unsigned long _val;
 12857                           ;doprnt.c: 521: struct {
 12858                           ;doprnt.c: 522: const char * _cp;
 12859                           ;doprnt.c: 523: unsigned _len;
 12860                           ;doprnt.c: 524: } _str;
 12861                           ;doprnt.c: 525: } _val;
 12862                           ;doprnt.c: 542: *ap = __va_start();
 12863                           
 12864                           ;incstack = 0
 12865  001E14  0E00               	movlw	high (?i2_sprintf+4)
 12866  001E16  0100               	movlb	0	; () banked
 12867  001E18  0100               	movlb	0	; () banked
 12868  001E1A  6F70               	movwf	(i2sprintf@ap+1)& (0+255),b
 12869  001E1C  0E54               	movlw	low (?i2_sprintf+4)
 12870  001E1E  0100               	movlb	0	; () banked
 12871  001E20  0100               	movlb	0	; () banked
 12872  001E22  6F6F               	movwf	i2sprintf@ap& (0+255),b
 12873                           
 12874                           ;doprnt.c: 545: while(c = *f++) {
 12875  001E24  EF54  F015         	goto	i2l8253
 12876  001E28                     i2l7963:
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;doprnt.c: 547: if(c != '%')
 12880  001E28  0100               	movlb	0	; () banked
 12881  001E2A  0100               	movlb	0	; () banked
 12882  001E2C  5184               	movf	i2sprintf@c& (0+255),w,b
 12883  001E2E  0A25               	xorlw	37
 12884  001E30  B4D8               	btfsc	status,2,c
 12885  001E32  D00B               	goto	i2l7969
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;doprnt.c: 549: {
 12889                           ;doprnt.c: 550: ((*sp++ = (c)));
 12890  001E34  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 12891  001E38  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 12892  001E3C  0100               	movlb	0	; () banked
 12893  001E3E  C084  FFDF         	movff	i2sprintf@c,indf2
 12894                           
 12895                           ; BSR set to: 0
 12896  001E42  4A50               	infsnz	i2sprintf@sp,f,c
 12897  001E44  2A51               	incf	i2sprintf@sp+1,f,c
 12898                           
 12899                           ;doprnt.c: 551: continue;
 12900  001E46  EF54  F015         	goto	i2l8253
 12901  001E4A                     i2l7969:
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;doprnt.c: 552: }
 12905                           ;doprnt.c: 555: width = 0;
 12906  001E4A  0E00               	movlw	0
 12907  001E4C  0100               	movlb	0	; () banked
 12908  001E4E  0100               	movlb	0	; () banked
 12909  001E50  6F77               	movwf	(i2sprintf@width+1)& (0+255),b
 12910  001E52  0E00               	movlw	0
 12911  001E54  0100               	movlb	0	; () banked
 12912  001E56  6F76               	movwf	i2sprintf@width& (0+255),b
 12913                           
 12914                           ;doprnt.c: 557: flag = 0;
 12915  001E58  0E00               	movlw	0
 12916  001E5A  0100               	movlb	0	; () banked
 12917  001E5C  0100               	movlb	0	; () banked
 12918  001E5E  6F75               	movwf	(i2sprintf@flag+1)& (0+255),b
 12919  001E60  0E00               	movlw	0
 12920  001E62  0100               	movlb	0	; () banked
 12921  001E64  6F74               	movwf	i2sprintf@flag& (0+255),b
 12922                           
 12923                           ; BSR set to: 0
 12924                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 12925  001E66  C052  FFF6         	movff	i2sprintf@f,tblptrl
 12926  001E6A  C053  FFF7         	movff	i2sprintf@f+1,tblptrh
 12927  001E6E  0E00               	movlw	low (__mediumconst shr (0+16))
 12928  001E70  6EF8               	movwf	tblptru,c
 12929  001E72  0008               	tblrd		*
 12930  001E74  50F5               	movf	tablat,w,c
 12931  001E76  ECDF  F037         	call	i2_isdigit
 12932  001E7A  A0D8               	btfss	status,0,c
 12933  001E7C  D03D               	goto	i2l7983
 12934                           
 12935                           ;doprnt.c: 607: width = 0;
 12936  001E7E  0E00               	movlw	0
 12937  001E80  0100               	movlb	0	; () banked
 12938  001E82  0100               	movlb	0	; () banked
 12939  001E84  6F77               	movwf	(i2sprintf@width+1)& (0+255),b
 12940  001E86  0E00               	movlw	0
 12941  001E88  0100               	movlb	0	; () banked
 12942  001E8A  6F76               	movwf	i2sprintf@width& (0+255),b
 12943  001E8C                     i2l7975:
 12944                           
 12945                           ;doprnt.c: 609: width *= 10;
 12946  001E8C  C076  F011         	movff	i2sprintf@width,i2___wmul@multiplier
 12947  001E90  C077  F012         	movff	i2sprintf@width+1,i2___wmul@multiplier+1
 12948  001E94  0E00               	movlw	0
 12949  001E96  6E14               	movwf	i2___wmul@multiplicand+1,c
 12950  001E98  0E0A               	movlw	10
 12951  001E9A  6E13               	movwf	i2___wmul@multiplicand,c
 12952  001E9C  EC61  F037         	call	i2___wmul	;wreg free
 12953  001EA0  C011  F076         	movff	?i2___wmul,i2sprintf@width
 12954  001EA4  C012  F077         	movff	?i2___wmul+1,i2sprintf@width+1
 12955                           
 12956                           ;doprnt.c: 610: width += *f++ - '0';
 12957  001EA8  0ED0               	movlw	208
 12958  001EAA  6E57               	movwf	??i2_sprintf& (0+255),c
 12959  001EAC  0EFF               	movlw	255
 12960  001EAE  6E58               	movwf	(??i2_sprintf+1)& (0+255),c
 12961  001EB0  C052  FFF6         	movff	i2sprintf@f,tblptrl
 12962  001EB4  C053  FFF7         	movff	i2sprintf@f+1,tblptrh
 12963  001EB8  0E00               	movlw	low (__mediumconst shr (0+16))
 12964  001EBA  6EF8               	movwf	tblptru,c
 12965  001EBC  0008               	tblrd		*
 12966  001EBE  50F5               	movf	tablat,w,c
 12967  001EC0  6E59               	movwf	(??i2_sprintf+2)& (0+255),c
 12968  001EC2  6A5A               	clrf	(??i2_sprintf+3)& (0+255),c
 12969  001EC4  5057               	movf	??i2_sprintf,w,c
 12970  001EC6  2659               	addwf	??i2_sprintf+2,f,c
 12971  001EC8  5058               	movf	??i2_sprintf+1,w,c
 12972  001ECA  225A               	addwfc	??i2_sprintf+3,f,c
 12973  001ECC  5059               	movf	??i2_sprintf+2,w,c
 12974  001ECE  0100               	movlb	0	; () banked
 12975  001ED0  0100               	movlb	0	; () banked
 12976  001ED2  2776               	addwf	i2sprintf@width& (0+255),f,b
 12977  001ED4  505A               	movf	??i2_sprintf+3,w,c
 12978  001ED6  0100               	movlb	0	; () banked
 12979  001ED8  0100               	movlb	0	; () banked
 12980  001EDA  2377               	addwfc	(i2sprintf@width+1)& (0+255),f,b
 12981                           
 12982                           ; BSR set to: 0
 12983  001EDC  4A52               	infsnz	i2sprintf@f,f,c
 12984  001EDE  2A53               	incf	i2sprintf@f+1,f,c
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 12988  001EE0  C052  FFF6         	movff	i2sprintf@f,tblptrl
 12989  001EE4  C053  FFF7         	movff	i2sprintf@f+1,tblptrh
 12990  001EE8  0E00               	movlw	low (__mediumconst shr (0+16))
 12991  001EEA  6EF8               	movwf	tblptru,c
 12992  001EEC  0008               	tblrd		*
 12993  001EEE  50F5               	movf	tablat,w,c
 12994  001EF0  ECDF  F037         	call	i2_isdigit
 12995  001EF4  B0D8               	btfsc	status,0,c
 12996  001EF6  D7CA               	goto	i2l7975
 12997  001EF8                     i2l7983:
 12998                           
 12999                           ;doprnt.c: 617: }
 13000                           ;doprnt.c: 620: if(*f == '.') {
 13001  001EF8  C052  FFF6         	movff	i2sprintf@f,tblptrl
 13002  001EFC  C053  FFF7         	movff	i2sprintf@f+1,tblptrh
 13003  001F00  0E00               	movlw	low (__mediumconst shr (0+16))
 13004  001F02  6EF8               	movwf	tblptru,c
 13005  001F04  0008               	tblrd		*
 13006  001F06  50F5               	movf	tablat,w,c
 13007  001F08  0A2E               	xorlw	46
 13008  001F0A  A4D8               	btfss	status,2,c
 13009  001F0C  D03A               	goto	i2l7995
 13010                           
 13011                           ;doprnt.c: 621: flag |= 0x4000;
 13012  001F0E  0100               	movlb	0	; () banked
 13013  001F10  0100               	movlb	0	; () banked
 13014  001F12  8D75               	bsf	(i2sprintf@flag+1)& (0+255),6,b
 13015                           
 13016                           ;doprnt.c: 622: f++;
 13017  001F14  4A52               	infsnz	i2sprintf@f,f,c
 13018  001F16  2A53               	incf	i2sprintf@f+1,f,c
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;doprnt.c: 629: {
 13022                           ;doprnt.c: 630: prec = 0;
 13023  001F18  0E00               	movlw	0
 13024  001F1A  0100               	movlb	0	; () banked
 13025  001F1C  0100               	movlb	0	; () banked
 13026  001F1E  6F83               	movwf	(i2sprintf@prec+1)& (0+255),b
 13027  001F20  0E00               	movlw	0
 13028  001F22  0100               	movlb	0	; () banked
 13029  001F24  6F82               	movwf	i2sprintf@prec& (0+255),b
 13030                           
 13031                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 13032  001F26  D020               	goto	i2l7993
 13033  001F28                     i2l7989:
 13034                           
 13035                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 13036  001F28  C082  F011         	movff	i2sprintf@prec,i2___wmul@multiplier
 13037  001F2C  C083  F012         	movff	i2sprintf@prec+1,i2___wmul@multiplier+1
 13038  001F30  0E00               	movlw	0
 13039  001F32  6E14               	movwf	i2___wmul@multiplicand+1,c
 13040  001F34  0E0A               	movlw	10
 13041  001F36  6E13               	movwf	i2___wmul@multiplicand,c
 13042  001F38  EC61  F037         	call	i2___wmul	;wreg free
 13043  001F3C  C052  FFF6         	movff	i2sprintf@f,tblptrl
 13044  001F40  C053  FFF7         	movff	i2sprintf@f+1,tblptrh
 13045  001F44  0E00               	movlw	low (__mediumconst shr (0+16))
 13046  001F46  6EF8               	movwf	tblptru,c
 13047  001F48  0008               	tblrd		*
 13048  001F4A  50F5               	movf	tablat,w,c
 13049  001F4C  2611               	addwf	?i2___wmul,f,c
 13050  001F4E  0E00               	movlw	0
 13051  001F50  2212               	addwfc	?i2___wmul+1,f,c
 13052  001F52  0ED0               	movlw	208
 13053  001F54  2411               	addwf	?i2___wmul,w,c
 13054  001F56  0100               	movlb	0	; () banked
 13055  001F58  0100               	movlb	0	; () banked
 13056  001F5A  6F82               	movwf	i2sprintf@prec& (0+255),b
 13057  001F5C  0EFF               	movlw	255
 13058  001F5E  2012               	addwfc	?i2___wmul+1,w,c
 13059  001F60  0100               	movlb	0	; () banked
 13060  001F62  6F83               	movwf	(i2sprintf@prec+1)& (0+255),b
 13061                           
 13062                           ; BSR set to: 0
 13063  001F64  4A52               	infsnz	i2sprintf@f,f,c
 13064  001F66  2A53               	incf	i2sprintf@f+1,f,c
 13065  001F68                     i2l7993:
 13066                           
 13067                           ; BSR set to: 0
 13068  001F68  C052  FFF6         	movff	i2sprintf@f,tblptrl
 13069  001F6C  C053  FFF7         	movff	i2sprintf@f+1,tblptrh
 13070  001F70  0E00               	movlw	low (__mediumconst shr (0+16))
 13071  001F72  6EF8               	movwf	tblptru,c
 13072  001F74  0008               	tblrd		*
 13073  001F76  50F5               	movf	tablat,w,c
 13074  001F78  ECDF  F037         	call	i2_isdigit
 13075  001F7C  A0D8               	btfss	status,0,c
 13076  001F7E  D010               	goto	i2l8003
 13077  001F80  D7D3               	goto	i2l7989
 13078  001F82                     i2l7995:
 13079                           
 13080                           ;doprnt.c: 635: prec = 0;
 13081  001F82  0E00               	movlw	0
 13082  001F84  0100               	movlb	0	; () banked
 13083  001F86  0100               	movlb	0	; () banked
 13084  001F88  6F83               	movwf	(i2sprintf@prec+1)& (0+255),b
 13085  001F8A  0E00               	movlw	0
 13086  001F8C  0100               	movlb	0	; () banked
 13087  001F8E  6F82               	movwf	i2sprintf@prec& (0+255),b
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;doprnt.c: 637: flag |= 0x1000;
 13091  001F90  0100               	movlb	0	; () banked
 13092  001F92  0100               	movlb	0	; () banked
 13093  001F94  8975               	bsf	(i2sprintf@flag+1)& (0+255),4,b
 13094  001F96  D004               	goto	i2l8003
 13095  001F98                     i2l7999:
 13096                           
 13097                           ; BSR set to: 0
 13098                           ;doprnt.c: 672: flag |= 0x400;
 13099  001F98  0100               	movlb	0	; () banked
 13100  001F9A  0100               	movlb	0	; () banked
 13101  001F9C  8575               	bsf	(i2sprintf@flag+1)& (0+255),2,b
 13102                           
 13103                           ;doprnt.c: 673: break;
 13104  001F9E  D020               	goto	i2l8005
 13105  001FA0                     i2l8003:
 13106  001FA0  5052               	movf	i2sprintf@f,w,c
 13107  001FA2  6E57               	movwf	??i2_sprintf& (0+255),c
 13108  001FA4  5053               	movf	i2sprintf@f+1,w,c
 13109  001FA6  6E58               	movwf	(??i2_sprintf+1)& (0+255),c
 13110  001FA8  4A52               	infsnz	i2sprintf@f,f,c
 13111  001FAA  2A53               	incf	i2sprintf@f+1,f,c
 13112  001FAC  C057  FFF6         	movff	??i2_sprintf,tblptrl
 13113  001FB0  C058  FFF7         	movff	??i2_sprintf+1,tblptrh
 13114  001FB4  0E00               	movlw	low (__mediumconst shr (0+16))
 13115  001FB6  6EF8               	movwf	tblptru,c
 13116  001FB8  0008               	tblrd		*
 13117  001FBA  0100               	movlb	0	; () banked
 13118  001FBC  CFF5 F084          	movff	tablat,i2sprintf@c
 13119  001FC0  0100               	movlb	0	; () banked
 13120  001FC2  5184               	movf	i2sprintf@c& (0+255),w,b
 13121                           
 13122                           ; Switch size 1, requested type "space"
 13123                           ; Number of cases is 4, Range of values is 0 to 105
 13124                           ; switch strategies available:
 13125                           ; Name         Instructions Cycles
 13126                           ; simple_byte           13     7 (average)
 13127                           ;	Chosen strategy is simple_byte
 13128  001FC4  0A00               	xorlw	0	; case 0
 13129  001FC6  B4D8               	btfsc	status,2,c
 13130  001FC8  EF68  F015         	goto	i2l8255
 13131  001FCC  0A64               	xorlw	100	; case 100
 13132  001FCE  B4D8               	btfsc	status,2,c
 13133  001FD0  D007               	goto	i2l8005
 13134  001FD2  0A02               	xorlw	2	; case 102
 13135  001FD4  B4D8               	btfsc	status,2,c
 13136  001FD6  D7E0               	goto	i2l7999
 13137  001FD8  0A0F               	xorlw	15	; case 105
 13138  001FDA  A4D8               	btfss	status,2,c
 13139  001FDC  EF54  F015         	goto	i2l8253
 13140  001FE0                     i2l8005:
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;doprnt.c: 834: if(flag & (0x700)) {
 13144  001FE0  0E07               	movlw	7
 13145  001FE2  0100               	movlb	0	; () banked
 13146  001FE4  0100               	movlb	0	; () banked
 13147  001FE6  1575               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 13148  001FE8  B4D8               	btfsc	status,2,c
 13149  001FEA  D3B1               	goto	i2l8173
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;doprnt.c: 836: if(flag & 0x1000)
 13153  001FEC  0100               	movlb	0	; () banked
 13154  001FEE  0100               	movlb	0	; () banked
 13155  001FF0  A975               	btfss	(i2sprintf@flag+1)& (0+255),4,b
 13156  001FF2  D007               	goto	i2l8011
 13157                           
 13158                           ; BSR set to: 0
 13159                           ;doprnt.c: 838: prec = 6;
 13160  001FF4  0E00               	movlw	0
 13161  001FF6  0100               	movlb	0	; () banked
 13162  001FF8  0100               	movlb	0	; () banked
 13163  001FFA  6F83               	movwf	(i2sprintf@prec+1)& (0+255),b
 13164  001FFC  0E06               	movlw	6
 13165  001FFE  0100               	movlb	0	; () banked
 13166  002000  6F82               	movwf	i2sprintf@prec& (0+255),b
 13167  002002                     i2l8011:
 13168                           
 13169                           ; BSR set to: 0
 13170                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13171  002002  C06F  FFD9         	movff	i2sprintf@ap,fsr2l
 13172  002006  C070  FFDA         	movff	i2sprintf@ap+1,fsr2h
 13173  00200A  0100               	movlb	0	; () banked
 13174  00200C  CFDE F07F          	movff	postinc2,i2sprintf@fval
 13175  002010  0100               	movlb	0	; () banked
 13176  002012  CFDE F080          	movff	postinc2,i2sprintf@fval+1
 13177  002016  0100               	movlb	0	; () banked
 13178  002018  CFDD F081          	movff	postdec2,i2sprintf@fval+2
 13179                           
 13180                           ; BSR set to: 0
 13181  00201C  0E03               	movlw	3
 13182  00201E  0100               	movlb	0	; () banked
 13183  002020  0100               	movlb	0	; () banked
 13184  002022  276F               	addwf	i2sprintf@ap& (0+255),f,b
 13185  002024  0E00               	movlw	0
 13186  002026  0100               	movlb	0	; () banked
 13187  002028  2370               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;doprnt.c: 840: if(fval < 0.0) {
 13191  00202A  0100               	movlb	0	; () banked
 13192  00202C  0100               	movlb	0	; () banked
 13193  00202E  5181               	movf	(i2sprintf@fval+2)& (0+255),w,b
 13194  002030  0A80               	xorlw	128
 13195  002032  0F80               	addlw	128
 13196  002034  E107               	bnz	i2u643_45
 13197  002036  0E00               	movlw	0
 13198  002038  0100               	movlb	0	; () banked
 13199  00203A  5D80               	subwf	(i2sprintf@fval+1)& (0+255),w,b
 13200  00203C  E103               	bnz	i2u643_45
 13201  00203E  0E00               	movlw	0
 13202  002040  0100               	movlb	0	; () banked
 13203  002042  5D7F               	subwf	i2sprintf@fval& (0+255),w,b
 13204  002044                     i2u643_45:
 13205  002044  B0D8               	btfsc	status,0,c
 13206  002046  D012               	goto	i2l8021
 13207                           
 13208                           ; BSR set to: 0
 13209                           ;doprnt.c: 841: fval = -fval;
 13210  002048  C07F  F001         	movff	i2sprintf@fval,i2___ftneg@f1
 13211  00204C  C080  F002         	movff	i2sprintf@fval+1,i2___ftneg@f1+1
 13212  002050  C081  F003         	movff	i2sprintf@fval+2,i2___ftneg@f1+2
 13213  002054  ECF4  F037         	call	i2___ftneg	;wreg free
 13214  002058  C001  F07F         	movff	?i2___ftneg,i2sprintf@fval
 13215  00205C  C002  F080         	movff	?i2___ftneg+1,i2sprintf@fval+1
 13216  002060  C003  F081         	movff	?i2___ftneg+2,i2sprintf@fval+2
 13217                           
 13218                           ;doprnt.c: 842: flag |= 0x03;
 13219  002064  0E03               	movlw	3
 13220  002066  0100               	movlb	0	; () banked
 13221  002068  0100               	movlb	0	; () banked
 13222  00206A  1374               	iorwf	i2sprintf@flag& (0+255),f,b
 13223  00206C                     i2l8021:
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;doprnt.c: 843: }
 13227                           ;doprnt.c: 844: exp = 0;
 13228  00206C  0E00               	movlw	0
 13229  00206E  0100               	movlb	0	; () banked
 13230  002070  0100               	movlb	0	; () banked
 13231  002072  6F7E               	movwf	(i2sprintf@exp+1)& (0+255),b
 13232  002074  0E00               	movlw	0
 13233  002076  0100               	movlb	0	; () banked
 13234  002078  6F7D               	movwf	i2sprintf@exp& (0+255),b
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;doprnt.c: 845: if( fval!=0) {
 13238  00207A  0E7F               	movlw	127
 13239  00207C  0100               	movlb	0	; () banked
 13240  00207E  0100               	movlb	0	; () banked
 13241  002080  1581               	andwf	(i2sprintf@fval+2)& (0+255),w,b
 13242  002082  0100               	movlb	0	; () banked
 13243  002084  1180               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
 13244  002086  0100               	movlb	0	; () banked
 13245  002088  117F               	iorwf	i2sprintf@fval& (0+255),w,b
 13246  00208A  B4D8               	btfsc	status,2,c
 13247  00208C  D098               	goto	i2l8049
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 13251  00208E  0E82               	movlw	130
 13252  002090  6E57               	movwf	??i2_sprintf& (0+255),c
 13253  002092  0EFF               	movlw	255
 13254  002094  6E58               	movwf	(??i2_sprintf+1)& (0+255),c
 13255  002096  0100               	movlb	0	; () banked
 13256  002098  C07F  F059         	movff	i2sprintf@fval,??i2_sprintf+2
 13257  00209C  0100               	movlb	0	; () banked
 13258  00209E  C080  F05A         	movff	i2sprintf@fval+1,??i2_sprintf+3
 13259  0020A2  0100               	movlb	0	; () banked
 13260  0020A4  C081  F05B         	movff	i2sprintf@fval+2,??i2_sprintf+4
 13261  0020A8  0100               	movlb	0	; () banked
 13262  0020AA  C082  F05C         	movff	i2sprintf@fval+3,??i2_sprintf+5
 13263  0020AE  0E10               	movlw	16
 13264  0020B0  D005               	goto	i2u645_40
 13265  0020B2                     i2u645_45:
 13266  0020B2  90D8               	bcf	status,0,c
 13267  0020B4  325C               	rrcf	??i2_sprintf+5,f,c
 13268  0020B6  325B               	rrcf	??i2_sprintf+4,f,c
 13269  0020B8  325A               	rrcf	??i2_sprintf+3,f,c
 13270  0020BA  3259               	rrcf	??i2_sprintf+2,f,c
 13271  0020BC                     i2u645_40:
 13272  0020BC  2EE8               	decfsz	wreg,f,c
 13273  0020BE  D7F9               	goto	i2u645_45
 13274  0020C0  5059               	movf	??i2_sprintf+2,w,c
 13275  0020C2  2457               	addwf	??i2_sprintf,w,c
 13276  0020C4  0100               	movlb	0	; () banked
 13277  0020C6  0100               	movlb	0	; () banked
 13278  0020C8  6F7D               	movwf	i2sprintf@exp& (0+255),b
 13279  0020CA  0100               	movlb	0	; () banked
 13280  0020CC  0E00               	movlw	0
 13281  0020CE  2058               	addwfc	??i2_sprintf+1,w,c
 13282  0020D0  6F7E               	movwf	(i2sprintf@exp+1)& (0+255),b
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;doprnt.c: 847: exp--;
 13286  0020D2  0100               	movlb	0	; () banked
 13287  0020D4  0100               	movlb	0	; () banked
 13288  0020D6  077D               	decf	i2sprintf@exp& (0+255),f,b
 13289  0020D8  A0D8               	btfss	status,0,c
 13290  0020DA  077E               	decf	(i2sprintf@exp+1)& (0+255),f,b
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;doprnt.c: 848: exp *= 3;
 13294  0020DC  C07D  F011         	movff	i2sprintf@exp,i2___wmul@multiplier
 13295  0020E0  C07E  F012         	movff	i2sprintf@exp+1,i2___wmul@multiplier+1
 13296  0020E4  0E00               	movlw	0
 13297  0020E6  6E14               	movwf	i2___wmul@multiplicand+1,c
 13298  0020E8  0E03               	movlw	3
 13299  0020EA  6E13               	movwf	i2___wmul@multiplicand,c
 13300  0020EC  EC61  F037         	call	i2___wmul	;wreg free
 13301  0020F0  C011  F07D         	movff	?i2___wmul,i2sprintf@exp
 13302  0020F4  C012  F07E         	movff	?i2___wmul+1,i2sprintf@exp+1
 13303                           
 13304                           ;doprnt.c: 849: exp /= 10;
 13305  0020F8  C07D  F008         	movff	i2sprintf@exp,i2___awdiv@dividend
 13306  0020FC  C07E  F009         	movff	i2sprintf@exp+1,i2___awdiv@dividend+1
 13307  002100  0E00               	movlw	0
 13308  002102  6E0B               	movwf	i2___awdiv@divisor+1,c
 13309  002104  0E0A               	movlw	10
 13310  002106  6E0A               	movwf	i2___awdiv@divisor,c
 13311  002108  EC92  F031         	call	i2___awdiv	;wreg free
 13312  00210C  C008  F07D         	movff	?i2___awdiv,i2sprintf@exp
 13313  002110  C009  F07E         	movff	?i2___awdiv+1,i2sprintf@exp+1
 13314                           
 13315                           ;doprnt.c: 850: if(exp < 0)
 13316  002114  0100               	movlb	0	; () banked
 13317  002116  0100               	movlb	0	; () banked
 13318  002118  517E               	movf	(i2sprintf@exp+1)& (0+255),w,b
 13319  00211A  0A80               	xorlw	128
 13320  00211C  6EF3               	movwf	prodl,c
 13321  00211E  0E80               	movlw	128
 13322  002120  5CF3               	subwf	prodl,w,c
 13323  002122  0E00               	movlw	0
 13324  002124  B4D8               	btfsc	status,2,c
 13325  002126  5D7D               	subwf	i2sprintf@exp& (0+255),w,b
 13326  002128  B0D8               	btfsc	status,0,c
 13327  00212A  D005               	goto	i2l8037
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;doprnt.c: 851: exp--;
 13331  00212C  0100               	movlb	0	; () banked
 13332  00212E  0100               	movlb	0	; () banked
 13333  002130  077D               	decf	i2sprintf@exp& (0+255),f,b
 13334  002132  A0D8               	btfss	status,0,c
 13335  002134  077E               	decf	(i2sprintf@exp+1)& (0+255),f,b
 13336  002136                     i2l8037:
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;doprnt.c: 855: integ = scale(-exp);
 13340  002136  0100               	movlb	0	; () banked
 13341  002138  0100               	movlb	0	; () banked
 13342  00213A  517D               	movf	i2sprintf@exp& (0+255),w,b
 13343  00213C  0800               	sublw	0
 13344  00213E  EC9E  F018         	call	i2_scale
 13345  002142  C026  F071         	movff	?i2_scale,i2sprintf@integ
 13346  002146  C027  F072         	movff	?i2_scale+1,i2sprintf@integ+1
 13347  00214A  C028  F073         	movff	?i2_scale+2,i2sprintf@integ+2
 13348                           
 13349                           ;doprnt.c: 856: integ *= fval;
 13350  00214E  0100               	movlb	0	; () banked
 13351  002150  0E00               	movlw	high i2sprintf@integ
 13352  002152  6E27               	movwf	i2___asftmul@f1p+1,c
 13353  002154  0100               	movlb	0	; () banked
 13354  002156  0E71               	movlw	low i2sprintf@integ
 13355  002158  6E26               	movwf	i2___asftmul@f1p,c
 13356  00215A  C07F  F028         	movff	i2sprintf@fval,i2___asftmul@f2
 13357  00215E  C080  F029         	movff	i2sprintf@fval+1,i2___asftmul@f2+1
 13358  002162  C081  F02A         	movff	i2sprintf@fval+2,i2___asftmul@f2+2
 13359  002166  EC08  F037         	call	i2___asftmul	;wreg free
 13360                           
 13361                           ;doprnt.c: 857: if(integ < 1.0)
 13362  00216A  C071  F00E         	movff	i2sprintf@integ,i2___ftge@ff1
 13363  00216E  C072  F00F         	movff	i2sprintf@integ+1,i2___ftge@ff1+1
 13364  002172  C073  F010         	movff	i2sprintf@integ+2,i2___ftge@ff1+2
 13365  002176  0E00               	movlw	0
 13366  002178  6E11               	movwf	i2___ftge@ff2,c
 13367  00217A  0E80               	movlw	128
 13368  00217C  6E12               	movwf	i2___ftge@ff2+1,c
 13369  00217E  0E3F               	movlw	63
 13370  002180  6E13               	movwf	i2___ftge@ff2+2,c
 13371  002182  EC71  F033         	call	i2___ftge	;wreg free
 13372  002186  B0D8               	btfsc	status,0,c
 13373  002188  D006               	goto	i2l8045
 13374                           
 13375                           ;doprnt.c: 858: exp--;
 13376  00218A  0100               	movlb	0	; () banked
 13377  00218C  0100               	movlb	0	; () banked
 13378  00218E  077D               	decf	i2sprintf@exp& (0+255),f,b
 13379  002190  A0D8               	btfss	status,0,c
 13380  002192  077E               	decf	(i2sprintf@exp+1)& (0+255),f,b
 13381  002194  D014               	goto	i2l8049
 13382  002196                     i2l8045:
 13383                           
 13384                           ;doprnt.c: 859: else if(integ >= 10.0)
 13385  002196  C071  F00E         	movff	i2sprintf@integ,i2___ftge@ff1
 13386  00219A  C072  F00F         	movff	i2sprintf@integ+1,i2___ftge@ff1+1
 13387  00219E  C073  F010         	movff	i2sprintf@integ+2,i2___ftge@ff1+2
 13388  0021A2  0E00               	movlw	0
 13389  0021A4  6E11               	movwf	i2___ftge@ff2,c
 13390  0021A6  0E20               	movlw	32
 13391  0021A8  6E12               	movwf	i2___ftge@ff2+1,c
 13392  0021AA  0E41               	movlw	65
 13393  0021AC  6E13               	movwf	i2___ftge@ff2+2,c
 13394  0021AE  EC71  F033         	call	i2___ftge	;wreg free
 13395  0021B2  A0D8               	btfss	status,0,c
 13396  0021B4  D004               	goto	i2l8049
 13397                           
 13398                           ;doprnt.c: 860: exp++;
 13399  0021B6  0100               	movlb	0	; () banked
 13400  0021B8  0100               	movlb	0	; () banked
 13401  0021BA  4B7D               	infsnz	i2sprintf@exp& (0+255),f,b
 13402  0021BC  2B7E               	incf	(i2sprintf@exp+1)& (0+255),f,b
 13403  0021BE                     i2l8049:
 13404                           
 13405                           ;doprnt.c: 861: }
 13406                           ;doprnt.c: 1121: if(prec <= 12)
 13407  0021BE  0100               	movlb	0	; () banked
 13408  0021C0  0100               	movlb	0	; () banked
 13409  0021C2  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 13410  0021C4  0A80               	xorlw	128
 13411  0021C6  6EF3               	movwf	prodl,c
 13412  0021C8  0E80               	movlw	128
 13413  0021CA  5CF3               	subwf	prodl,w,c
 13414  0021CC  0E0D               	movlw	13
 13415  0021CE  B4D8               	btfsc	status,2,c
 13416  0021D0  5D82               	subwf	i2sprintf@prec& (0+255),w,b
 13417  0021D2  B0D8               	btfsc	status,0,c
 13418  0021D4  D013               	goto	i2l8053
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;doprnt.c: 1122: fval += fround(prec);
 13422  0021D6  0100               	movlb	0	; () banked
 13423  0021D8  0E00               	movlw	high i2sprintf@fval
 13424  0021DA  6E31               	movwf	i2___asftadd@f1p+1,c
 13425  0021DC  0100               	movlb	0	; () banked
 13426  0021DE  0E7F               	movlw	low i2sprintf@fval
 13427  0021E0  6E30               	movwf	i2___asftadd@f1p,c
 13428  0021E2  0100               	movlb	0	; () banked
 13429  0021E4  0100               	movlb	0	; () banked
 13430  0021E6  5182               	movf	i2sprintf@prec& (0+255),w,b
 13431  0021E8  EC61  F01F         	call	i2_fround
 13432  0021EC  C026  F032         	movff	?i2_fround,i2___asftadd@f2
 13433  0021F0  C027  F033         	movff	?i2_fround+1,i2___asftadd@f2+1
 13434  0021F4  C028  F034         	movff	?i2_fround+2,i2___asftadd@f2+2
 13435  0021F8  EC26  F037         	call	i2___asftadd	;wreg free
 13436  0021FC                     i2l8053:
 13437                           
 13438                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 13439  0021FC  0100               	movlb	0	; () banked
 13440  0021FE  0100               	movlb	0	; () banked
 13441  002200  517E               	movf	(i2sprintf@exp+1)& (0+255),w,b
 13442  002202  0A80               	xorlw	128
 13443  002204  6EF3               	movwf	prodl,c
 13444  002206  0E80               	movlw	128
 13445  002208  5CF3               	subwf	prodl,w,c
 13446  00220A  0E0A               	movlw	10
 13447  00220C  B4D8               	btfsc	status,2,c
 13448  00220E  5D7D               	subwf	i2sprintf@exp& (0+255),w,b
 13449  002210  B0D8               	btfsc	status,0,c
 13450  002212  D02A               	goto	i2l8061
 13451                           
 13452                           ; BSR set to: 0
 13453  002214  0E7F               	movlw	127
 13454  002216  0100               	movlb	0	; () banked
 13455  002218  0100               	movlb	0	; () banked
 13456  00221A  1581               	andwf	(i2sprintf@fval+2)& (0+255),w,b
 13457  00221C  0100               	movlb	0	; () banked
 13458  00221E  1180               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
 13459  002220  0100               	movlb	0	; () banked
 13460  002222  117F               	iorwf	i2sprintf@fval& (0+255),w,b
 13461  002224  B4D8               	btfsc	status,2,c
 13462  002226  D070               	goto	i2l8077
 13463                           
 13464                           ; BSR set to: 0
 13465  002228  C07F  F02D         	movff	i2sprintf@fval,i2___fttol@f1
 13466  00222C  C080  F02E         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 13467  002230  C081  F02F         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 13468  002234  ECE8  F02E         	call	i2___fttol	;wreg free
 13469  002238  C02D  F057         	movff	?i2___fttol,??i2_sprintf
 13470  00223C  C02E  F058         	movff	?i2___fttol+1,??i2_sprintf+1
 13471  002240  C02F  F059         	movff	?i2___fttol+2,??i2_sprintf+2
 13472  002244  C030  F05A         	movff	?i2___fttol+3,??i2_sprintf+3
 13473  002248  505A               	movf	??i2_sprintf+3,w,c
 13474  00224A  1057               	iorwf	??i2_sprintf,w,c
 13475  00224C  1058               	iorwf	??i2_sprintf+1,w,c
 13476  00224E  1059               	iorwf	??i2_sprintf+2,w,c
 13477  002250  A4D8               	btfss	status,2,c
 13478  002252  D05A               	goto	i2l8077
 13479  002254  0100               	movlb	0	; () banked
 13480  002256  0100               	movlb	0	; () banked
 13481  002258  517E               	movf	(i2sprintf@exp+1)& (0+255),w,b
 13482  00225A  0A80               	xorlw	128
 13483  00225C  0F80               	addlw	-128
 13484  00225E  0E02               	movlw	2
 13485  002260  B4D8               	btfsc	status,2,c
 13486  002262  5D7D               	subwf	i2sprintf@exp& (0+255),w,b
 13487  002264  A0D8               	btfss	status,0,c
 13488  002266  D050               	goto	i2l8077
 13489  002268                     i2l8061:
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;doprnt.c: 1129: if(integ < 4.294967296){
 13493  002268  C071  F00E         	movff	i2sprintf@integ,i2___ftge@ff1
 13494  00226C  C072  F00F         	movff	i2sprintf@integ+1,i2___ftge@ff1+1
 13495  002270  C073  F010         	movff	i2sprintf@integ+2,i2___ftge@ff1+2
 13496  002274  0E70               	movlw	112
 13497  002276  6E11               	movwf	i2___ftge@ff2,c
 13498  002278  0E89               	movlw	137
 13499  00227A  6E12               	movwf	i2___ftge@ff2+1,c
 13500  00227C  0E40               	movlw	64
 13501  00227E  6E13               	movwf	i2___ftge@ff2+2,c
 13502  002280  EC71  F033         	call	i2___ftge	;wreg free
 13503  002284  B0D8               	btfsc	status,0,c
 13504  002286  D003               	goto	i2l8065
 13505                           
 13506                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 13507  002288  0100               	movlb	0	; () banked
 13508  00228A  0EF7               	movlw	247
 13509  00228C  D002               	goto	L29
 13510  00228E                     i2l8065:
 13511                           
 13512                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 13513  00228E  0100               	movlb	0	; () banked
 13514  002290  0EF8               	movlw	248
 13515  002292                     L29:
 13516  002292  0100               	movlb	0	; () banked
 13517  002294  277D               	addwf	i2sprintf@exp& (0+255),f,b
 13518  002296  0EFF               	movlw	255
 13519  002298  0100               	movlb	0	; () banked
 13520  00229A  237E               	addwfc	(i2sprintf@exp+1)& (0+255),f,b
 13521                           
 13522                           ; BSR set to: 0
 13523                           ;doprnt.c: 1133: }
 13524                           ;doprnt.c: 1134: integ = scale(exp);
 13525                           
 13526                           ; BSR set to: 0
 13527  00229C  0100               	movlb	0	; () banked
 13528  00229E  0100               	movlb	0	; () banked
 13529  0022A0  517D               	movf	i2sprintf@exp& (0+255),w,b
 13530  0022A2  EC9E  F018         	call	i2_scale
 13531  0022A6  C026  F071         	movff	?i2_scale,i2sprintf@integ
 13532  0022AA  C027  F072         	movff	?i2_scale+1,i2sprintf@integ+1
 13533  0022AE  C028  F073         	movff	?i2_scale+2,i2sprintf@integ+2
 13534                           
 13535                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 13536  0022B2  C07F  F001         	movff	i2sprintf@fval,i2__tdiv_to_l_@f1
 13537  0022B6  C080  F002         	movff	i2sprintf@fval+1,i2__tdiv_to_l_@f1+1
 13538  0022BA  C081  F003         	movff	i2sprintf@fval+2,i2__tdiv_to_l_@f1+2
 13539  0022BE  C071  F004         	movff	i2sprintf@integ,i2__tdiv_to_l_@f2
 13540  0022C2  C072  F005         	movff	i2sprintf@integ+1,i2__tdiv_to_l_@f2+1
 13541  0022C6  C073  F006         	movff	i2sprintf@integ+2,i2__tdiv_to_l_@f2+2
 13542  0022CA  EC2D  F02B         	call	i2__tdiv_to_l_	;wreg free
 13543  0022CE  C001  F063         	movff	?i2__tdiv_to_l_,i2_sprintf$1054
 13544  0022D2  C002  F064         	movff	?i2__tdiv_to_l_+1,i2_sprintf$1054+1
 13545  0022D6  C003  F065         	movff	?i2__tdiv_to_l_+2,i2_sprintf$1054+2
 13546  0022DA  C004  F066         	movff	?i2__tdiv_to_l_+3,i2_sprintf$1054+3
 13547  0022DE  C063  F078         	movff	i2_sprintf$1054,i2sprintf@_val
 13548  0022E2  C064  F079         	movff	i2_sprintf$1054+1,i2sprintf@_val+1
 13549  0022E6  C065  F07A         	movff	i2_sprintf$1054+2,i2sprintf@_val+2
 13550  0022EA  C066  F07B         	movff	i2_sprintf$1054+3,i2sprintf@_val+3
 13551                           
 13552                           ;doprnt.c: 1138: fval = 0.0;
 13553  0022EE  0E00               	movlw	0
 13554  0022F0  0100               	movlb	0	; () banked
 13555  0022F2  0100               	movlb	0	; () banked
 13556  0022F4  6F7F               	movwf	i2sprintf@fval& (0+255),b
 13557  0022F6  0E00               	movlw	0
 13558  0022F8  0100               	movlb	0	; () banked
 13559  0022FA  0100               	movlb	0	; () banked
 13560  0022FC  6F80               	movwf	(i2sprintf@fval+1)& (0+255),b
 13561  0022FE  0E00               	movlw	0
 13562  002300  0100               	movlb	0	; () banked
 13563  002302  0100               	movlb	0	; () banked
 13564  002304  6F81               	movwf	(i2sprintf@fval+2)& (0+255),b
 13565                           
 13566                           ;doprnt.c: 1139: } else {
 13567  002306  D02F               	goto	i2l8083
 13568  002308                     i2l8077:
 13569                           
 13570                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 13571  002308  C07F  F02D         	movff	i2sprintf@fval,i2___fttol@f1
 13572  00230C  C080  F02E         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 13573  002310  C081  F02F         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 13574  002314  ECE8  F02E         	call	i2___fttol	;wreg free
 13575  002318  C02D  F078         	movff	?i2___fttol,i2sprintf@_val
 13576  00231C  C02E  F079         	movff	?i2___fttol+1,i2sprintf@_val+1
 13577  002320  C02F  F07A         	movff	?i2___fttol+2,i2sprintf@_val+2
 13578  002324  C030  F07B         	movff	?i2___fttol+3,i2sprintf@_val+3
 13579                           
 13580                           ;doprnt.c: 1141: fval -= (double)_val._val;
 13581  002328  0100               	movlb	0	; () banked
 13582  00232A  0E00               	movlw	high i2sprintf@fval
 13583  00232C  6E1C               	movwf	i2___asftsub@f1p+1,c
 13584  00232E  0100               	movlb	0	; () banked
 13585  002330  0E7F               	movlw	low i2sprintf@fval
 13586  002332  6E1B               	movwf	i2___asftsub@f1p,c
 13587  002334  C078  F009         	movff	i2sprintf@_val,i2___lltoft@c
 13588  002338  C079  F00A         	movff	i2sprintf@_val+1,i2___lltoft@c+1
 13589  00233C  C07A  F00B         	movff	i2sprintf@_val+2,i2___lltoft@c+2
 13590  002340  C07B  F00C         	movff	i2sprintf@_val+3,i2___lltoft@c+3
 13591  002344  EC72  F034         	call	i2___lltoft	;wreg free
 13592  002348  C009  F01D         	movff	?i2___lltoft,i2___asftsub@f2
 13593  00234C  C00A  F01E         	movff	?i2___lltoft+1,i2___asftsub@f2+1
 13594  002350  C00B  F01F         	movff	?i2___lltoft+2,i2___asftsub@f2+2
 13595  002354  ECEA  F036         	call	i2___asftsub	;wreg free
 13596                           
 13597                           ;doprnt.c: 1142: exp = 0;
 13598  002358  0E00               	movlw	0
 13599  00235A  0100               	movlb	0	; () banked
 13600  00235C  0100               	movlb	0	; () banked
 13601  00235E  6F7E               	movwf	(i2sprintf@exp+1)& (0+255),b
 13602  002360  0E00               	movlw	0
 13603  002362  0100               	movlb	0	; () banked
 13604  002364  6F7D               	movwf	i2sprintf@exp& (0+255),b
 13605  002366                     i2l8083:
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;doprnt.c: 1143: }
 13609                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 13610  002366  6E57               	movwf	??i2_sprintf& (0+255),c
 13611  002368  0E01               	movlw	1
 13612  00236A  0100               	movlb	0	; () banked
 13613  00236C  0100               	movlb	0	; () banked
 13614  00236E  6F84               	movwf	i2sprintf@c& (0+255),b
 13615  002370  5057               	movf	??i2_sprintf& (0+255),w,c
 13616  002372                     
 13617                           ; BSR set to: 0
 13618  002372  0100               	movlb	0	; () banked
 13619  002374  0100               	movlb	0	; () banked
 13620  002376  5184               	movf	i2sprintf@c& (0+255),w,b
 13621  002378  0A0A               	xorlw	10
 13622  00237A  B4D8               	btfsc	status,2,c
 13623  00237C  D024               	goto	i2l8097
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 13627                           
 13628                           ; BSR set to: 0
 13629                           
 13630                           ; BSR set to: 0
 13631  00237E  0100               	movlb	0	; () banked
 13632  002380  0100               	movlb	0	; () banked
 13633  002382  5184               	movf	i2sprintf@c& (0+255),w,b
 13634  002384  0D04               	mullw	4
 13635  002386  0E01               	movlw	low _dpowers
 13636  002388  24F3               	addwf	prodl,w,c
 13637  00238A  6EF6               	movwf	tblptrl,c
 13638  00238C  0E0F               	movlw	high _dpowers
 13639  00238E  20F4               	addwfc	prodh,w,c
 13640  002390  6EF7               	movwf	tblptrh,c
 13641  002392  6AF8               	clrf	tblptru,c
 13642  002394  0E00               	movlw	low (__mediumconst shr (0+16))
 13643  002396  22F8               	addwfc	tblptru,f,c
 13644  002398  0009               	tblrd		*+
 13645  00239A  50F5               	movf	tablat,w,c
 13646  00239C  0100               	movlb	0	; () banked
 13647  00239E  0100               	movlb	0	; () banked
 13648  0023A0  5D78               	subwf	i2sprintf@_val& (0+255),w,b
 13649  0023A2  0009               	tblrd		*+
 13650  0023A4  50F5               	movf	tablat,w,c
 13651  0023A6  0100               	movlb	0	; () banked
 13652  0023A8  5979               	subwfb	(i2sprintf@_val+1)& (0+255),w,b
 13653  0023AA  0009               	tblrd		*+
 13654  0023AC  50F5               	movf	tablat,w,c
 13655  0023AE  0100               	movlb	0	; () banked
 13656  0023B0  597A               	subwfb	(i2sprintf@_val+2)& (0+255),w,b
 13657  0023B2  0009               	tblrd		*+
 13658  0023B4  50F5               	movf	tablat,w,c
 13659  0023B6  0100               	movlb	0	; () banked
 13660  0023B8  597B               	subwfb	(i2sprintf@_val+3)& (0+255),w,b
 13661  0023BA  A0D8               	btfss	status,0,c
 13662  0023BC  D004               	goto	i2l8097
 13663                           
 13664                           ; BSR set to: 0
 13665                           
 13666                           ; BSR set to: 0
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;doprnt.c: 1147: break;
 13670  0023BE  0100               	movlb	0	; () banked
 13671  0023C0  0100               	movlb	0	; () banked
 13672  0023C2  2B84               	incf	i2sprintf@c& (0+255),f,b
 13673  0023C4  D7D6               	goto	L30
 13674  0023C6                     i2l8097:
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;doprnt.c: 1151: width -= prec + c + exp;
 13678  0023C6  0100               	movlb	0	; () banked
 13679  0023C8  C084  F057         	movff	i2sprintf@c,??i2_sprintf
 13680  0023CC  6A58               	clrf	(??i2_sprintf+1)& (0+255),c
 13681  0023CE  BE57               	btfsc	??i2_sprintf& (0+255),7,c
 13682  0023D0  0658               	decf	(??i2_sprintf+1)& (0+255),f,c
 13683  0023D2  0100               	movlb	0	; () banked
 13684  0023D4  0100               	movlb	0	; () banked
 13685  0023D6  5182               	movf	i2sprintf@prec& (0+255),w,b
 13686  0023D8  2657               	addwf	??i2_sprintf,f,c
 13687  0023DA  0100               	movlb	0	; () banked
 13688  0023DC  0100               	movlb	0	; () banked
 13689  0023DE  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 13690  0023E0  2258               	addwfc	??i2_sprintf+1,f,c
 13691  0023E2  0100               	movlb	0	; () banked
 13692  0023E4  0100               	movlb	0	; () banked
 13693  0023E6  517D               	movf	i2sprintf@exp& (0+255),w,b
 13694  0023E8  2657               	addwf	??i2_sprintf,f,c
 13695  0023EA  0100               	movlb	0	; () banked
 13696  0023EC  0100               	movlb	0	; () banked
 13697  0023EE  517E               	movf	(i2sprintf@exp+1)& (0+255),w,b
 13698  0023F0  2258               	addwfc	??i2_sprintf+1,f,c
 13699  0023F2  5057               	movf	??i2_sprintf,w,c
 13700  0023F4  0100               	movlb	0	; () banked
 13701  0023F6  0100               	movlb	0	; () banked
 13702  0023F8  5F76               	subwf	i2sprintf@width& (0+255),f,b
 13703  0023FA  5058               	movf	??i2_sprintf+1,w,c
 13704  0023FC  0100               	movlb	0	; () banked
 13705  0023FE  0100               	movlb	0	; () banked
 13706  002400  5B77               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 13707                           
 13708                           ;doprnt.c: 1152: if(
 13709                           ;doprnt.c: 1156: prec)
 13710  002402  0100               	movlb	0	; () banked
 13711  002404  0100               	movlb	0	; () banked
 13712  002406  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 13713  002408  1182               	iorwf	i2sprintf@prec& (0+255),w,b
 13714  00240A  B4D8               	btfsc	status,2,c
 13715  00240C  D005               	goto	i2l8101
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;doprnt.c: 1157: width--;
 13719  00240E  0100               	movlb	0	; () banked
 13720  002410  0100               	movlb	0	; () banked
 13721  002412  0776               	decf	i2sprintf@width& (0+255),f,b
 13722  002414  A0D8               	btfss	status,0,c
 13723  002416  0777               	decf	(i2sprintf@width+1)& (0+255),f,b
 13724  002418                     i2l8101:
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;doprnt.c: 1158: if(flag & 0x03)
 13728  002418  0E03               	movlw	3
 13729  00241A  0100               	movlb	0	; () banked
 13730  00241C  0100               	movlb	0	; () banked
 13731  00241E  1574               	andwf	i2sprintf@flag& (0+255),w,b
 13732  002420  6E57               	movwf	??i2_sprintf& (0+255),c
 13733  002422  0E00               	movlw	0
 13734  002424  0100               	movlb	0	; () banked
 13735  002426  0100               	movlb	0	; () banked
 13736  002428  1575               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 13737  00242A  6E58               	movwf	(??i2_sprintf+1)& (0+255),c
 13738  00242C  5058               	movf	??i2_sprintf+1,w,c
 13739  00242E  1057               	iorwf	??i2_sprintf,w,c
 13740  002430  B4D8               	btfsc	status,2,c
 13741  002432  D00E               	goto	i2l8111
 13742  002434  D008               	goto	L31
 13743  002436                     i2l8105:
 13744                           
 13745                           ; BSR set to: 0
 13746                           ;doprnt.c: 1190: ((*sp++ = (' ')));
 13747  002436  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 13748  00243A  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13749  00243E  0E20               	movlw	32
 13750  002440  6EDF               	movwf	indf2,c
 13751                           
 13752                           ; BSR set to: 0
 13753  002442  4A50               	infsnz	i2sprintf@sp,f,c
 13754  002444  2A51               	incf	i2sprintf@sp+1,f,c
 13755  002446                     L31:
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;doprnt.c: 1191: width--;
 13759  002446  0100               	movlb	0	; () banked
 13760  002448  0100               	movlb	0	; () banked
 13761  00244A  0776               	decf	i2sprintf@width& (0+255),f,b
 13762  00244C  A0D8               	btfss	status,0,c
 13763  00244E  0777               	decf	(i2sprintf@width+1)& (0+255),f,b
 13764  002450                     i2l8111:
 13765                           
 13766                           ; BSR set to: 0
 13767  002450  0100               	movlb	0	; () banked
 13768  002452  0100               	movlb	0	; () banked
 13769  002454  5177               	movf	(i2sprintf@width+1)& (0+255),w,b
 13770  002456  0A80               	xorlw	128
 13771  002458  6EF3               	movwf	prodl,c
 13772  00245A  0E80               	movlw	128
 13773  00245C  5CF3               	subwf	prodl,w,c
 13774  00245E  0E01               	movlw	1
 13775  002460  B4D8               	btfsc	status,2,c
 13776  002462  5D76               	subwf	i2sprintf@width& (0+255),w,b
 13777  002464  B0D8               	btfsc	status,0,c
 13778  002466  D7E7               	goto	i2l8105
 13779                           
 13780                           ; BSR set to: 0
 13781                           ;doprnt.c: 1192: }
 13782                           ;doprnt.c: 1197: if(flag & 0x03)
 13783                           
 13784                           ; BSR set to: 0
 13785  002468  0E03               	movlw	3
 13786  00246A  0100               	movlb	0	; () banked
 13787  00246C  0100               	movlb	0	; () banked
 13788  00246E  1574               	andwf	i2sprintf@flag& (0+255),w,b
 13789  002470  6E57               	movwf	??i2_sprintf& (0+255),c
 13790  002472  0E00               	movlw	0
 13791  002474  0100               	movlb	0	; () banked
 13792  002476  0100               	movlb	0	; () banked
 13793  002478  1575               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 13794  00247A  6E58               	movwf	(??i2_sprintf+1)& (0+255),c
 13795  00247C  5058               	movf	??i2_sprintf+1,w,c
 13796  00247E  1057               	iorwf	??i2_sprintf,w,c
 13797  002480  B4D8               	btfsc	status,2,c
 13798  002482  D056               	goto	i2l8127
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;doprnt.c: 1199: ((*sp++ = ('-')));
 13802  002484  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 13803  002488  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13804  00248C  0E2D               	movlw	45
 13805  00248E  D04D               	goto	L32
 13806  002490                     i2l8119:
 13807                           
 13808                           ; BSR set to: 0
 13809                           ;doprnt.c: 1209: {
 13810                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
 13811  002490  C078  F001         	movff	i2sprintf@_val,i2___lldiv@dividend
 13812  002494  C079  F002         	movff	i2sprintf@_val+1,i2___lldiv@dividend+1
 13813  002498  C07A  F003         	movff	i2sprintf@_val+2,i2___lldiv@dividend+2
 13814  00249C  C07B  F004         	movff	i2sprintf@_val+3,i2___lldiv@dividend+3
 13815  0024A0  0100               	movlb	0	; () banked
 13816  0024A2  0100               	movlb	0	; () banked
 13817  0024A4  5184               	movf	i2sprintf@c& (0+255),w,b
 13818  0024A6  0D04               	mullw	4
 13819  0024A8  0E01               	movlw	low _dpowers
 13820  0024AA  24F3               	addwf	prodl,w,c
 13821  0024AC  6EF6               	movwf	tblptrl,c
 13822  0024AE  0E0F               	movlw	high _dpowers
 13823  0024B0  20F4               	addwfc	prodh,w,c
 13824  0024B2  6EF7               	movwf	tblptrh,c
 13825  0024B4  6AF8               	clrf	tblptru,c
 13826  0024B6  0E00               	movlw	low (__mediumconst shr (0+16))
 13827  0024B8  22F8               	addwfc	tblptru,f,c
 13828  0024BA  0009               	tblrd		*+
 13829  0024BC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13830  0024C0  0009               	tblrd		*+
 13831  0024C2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13832  0024C6  0009               	tblrd		*+
 13833  0024C8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13834  0024CC  000A               	tblrd		*-
 13835  0024CE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13836  0024D2  ECB9  F033         	call	i2___lldiv	;wreg free
 13837  0024D6  C001  F067         	movff	?i2___lldiv,i2sprintf@vd
 13838  0024DA  C002  F068         	movff	?i2___lldiv+1,i2sprintf@vd+1
 13839  0024DE  C003  F069         	movff	?i2___lldiv+2,i2sprintf@vd+2
 13840  0024E2  C004  F06A         	movff	?i2___lldiv+3,i2sprintf@vd+3
 13841                           
 13842                           ;doprnt.c: 1211: vd %= 10;
 13843  0024E6  C067  F00F         	movff	i2sprintf@vd,i2___llmod@dividend
 13844  0024EA  C068  F010         	movff	i2sprintf@vd+1,i2___llmod@dividend+1
 13845  0024EE  C069  F011         	movff	i2sprintf@vd+2,i2___llmod@dividend+2
 13846  0024F2  C06A  F012         	movff	i2sprintf@vd+3,i2___llmod@dividend+3
 13847  0024F6  0E0A               	movlw	10
 13848  0024F8  6E13               	movwf	i2___llmod@divisor,c
 13849  0024FA  0E00               	movlw	0
 13850  0024FC  6E14               	movwf	i2___llmod@divisor+1,c
 13851  0024FE  0E00               	movlw	0
 13852  002500  6E15               	movwf	i2___llmod@divisor+2,c
 13853  002502  0E00               	movlw	0
 13854  002504  6E16               	movwf	i2___llmod@divisor+3,c
 13855  002506  EC3D  F034         	call	i2___llmod	;wreg free
 13856  00250A  C00F  F067         	movff	?i2___llmod,i2sprintf@vd
 13857  00250E  C010  F068         	movff	?i2___llmod+1,i2sprintf@vd+1
 13858  002512  C011  F069         	movff	?i2___llmod+2,i2sprintf@vd+2
 13859  002516  C012  F06A         	movff	?i2___llmod+3,i2sprintf@vd+3
 13860                           
 13861                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
 13862  00251A  0100               	movlb	0	; () banked
 13863  00251C  0100               	movlb	0	; () banked
 13864  00251E  5167               	movf	i2sprintf@vd& (0+255),w,b
 13865  002520  0F30               	addlw	48
 13866  002522  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 13867  002526  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13868  00252A                     L32:
 13869  00252A  6EDF               	movwf	indf2,c
 13870                           
 13871                           ; BSR set to: 0
 13872  00252C  4A50               	infsnz	i2sprintf@sp,f,c
 13873  00252E  2A51               	incf	i2sprintf@sp+1,f,c
 13874  002530                     i2l8127:
 13875                           
 13876                           ; BSR set to: 0
 13877  002530  0100               	movlb	0	; () banked
 13878  002532  0100               	movlb	0	; () banked
 13879  002534  0784               	decf	i2sprintf@c& (0+255),f,b
 13880  002536  0100               	movlb	0	; () banked
 13881  002538  2984               	incf	i2sprintf@c& (0+255),w,b
 13882  00253A  B4D8               	btfsc	status,2,c
 13883  00253C  D00E               	goto	i2l8135
 13884  00253E  D7A8               	goto	i2l8119
 13885  002540                     i2l8129:
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;doprnt.c: 1217: ((*sp++ = ('0')));
 13889  002540  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 13890  002544  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13891  002548  0E30               	movlw	48
 13892  00254A  6EDF               	movwf	indf2,c
 13893                           
 13894                           ; BSR set to: 0
 13895  00254C  4A50               	infsnz	i2sprintf@sp,f,c
 13896  00254E  2A51               	incf	i2sprintf@sp+1,f,c
 13897                           
 13898                           ; BSR set to: 0
 13899                           ;doprnt.c: 1218: exp--;
 13900  002550  0100               	movlb	0	; () banked
 13901  002552  0100               	movlb	0	; () banked
 13902  002554  077D               	decf	i2sprintf@exp& (0+255),f,b
 13903  002556  A0D8               	btfss	status,0,c
 13904  002558  077E               	decf	(i2sprintf@exp+1)& (0+255),f,b
 13905  00255A                     i2l8135:
 13906                           
 13907                           ; BSR set to: 0
 13908  00255A  0100               	movlb	0	; () banked
 13909  00255C  0100               	movlb	0	; () banked
 13910  00255E  517E               	movf	(i2sprintf@exp+1)& (0+255),w,b
 13911  002560  0A80               	xorlw	128
 13912  002562  6EF3               	movwf	prodl,c
 13913  002564  0E80               	movlw	128
 13914  002566  5CF3               	subwf	prodl,w,c
 13915  002568  0E01               	movlw	1
 13916  00256A  B4D8               	btfsc	status,2,c
 13917  00256C  5D7D               	subwf	i2sprintf@exp& (0+255),w,b
 13918  00256E  B0D8               	btfsc	status,0,c
 13919  002570  D7E7               	goto	i2l8129
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;doprnt.c: 1219: }
 13923                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13924                           
 13925                           ; BSR set to: 0
 13926  002572  0100               	movlb	0	; () banked
 13927  002574  0100               	movlb	0	; () banked
 13928  002576  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 13929  002578  0A80               	xorlw	128
 13930  00257A  0F80               	addlw	-128
 13931  00257C  0E09               	movlw	9
 13932  00257E  B4D8               	btfsc	status,2,c
 13933  002580  5D82               	subwf	i2sprintf@prec& (0+255),w,b
 13934  002582  A0D8               	btfss	status,0,c
 13935  002584  D007               	goto	i2l337
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13939  002586  6E57               	movwf	??i2_sprintf& (0+255),c
 13940  002588  0E08               	movlw	8
 13941  00258A  0100               	movlb	0	; () banked
 13942  00258C  0100               	movlb	0	; () banked
 13943  00258E  6F84               	movwf	i2sprintf@c& (0+255),b
 13944  002590  5057               	movf	??i2_sprintf& (0+255),w,c
 13945  002592  D002               	goto	i2l8141
 13946  002594                     i2l337:
 13947                           
 13948                           ; BSR set to: 0
 13949                           ;doprnt.c: 1222: else
 13950                           ;doprnt.c: 1223: c = prec;
 13951  002594  C082  F084         	movff	i2sprintf@prec,i2sprintf@c
 13952  002598                     i2l8141:
 13953                           
 13954                           ; BSR set to: 0
 13955                           ;doprnt.c: 1224: prec -= c;
 13956  002598  0100               	movlb	0	; () banked
 13957  00259A  0100               	movlb	0	; () banked
 13958  00259C  5184               	movf	i2sprintf@c& (0+255),w,b
 13959  00259E  0100               	movlb	0	; () banked
 13960  0025A0  0100               	movlb	0	; () banked
 13961  0025A2  5F82               	subwf	i2sprintf@prec& (0+255),f,b
 13962  0025A4  0E00               	movlw	0
 13963  0025A6  0100               	movlb	0	; () banked
 13964  0025A8  BF84               	btfsc	i2sprintf@c& (0+255),7,b
 13965  0025AA  0EFF               	movlw	255
 13966  0025AC  0100               	movlb	0	; () banked
 13967  0025AE  0100               	movlb	0	; () banked
 13968  0025B0  5B83               	subwfb	(i2sprintf@prec+1)& (0+255),f,b
 13969                           
 13970                           ; BSR set to: 0
 13971                           ;doprnt.c: 1228: if(c)
 13972  0025B2  0100               	movlb	0	; () banked
 13973  0025B4  0100               	movlb	0	; () banked
 13974  0025B6  5184               	movf	i2sprintf@c& (0+255),w,b
 13975  0025B8  B4D8               	btfsc	status,2,c
 13976  0025BA  D008               	goto	i2l8149
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;doprnt.c: 1230: ((*sp++ = ('.')));
 13980  0025BC  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 13981  0025C0  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 13982  0025C4  0E2E               	movlw	46
 13983  0025C6  6EDF               	movwf	indf2,c
 13984                           
 13985                           ; BSR set to: 0
 13986  0025C8  4A50               	infsnz	i2sprintf@sp,f,c
 13987  0025CA  2A51               	incf	i2sprintf@sp+1,f,c
 13988  0025CC                     i2l8149:
 13989                           
 13990                           ; BSR set to: 0
 13991                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 13992  0025CC  0100               	movlb	0	; () banked
 13993  0025CE  0100               	movlb	0	; () banked
 13994  0025D0  5184               	movf	i2sprintf@c& (0+255),w,b
 13995  0025D2  EC9E  F018         	call	i2_scale
 13996  0025D6  C026  F060         	movff	?i2_scale,i2_sprintf$2286
 13997  0025DA  C027  F061         	movff	?i2_scale+1,i2_sprintf$2286+1
 13998  0025DE  C028  F062         	movff	?i2_scale+2,i2_sprintf$2286+2
 13999                           
 14000                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 14001  0025E2  C07F  F01A         	movff	i2sprintf@fval,i2___ftmul@f2
 14002  0025E6  C080  F01B         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 14003  0025EA  C081  F01C         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 14004  0025EE  C060  F017         	movff	i2_sprintf$2286,i2___ftmul@f1
 14005  0025F2  C061  F018         	movff	i2_sprintf$2286+1,i2___ftmul@f1+1
 14006  0025F6  C062  F019         	movff	i2_sprintf$2286+2,i2___ftmul@f1+2
 14007  0025FA  EC6C  F02E         	call	i2___ftmul	;wreg free
 14008  0025FE  C017  F02D         	movff	?i2___ftmul,i2___fttol@f1
 14009  002602  C018  F02E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 14010  002606  C019  F02F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 14011  00260A  ECE8  F02E         	call	i2___fttol	;wreg free
 14012  00260E  C02D  F078         	movff	?i2___fttol,i2sprintf@_val
 14013  002612  C02E  F079         	movff	?i2___fttol+1,i2sprintf@_val+1
 14014  002616  C02F  F07A         	movff	?i2___fttol+2,i2sprintf@_val+2
 14015  00261A  C030  F07B         	movff	?i2___fttol+3,i2sprintf@_val+3
 14016                           
 14017                           ;doprnt.c: 1237: while(c--) {
 14018  00261E  D07B               	goto	i2l8163
 14019  002620                     i2l8153:
 14020                           
 14021                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
 14022  002620  C078  F001         	movff	i2sprintf@_val,i2___lldiv@dividend
 14023  002624  C079  F002         	movff	i2sprintf@_val+1,i2___lldiv@dividend+1
 14024  002628  C07A  F003         	movff	i2sprintf@_val+2,i2___lldiv@dividend+2
 14025  00262C  C07B  F004         	movff	i2sprintf@_val+3,i2___lldiv@dividend+3
 14026  002630  0100               	movlb	0	; () banked
 14027  002632  0100               	movlb	0	; () banked
 14028  002634  5184               	movf	i2sprintf@c& (0+255),w,b
 14029  002636  0D04               	mullw	4
 14030  002638  0E01               	movlw	low _dpowers
 14031  00263A  24F3               	addwf	prodl,w,c
 14032  00263C  6EF6               	movwf	tblptrl,c
 14033  00263E  0E0F               	movlw	high _dpowers
 14034  002640  20F4               	addwfc	prodh,w,c
 14035  002642  6EF7               	movwf	tblptrh,c
 14036  002644  6AF8               	clrf	tblptru,c
 14037  002646  0E00               	movlw	low (__mediumconst shr (0+16))
 14038  002648  22F8               	addwfc	tblptru,f,c
 14039  00264A  0009               	tblrd		*+
 14040  00264C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14041  002650  0009               	tblrd		*+
 14042  002652  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14043  002656  0009               	tblrd		*+
 14044  002658  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14045  00265C  000A               	tblrd		*-
 14046  00265E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14047  002662  ECB9  F033         	call	i2___lldiv	;wreg free
 14048  002666  C001  F06B         	movff	?i2___lldiv,i2sprintf@vd_1056
 14049  00266A  C002  F06C         	movff	?i2___lldiv+1,i2sprintf@vd_1056+1
 14050  00266E  C003  F06D         	movff	?i2___lldiv+2,i2sprintf@vd_1056+2
 14051  002672  C004  F06E         	movff	?i2___lldiv+3,i2sprintf@vd_1056+3
 14052                           
 14053                           ;doprnt.c: 1239: vd %= 10;
 14054  002676  C06B  F00F         	movff	i2sprintf@vd_1056,i2___llmod@dividend
 14055  00267A  C06C  F010         	movff	i2sprintf@vd_1056+1,i2___llmod@dividend+1
 14056  00267E  C06D  F011         	movff	i2sprintf@vd_1056+2,i2___llmod@dividend+2
 14057  002682  C06E  F012         	movff	i2sprintf@vd_1056+3,i2___llmod@dividend+3
 14058  002686  0E0A               	movlw	10
 14059  002688  6E13               	movwf	i2___llmod@divisor,c
 14060  00268A  0E00               	movlw	0
 14061  00268C  6E14               	movwf	i2___llmod@divisor+1,c
 14062  00268E  0E00               	movlw	0
 14063  002690  6E15               	movwf	i2___llmod@divisor+2,c
 14064  002692  0E00               	movlw	0
 14065  002694  6E16               	movwf	i2___llmod@divisor+3,c
 14066  002696  EC3D  F034         	call	i2___llmod	;wreg free
 14067  00269A  C00F  F06B         	movff	?i2___llmod,i2sprintf@vd_1056
 14068  00269E  C010  F06C         	movff	?i2___llmod+1,i2sprintf@vd_1056+1
 14069  0026A2  C011  F06D         	movff	?i2___llmod+2,i2sprintf@vd_1056+2
 14070  0026A6  C012  F06E         	movff	?i2___llmod+3,i2sprintf@vd_1056+3
 14071                           
 14072                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
 14073  0026AA  0100               	movlb	0	; () banked
 14074  0026AC  0100               	movlb	0	; () banked
 14075  0026AE  516B               	movf	i2sprintf@vd_1056& (0+255),w,b
 14076  0026B0  0F30               	addlw	48
 14077  0026B2  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 14078  0026B6  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14079  0026BA  6EDF               	movwf	indf2,c
 14080                           
 14081                           ; BSR set to: 0
 14082  0026BC  4A50               	infsnz	i2sprintf@sp,f,c
 14083  0026BE  2A51               	incf	i2sprintf@sp+1,f,c
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;doprnt.c: 1241: _val._val %= dpowers[c];
 14087  0026C0  C078  F00F         	movff	i2sprintf@_val,i2___llmod@dividend
 14088  0026C4  C079  F010         	movff	i2sprintf@_val+1,i2___llmod@dividend+1
 14089  0026C8  C07A  F011         	movff	i2sprintf@_val+2,i2___llmod@dividend+2
 14090  0026CC  C07B  F012         	movff	i2sprintf@_val+3,i2___llmod@dividend+3
 14091  0026D0  0100               	movlb	0	; () banked
 14092  0026D2  0100               	movlb	0	; () banked
 14093  0026D4  5184               	movf	i2sprintf@c& (0+255),w,b
 14094  0026D6  0D04               	mullw	4
 14095  0026D8  0E01               	movlw	low _dpowers
 14096  0026DA  24F3               	addwf	prodl,w,c
 14097  0026DC  6EF6               	movwf	tblptrl,c
 14098  0026DE  0E0F               	movlw	high _dpowers
 14099  0026E0  20F4               	addwfc	prodh,w,c
 14100  0026E2  6EF7               	movwf	tblptrh,c
 14101  0026E4  6AF8               	clrf	tblptru,c
 14102  0026E6  0E00               	movlw	low (__mediumconst shr (0+16))
 14103  0026E8  22F8               	addwfc	tblptru,f,c
 14104  0026EA  0009               	tblrd		*+
 14105  0026EC  CFF5 F013          	movff	tablat,i2___llmod@divisor
 14106  0026F0  0009               	tblrd		*+
 14107  0026F2  CFF5 F014          	movff	tablat,i2___llmod@divisor+1
 14108  0026F6  0009               	tblrd		*+
 14109  0026F8  CFF5 F015          	movff	tablat,i2___llmod@divisor+2
 14110  0026FC  000A               	tblrd		*-
 14111  0026FE  CFF5 F016          	movff	tablat,i2___llmod@divisor+3
 14112  002702  EC3D  F034         	call	i2___llmod	;wreg free
 14113  002706  C00F  F078         	movff	?i2___llmod,i2sprintf@_val
 14114  00270A  C010  F079         	movff	?i2___llmod+1,i2sprintf@_val+1
 14115  00270E  C011  F07A         	movff	?i2___llmod+2,i2sprintf@_val+2
 14116  002712  C012  F07B         	movff	?i2___llmod+3,i2sprintf@_val+3
 14117  002716                     i2l8163:
 14118  002716  0100               	movlb	0	; () banked
 14119  002718  0100               	movlb	0	; () banked
 14120  00271A  0784               	decf	i2sprintf@c& (0+255),f,b
 14121  00271C  0100               	movlb	0	; () banked
 14122  00271E  2984               	incf	i2sprintf@c& (0+255),w,b
 14123  002720  B4D8               	btfsc	status,2,c
 14124  002722  D00E               	goto	i2l8171
 14125  002724  D77D               	goto	i2l8153
 14126  002726                     i2l8165:
 14127                           
 14128                           ; BSR set to: 0
 14129                           ;doprnt.c: 1245: ((*sp++ = ('0')));
 14130  002726  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 14131  00272A  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14132  00272E  0E30               	movlw	48
 14133  002730  6EDF               	movwf	indf2,c
 14134                           
 14135                           ; BSR set to: 0
 14136  002732  4A50               	infsnz	i2sprintf@sp,f,c
 14137  002734  2A51               	incf	i2sprintf@sp+1,f,c
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;doprnt.c: 1246: prec--;
 14141  002736  0100               	movlb	0	; () banked
 14142  002738  0100               	movlb	0	; () banked
 14143  00273A  0782               	decf	i2sprintf@prec& (0+255),f,b
 14144  00273C  A0D8               	btfss	status,0,c
 14145  00273E  0783               	decf	(i2sprintf@prec+1)& (0+255),f,b
 14146  002740                     i2l8171:
 14147                           
 14148                           ; BSR set to: 0
 14149  002740  0100               	movlb	0	; () banked
 14150  002742  0100               	movlb	0	; () banked
 14151  002744  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14152  002746  1182               	iorwf	i2sprintf@prec& (0+255),w,b
 14153  002748  B4D8               	btfsc	status,2,c
 14154  00274A  D1AE               	goto	i2l8253
 14155  00274C  D7EC               	goto	i2l8165
 14156  00274E                     i2l8173:
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;doprnt.c: 1255: }
 14160                           ;doprnt.c: 1262: {
 14161                           ;doprnt.c: 1268: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14162  00274E  C06F  FFD9         	movff	i2sprintf@ap,fsr2l
 14163  002752  C070  FFDA         	movff	i2sprintf@ap+1,fsr2h
 14164  002756  0100               	movlb	0	; () banked
 14165  002758  CFDE F078          	movff	postinc2,i2sprintf@_val
 14166  00275C  0100               	movlb	0	; () banked
 14167  00275E  CFDD F079          	movff	postdec2,i2sprintf@_val+1
 14168  002762  0100               	movlb	0	; () banked
 14169  002764  0E00               	movlw	0
 14170  002766  0100               	movlb	0	; () banked
 14171  002768  BF79               	btfsc	(i2sprintf@_val+1)& (0+255),7,b
 14172  00276A  0EFF               	movlw	-1
 14173  00276C  0100               	movlb	0	; () banked
 14174  00276E  6F7A               	movwf	(i2sprintf@_val+2)& (0+255),b
 14175  002770  0100               	movlb	0	; () banked
 14176  002772  6F7B               	movwf	(i2sprintf@_val+3)& (0+255),b
 14177                           
 14178                           ; BSR set to: 0
 14179  002774  0E02               	movlw	2
 14180  002776  0100               	movlb	0	; () banked
 14181  002778  0100               	movlb	0	; () banked
 14182  00277A  276F               	addwf	i2sprintf@ap& (0+255),f,b
 14183  00277C  0E00               	movlw	0
 14184  00277E  0100               	movlb	0	; () banked
 14185  002780  2370               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 14186                           
 14187                           ; BSR set to: 0
 14188                           ;doprnt.c: 1270: if((long)_val._val < 0) {
 14189  002782  0100               	movlb	0	; () banked
 14190  002784  0100               	movlb	0	; () banked
 14191  002786  517B               	movf	(i2sprintf@_val+3)& (0+255),w,b
 14192  002788  0A80               	xorlw	128
 14193  00278A  0F80               	addlw	128
 14194  00278C  E10B               	bnz	i2u668_45
 14195  00278E  0E00               	movlw	0
 14196  002790  0100               	movlb	0	; () banked
 14197  002792  5D7A               	subwf	(i2sprintf@_val+2)& (0+255),w,b
 14198  002794  E107               	bnz	i2u668_45
 14199  002796  0E00               	movlw	0
 14200  002798  0100               	movlb	0	; () banked
 14201  00279A  5D79               	subwf	(i2sprintf@_val+1)& (0+255),w,b
 14202  00279C  E103               	bnz	i2u668_45
 14203  00279E  0E00               	movlw	0
 14204  0027A0  0100               	movlb	0	; () banked
 14205  0027A2  5D78               	subwf	i2sprintf@_val& (0+255),w,b
 14206  0027A4                     i2u668_45:
 14207  0027A4  B0D8               	btfsc	status,0,c
 14208  0027A6  D014               	goto	i2l8183
 14209                           
 14210                           ; BSR set to: 0
 14211                           ;doprnt.c: 1271: flag |= 0x03;
 14212  0027A8  0E03               	movlw	3
 14213  0027AA  0100               	movlb	0	; () banked
 14214  0027AC  0100               	movlb	0	; () banked
 14215  0027AE  1374               	iorwf	i2sprintf@flag& (0+255),f,b
 14216                           
 14217                           ; BSR set to: 0
 14218                           ;doprnt.c: 1272: _val._val = -_val._val;
 14219  0027B0  0100               	movlb	0	; () banked
 14220  0027B2  0100               	movlb	0	; () banked
 14221  0027B4  1F7B               	comf	(i2sprintf@_val+3)& (0+255),f,b
 14222  0027B6  0100               	movlb	0	; () banked
 14223  0027B8  1F7A               	comf	(i2sprintf@_val+2)& (0+255),f,b
 14224  0027BA  0100               	movlb	0	; () banked
 14225  0027BC  1F79               	comf	(i2sprintf@_val+1)& (0+255),f,b
 14226  0027BE  0100               	movlb	0	; () banked
 14227  0027C0  6D78               	negf	i2sprintf@_val& (0+255),b
 14228  0027C2  0E00               	movlw	0
 14229  0027C4  0100               	movlb	0	; () banked
 14230  0027C6  2379               	addwfc	(i2sprintf@_val+1)& (0+255),f,b
 14231  0027C8  0100               	movlb	0	; () banked
 14232  0027CA  237A               	addwfc	(i2sprintf@_val+2)& (0+255),f,b
 14233  0027CC  0100               	movlb	0	; () banked
 14234  0027CE  237B               	addwfc	(i2sprintf@_val+3)& (0+255),f,b
 14235  0027D0                     i2l8183:
 14236                           
 14237                           ; BSR set to: 0
 14238                           ;doprnt.c: 1273: }
 14239                           ;doprnt.c: 1275: }
 14240                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 14241  0027D0  0100               	movlb	0	; () banked
 14242  0027D2  0100               	movlb	0	; () banked
 14243  0027D4  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14244  0027D6  1182               	iorwf	i2sprintf@prec& (0+255),w,b
 14245  0027D8  A4D8               	btfss	status,2,c
 14246  0027DA  D00C               	goto	i2l8189
 14247                           
 14248                           ; BSR set to: 0
 14249  0027DC  0100               	movlb	0	; () banked
 14250  0027DE  0100               	movlb	0	; () banked
 14251  0027E0  517B               	movf	(i2sprintf@_val+3)& (0+255),w,b
 14252  0027E2  1178               	iorwf	i2sprintf@_val& (0+255),w,b
 14253  0027E4  1179               	iorwf	(i2sprintf@_val+1)& (0+255),w,b
 14254  0027E6  117A               	iorwf	(i2sprintf@_val+2)& (0+255),w,b
 14255  0027E8  A4D8               	btfss	status,2,c
 14256  0027EA  D004               	goto	i2l8189
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;doprnt.c: 1300: prec++;
 14260  0027EC  0100               	movlb	0	; () banked
 14261  0027EE  0100               	movlb	0	; () banked
 14262  0027F0  4B82               	infsnz	i2sprintf@prec& (0+255),f,b
 14263  0027F2  2B83               	incf	(i2sprintf@prec+1)& (0+255),f,b
 14264  0027F4                     i2l8189:
 14265                           
 14266                           ; BSR set to: 0
 14267                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14268  0027F4  6E57               	movwf	??i2_sprintf& (0+255),c
 14269  0027F6  0E01               	movlw	1
 14270  0027F8  0100               	movlb	0	; () banked
 14271  0027FA  0100               	movlb	0	; () banked
 14272  0027FC  6F84               	movwf	i2sprintf@c& (0+255),b
 14273  0027FE  5057               	movf	??i2_sprintf& (0+255),w,c
 14274  002800                     
 14275                           ; BSR set to: 0
 14276  002800  0100               	movlb	0	; () banked
 14277  002802  0100               	movlb	0	; () banked
 14278  002804  5184               	movf	i2sprintf@c& (0+255),w,b
 14279  002806  0A0A               	xorlw	10
 14280  002808  B4D8               	btfsc	status,2,c
 14281  00280A  D024               	goto	i2l8203
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
 14285                           
 14286                           ; BSR set to: 0
 14287                           
 14288                           ; BSR set to: 0
 14289  00280C  0100               	movlb	0	; () banked
 14290  00280E  0100               	movlb	0	; () banked
 14291  002810  5184               	movf	i2sprintf@c& (0+255),w,b
 14292  002812  0D04               	mullw	4
 14293  002814  0E01               	movlw	low _dpowers
 14294  002816  24F3               	addwf	prodl,w,c
 14295  002818  6EF6               	movwf	tblptrl,c
 14296  00281A  0E0F               	movlw	high _dpowers
 14297  00281C  20F4               	addwfc	prodh,w,c
 14298  00281E  6EF7               	movwf	tblptrh,c
 14299  002820  6AF8               	clrf	tblptru,c
 14300  002822  0E00               	movlw	low (__mediumconst shr (0+16))
 14301  002824  22F8               	addwfc	tblptru,f,c
 14302  002826  0009               	tblrd		*+
 14303  002828  50F5               	movf	tablat,w,c
 14304  00282A  0100               	movlb	0	; () banked
 14305  00282C  0100               	movlb	0	; () banked
 14306  00282E  5D78               	subwf	i2sprintf@_val& (0+255),w,b
 14307  002830  0009               	tblrd		*+
 14308  002832  50F5               	movf	tablat,w,c
 14309  002834  0100               	movlb	0	; () banked
 14310  002836  5979               	subwfb	(i2sprintf@_val+1)& (0+255),w,b
 14311  002838  0009               	tblrd		*+
 14312  00283A  50F5               	movf	tablat,w,c
 14313  00283C  0100               	movlb	0	; () banked
 14314  00283E  597A               	subwfb	(i2sprintf@_val+2)& (0+255),w,b
 14315  002840  0009               	tblrd		*+
 14316  002842  50F5               	movf	tablat,w,c
 14317  002844  0100               	movlb	0	; () banked
 14318  002846  597B               	subwfb	(i2sprintf@_val+3)& (0+255),w,b
 14319  002848  A0D8               	btfss	status,0,c
 14320  00284A  D004               	goto	i2l8203
 14321                           
 14322                           ; BSR set to: 0
 14323                           
 14324                           ; BSR set to: 0
 14325                           
 14326                           ; BSR set to: 0
 14327                           ;doprnt.c: 1316: break;
 14328  00284C  0100               	movlb	0	; () banked
 14329  00284E  0100               	movlb	0	; () banked
 14330  002850  2B84               	incf	i2sprintf@c& (0+255),f,b
 14331  002852  D7D6               	goto	L33
 14332  002854                     i2l8203:
 14333                           
 14334                           ; BSR set to: 0
 14335                           ;doprnt.c: 1348: if(c < prec)
 14336  002854  0E80               	movlw	128
 14337  002856  0100               	movlb	0	; () banked
 14338  002858  0100               	movlb	0	; () banked
 14339  00285A  BF84               	btfsc	i2sprintf@c& (0+255),7,b
 14340  00285C  0E7F               	movlw	127
 14341  00285E  6E57               	movwf	??i2_sprintf& (0+255),c
 14342  002860  0100               	movlb	0	; () banked
 14343  002862  0100               	movlb	0	; () banked
 14344  002864  5182               	movf	i2sprintf@prec& (0+255),w,b
 14345  002866  0100               	movlb	0	; () banked
 14346  002868  0100               	movlb	0	; () banked
 14347  00286A  5D84               	subwf	i2sprintf@c& (0+255),w,b
 14348  00286C  0100               	movlb	0	; () banked
 14349  00286E  0100               	movlb	0	; () banked
 14350  002870  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14351  002872  0A80               	xorlw	128
 14352  002874  5857               	subwfb	??i2_sprintf& (0+255),w,c
 14353  002876  B0D8               	btfsc	status,0,c
 14354  002878  D003               	goto	i2l8207
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;doprnt.c: 1349: c = prec;
 14358  00287A  C082  F084         	movff	i2sprintf@prec,i2sprintf@c
 14359  00287E  D01E               	goto	i2l8211
 14360  002880                     i2l8207:
 14361                           
 14362                           ; BSR set to: 0
 14363                           ;doprnt.c: 1350: else if(prec < c)
 14364  002880  0100               	movlb	0	; () banked
 14365  002882  0100               	movlb	0	; () banked
 14366  002884  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14367  002886  0A80               	xorlw	128
 14368  002888  6E57               	movwf	??i2_sprintf& (0+255),c
 14369  00288A  0100               	movlb	0	; () banked
 14370  00288C  0100               	movlb	0	; () banked
 14371  00288E  5184               	movf	i2sprintf@c& (0+255),w,b
 14372  002890  0100               	movlb	0	; () banked
 14373  002892  0100               	movlb	0	; () banked
 14374  002894  5D82               	subwf	i2sprintf@prec& (0+255),w,b
 14375  002896  0E80               	movlw	128
 14376  002898  0100               	movlb	0	; () banked
 14377  00289A  0100               	movlb	0	; () banked
 14378  00289C  BF84               	btfsc	i2sprintf@c& (0+255),7,b
 14379  00289E  0E7F               	movlw	127
 14380  0028A0  5857               	subwfb	??i2_sprintf& (0+255),w,c
 14381  0028A2  B0D8               	btfsc	status,0,c
 14382  0028A4  D00B               	goto	i2l8211
 14383                           
 14384                           ; BSR set to: 0
 14385                           ;doprnt.c: 1351: prec = c;
 14386  0028A6  0100               	movlb	0	; () banked
 14387  0028A8  0100               	movlb	0	; () banked
 14388  0028AA  5184               	movf	i2sprintf@c& (0+255),w,b
 14389  0028AC  0100               	movlb	0	; () banked
 14390  0028AE  0100               	movlb	0	; () banked
 14391  0028B0  6F82               	movwf	i2sprintf@prec& (0+255),b
 14392  0028B2  0100               	movlb	0	; () banked
 14393  0028B4  6B83               	clrf	(i2sprintf@prec+1)& (0+255),b
 14394  0028B6  0100               	movlb	0	; () banked
 14395  0028B8  BF82               	btfsc	i2sprintf@prec& (0+255),7,b
 14396  0028BA  0783               	decf	(i2sprintf@prec+1)& (0+255),f,b
 14397  0028BC                     i2l8211:
 14398                           
 14399                           ; BSR set to: 0
 14400                           ;doprnt.c: 1354: if(width && flag & 0x03)
 14401  0028BC  0100               	movlb	0	; () banked
 14402  0028BE  0100               	movlb	0	; () banked
 14403  0028C0  5177               	movf	(i2sprintf@width+1)& (0+255),w,b
 14404  0028C2  1176               	iorwf	i2sprintf@width& (0+255),w,b
 14405  0028C4  B4D8               	btfsc	status,2,c
 14406  0028C6  D013               	goto	i2l8217
 14407                           
 14408                           ; BSR set to: 0
 14409  0028C8  0E03               	movlw	3
 14410  0028CA  0100               	movlb	0	; () banked
 14411  0028CC  0100               	movlb	0	; () banked
 14412  0028CE  1574               	andwf	i2sprintf@flag& (0+255),w,b
 14413  0028D0  6E57               	movwf	??i2_sprintf& (0+255),c
 14414  0028D2  0E00               	movlw	0
 14415  0028D4  0100               	movlb	0	; () banked
 14416  0028D6  0100               	movlb	0	; () banked
 14417  0028D8  1575               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 14418  0028DA  6E58               	movwf	(??i2_sprintf+1)& (0+255),c
 14419  0028DC  5058               	movf	??i2_sprintf+1,w,c
 14420  0028DE  1057               	iorwf	??i2_sprintf,w,c
 14421  0028E0  B4D8               	btfsc	status,2,c
 14422  0028E2  D005               	goto	i2l8217
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;doprnt.c: 1355: width--;
 14426  0028E4  0100               	movlb	0	; () banked
 14427  0028E6  0100               	movlb	0	; () banked
 14428  0028E8  0776               	decf	i2sprintf@width& (0+255),f,b
 14429  0028EA  A0D8               	btfss	status,0,c
 14430  0028EC  0777               	decf	(i2sprintf@width+1)& (0+255),f,b
 14431  0028EE                     i2l8217:
 14432                           
 14433                           ; BSR set to: 0
 14434                           ;doprnt.c: 1357: if(flag & 0x4000) {
 14435  0028EE  0100               	movlb	0	; () banked
 14436  0028F0  0100               	movlb	0	; () banked
 14437  0028F2  AD75               	btfss	(i2sprintf@flag+1)& (0+255),6,b
 14438  0028F4  D026               	goto	i2l8225
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;doprnt.c: 1358: if(width > prec)
 14442  0028F6  0100               	movlb	0	; () banked
 14443  0028F8  0100               	movlb	0	; () banked
 14444  0028FA  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14445  0028FC  0A80               	xorlw	128
 14446  0028FE  6E57               	movwf	??i2_sprintf& (0+255),c
 14447  002900  0100               	movlb	0	; () banked
 14448  002902  0100               	movlb	0	; () banked
 14449  002904  5176               	movf	i2sprintf@width& (0+255),w,b
 14450  002906  0100               	movlb	0	; () banked
 14451  002908  0100               	movlb	0	; () banked
 14452  00290A  5D82               	subwf	i2sprintf@prec& (0+255),w,b
 14453  00290C  0100               	movlb	0	; () banked
 14454  00290E  0100               	movlb	0	; () banked
 14455  002910  5177               	movf	(i2sprintf@width+1)& (0+255),w,b
 14456  002912  0A80               	xorlw	128
 14457  002914  5857               	subwfb	??i2_sprintf& (0+255),w,c
 14458  002916  B0D8               	btfsc	status,0,c
 14459  002918  D00D               	goto	i2l8223
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;doprnt.c: 1359: width -= prec;
 14463  00291A  0100               	movlb	0	; () banked
 14464  00291C  0100               	movlb	0	; () banked
 14465  00291E  5182               	movf	i2sprintf@prec& (0+255),w,b
 14466  002920  0100               	movlb	0	; () banked
 14467  002922  0100               	movlb	0	; () banked
 14468  002924  5F76               	subwf	i2sprintf@width& (0+255),f,b
 14469  002926  0100               	movlb	0	; () banked
 14470  002928  0100               	movlb	0	; () banked
 14471  00292A  5183               	movf	(i2sprintf@prec+1)& (0+255),w,b
 14472  00292C  0100               	movlb	0	; () banked
 14473  00292E  0100               	movlb	0	; () banked
 14474  002930  5B77               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 14475  002932  D007               	goto	i2l8225
 14476  002934                     i2l8223:
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;doprnt.c: 1360: else
 14480                           ;doprnt.c: 1361: width = 0;
 14481  002934  0E00               	movlw	0
 14482  002936  0100               	movlb	0	; () banked
 14483  002938  0100               	movlb	0	; () banked
 14484  00293A  6F77               	movwf	(i2sprintf@width+1)& (0+255),b
 14485  00293C  0E00               	movlw	0
 14486  00293E  0100               	movlb	0	; () banked
 14487  002940  6F76               	movwf	i2sprintf@width& (0+255),b
 14488  002942                     i2l8225:
 14489                           
 14490                           ; BSR set to: 0
 14491                           ;doprnt.c: 1362: }
 14492                           ;doprnt.c: 1390: if(width > c)
 14493  002942  0E80               	movlw	128
 14494  002944  0100               	movlb	0	; () banked
 14495  002946  0100               	movlb	0	; () banked
 14496  002948  BF84               	btfsc	i2sprintf@c& (0+255),7,b
 14497  00294A  0E7F               	movlw	127
 14498  00294C  6E57               	movwf	??i2_sprintf& (0+255),c
 14499  00294E  0100               	movlb	0	; () banked
 14500  002950  0100               	movlb	0	; () banked
 14501  002952  5176               	movf	i2sprintf@width& (0+255),w,b
 14502  002954  0100               	movlb	0	; () banked
 14503  002956  0100               	movlb	0	; () banked
 14504  002958  5D84               	subwf	i2sprintf@c& (0+255),w,b
 14505  00295A  0100               	movlb	0	; () banked
 14506  00295C  0100               	movlb	0	; () banked
 14507  00295E  5177               	movf	(i2sprintf@width+1)& (0+255),w,b
 14508  002960  0A80               	xorlw	128
 14509  002962  5857               	subwfb	??i2_sprintf& (0+255),w,c
 14510  002964  B0D8               	btfsc	status,0,c
 14511  002966  D00E               	goto	i2l8229
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;doprnt.c: 1391: width -= c;
 14515  002968  0100               	movlb	0	; () banked
 14516  00296A  0100               	movlb	0	; () banked
 14517  00296C  5184               	movf	i2sprintf@c& (0+255),w,b
 14518  00296E  0100               	movlb	0	; () banked
 14519  002970  0100               	movlb	0	; () banked
 14520  002972  5F76               	subwf	i2sprintf@width& (0+255),f,b
 14521  002974  0E00               	movlw	0
 14522  002976  0100               	movlb	0	; () banked
 14523  002978  BF84               	btfsc	i2sprintf@c& (0+255),7,b
 14524  00297A  0EFF               	movlw	255
 14525  00297C  0100               	movlb	0	; () banked
 14526  00297E  0100               	movlb	0	; () banked
 14527  002980  5B77               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 14528  002982  D007               	goto	i2l8231
 14529  002984                     i2l8229:
 14530                           
 14531                           ; BSR set to: 0
 14532                           ;doprnt.c: 1392: else
 14533                           ;doprnt.c: 1393: width = 0;
 14534  002984  0E00               	movlw	0
 14535  002986  0100               	movlb	0	; () banked
 14536  002988  0100               	movlb	0	; () banked
 14537  00298A  6F77               	movwf	(i2sprintf@width+1)& (0+255),b
 14538  00298C  0E00               	movlw	0
 14539  00298E  0100               	movlb	0	; () banked
 14540  002990  6F76               	movwf	i2sprintf@width& (0+255),b
 14541  002992                     i2l8231:
 14542                           
 14543                           ; BSR set to: 0
 14544                           ;doprnt.c: 1431: {
 14545                           ;doprnt.c: 1433: if(width
 14546                           ;doprnt.c: 1437: )
 14547  002992  0100               	movlb	0	; () banked
 14548  002994  0100               	movlb	0	; () banked
 14549  002996  5177               	movf	(i2sprintf@width+1)& (0+255),w,b
 14550  002998  1176               	iorwf	i2sprintf@width& (0+255),w,b
 14551  00299A  B4D8               	btfsc	status,2,c
 14552  00299C  D012               	goto	i2l8239
 14553  00299E                     i2l8233:
 14554                           
 14555                           ; BSR set to: 0
 14556                           ;doprnt.c: 1439: ((*sp++ = (' ')));
 14557  00299E  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 14558  0029A2  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14559  0029A6  0E20               	movlw	32
 14560  0029A8  6EDF               	movwf	indf2,c
 14561                           
 14562                           ; BSR set to: 0
 14563  0029AA  4A50               	infsnz	i2sprintf@sp,f,c
 14564  0029AC  2A51               	incf	i2sprintf@sp+1,f,c
 14565                           
 14566                           ; BSR set to: 0
 14567                           ;doprnt.c: 1440: while(--width);
 14568  0029AE  0100               	movlb	0	; () banked
 14569  0029B0  0100               	movlb	0	; () banked
 14570  0029B2  0776               	decf	i2sprintf@width& (0+255),f,b
 14571  0029B4  A0D8               	btfss	status,0,c
 14572  0029B6  0777               	decf	(i2sprintf@width+1)& (0+255),f,b
 14573  0029B8  0100               	movlb	0	; () banked
 14574  0029BA  5177               	movf	(i2sprintf@width+1)& (0+255),w,b
 14575  0029BC  1176               	iorwf	i2sprintf@width& (0+255),w,b
 14576  0029BE  A4D8               	btfss	status,2,c
 14577  0029C0  D7EE               	goto	i2l8233
 14578  0029C2                     i2l8239:
 14579                           
 14580                           ; BSR set to: 0
 14581                           ;doprnt.c: 1447: if(flag & 0x03)
 14582  0029C2  0E03               	movlw	3
 14583  0029C4  0100               	movlb	0	; () banked
 14584  0029C6  0100               	movlb	0	; () banked
 14585  0029C8  1574               	andwf	i2sprintf@flag& (0+255),w,b
 14586  0029CA  6E57               	movwf	??i2_sprintf& (0+255),c
 14587  0029CC  0E00               	movlw	0
 14588  0029CE  0100               	movlb	0	; () banked
 14589  0029D0  0100               	movlb	0	; () banked
 14590  0029D2  1575               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 14591  0029D4  6E58               	movwf	(??i2_sprintf+1)& (0+255),c
 14592  0029D6  5058               	movf	??i2_sprintf+1,w,c
 14593  0029D8  1057               	iorwf	??i2_sprintf,w,c
 14594  0029DA  B4D8               	btfsc	status,2,c
 14595  0029DC  D05A               	goto	i2l8251
 14596                           
 14597                           ; BSR set to: 0
 14598                           ;doprnt.c: 1448: ((*sp++ = ('-')));
 14599  0029DE  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 14600  0029E2  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14601  0029E6  0E2D               	movlw	45
 14602  0029E8  6EDF               	movwf	indf2,c
 14603  0029EA  D051               	goto	L34
 14604  0029EC                     i2l8245:
 14605                           
 14606                           ; BSR set to: 0
 14607                           ;doprnt.c: 1487: {
 14608                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
 14609  0029EC  0100               	movlb	0	; () banked
 14610  0029EE  C082  F057         	movff	i2sprintf@prec,??i2_sprintf
 14611  0029F2  0100               	movlb	0	; () banked
 14612  0029F4  C083  F058         	movff	i2sprintf@prec+1,??i2_sprintf+1
 14613  0029F8  90D8               	bcf	status,0,c
 14614  0029FA  3657               	rlcf	??i2_sprintf,f,c
 14615  0029FC  3658               	rlcf	??i2_sprintf+1,f,c
 14616  0029FE  90D8               	bcf	status,0,c
 14617  002A00  3657               	rlcf	??i2_sprintf,f,c
 14618  002A02  3658               	rlcf	??i2_sprintf+1,f,c
 14619  002A04  0E01               	movlw	low _dpowers
 14620  002A06  2457               	addwf	??i2_sprintf,w,c
 14621  002A08  6EF6               	movwf	tblptrl,c
 14622  002A0A  0E0F               	movlw	high _dpowers
 14623  002A0C  2058               	addwfc	??i2_sprintf+1,w,c
 14624  002A0E  6EF7               	movwf	tblptrh,c
 14625  002A10  6AF8               	clrf	tblptru,c
 14626  002A12  0E00               	movlw	low (__mediumconst shr (0+16))
 14627  002A14  22F8               	addwfc	tblptru,f,c
 14628  002A16  0009               	tblrd		*+
 14629  002A18  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14630  002A1C  0009               	tblrd		*+
 14631  002A1E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14632  002A22  0009               	tblrd		*+
 14633  002A24  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14634  002A28  000A               	tblrd		*-
 14635  002A2A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14636  002A2E  C078  F001         	movff	i2sprintf@_val,i2___lldiv@dividend
 14637  002A32  C079  F002         	movff	i2sprintf@_val+1,i2___lldiv@dividend+1
 14638  002A36  C07A  F003         	movff	i2sprintf@_val+2,i2___lldiv@dividend+2
 14639  002A3A  C07B  F004         	movff	i2sprintf@_val+3,i2___lldiv@dividend+3
 14640  002A3E  ECB9  F033         	call	i2___lldiv	;wreg free
 14641  002A42  C001  F00F         	movff	?i2___lldiv,i2___llmod@dividend
 14642  002A46  C002  F010         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14643  002A4A  C003  F011         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14644  002A4E  C004  F012         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14645  002A52  0E0A               	movlw	10
 14646  002A54  6E13               	movwf	i2___llmod@divisor,c
 14647  002A56  0E00               	movlw	0
 14648  002A58  6E14               	movwf	i2___llmod@divisor+1,c
 14649  002A5A  0E00               	movlw	0
 14650  002A5C  6E15               	movwf	i2___llmod@divisor+2,c
 14651  002A5E  0E00               	movlw	0
 14652  002A60  6E16               	movwf	i2___llmod@divisor+3,c
 14653  002A62  EC3D  F034         	call	i2___llmod	;wreg free
 14654  002A66  C00F  F059         	movff	?i2___llmod,??i2_sprintf+2
 14655  002A6A  C010  F05A         	movff	?i2___llmod+1,??i2_sprintf+3
 14656  002A6E  C011  F05B         	movff	?i2___llmod+2,??i2_sprintf+4
 14657  002A72  C012  F05C         	movff	?i2___llmod+3,??i2_sprintf+5
 14658  002A76  5059               	movf	??i2_sprintf+2,w,c
 14659  002A78  0F30               	addlw	48
 14660  002A7A  0100               	movlb	0	; () banked
 14661  002A7C  0100               	movlb	0	; () banked
 14662  002A7E  6F84               	movwf	i2sprintf@c& (0+255),b
 14663                           
 14664                           ; BSR set to: 0
 14665                           ;doprnt.c: 1532: }
 14666                           ;doprnt.c: 1533: ((*sp++ = (c)));
 14667  002A80  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 14668  002A84  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14669  002A88  0100               	movlb	0	; () banked
 14670  002A8A  C084  FFDF         	movff	i2sprintf@c,indf2
 14671  002A8E                     L34:
 14672                           
 14673                           ; BSR set to: 0
 14674  002A8E  4A50               	infsnz	i2sprintf@sp,f,c
 14675  002A90  2A51               	incf	i2sprintf@sp+1,f,c
 14676  002A92                     i2l8251:
 14677                           
 14678                           ; BSR set to: 0
 14679  002A92  0100               	movlb	0	; () banked
 14680  002A94  0100               	movlb	0	; () banked
 14681  002A96  0782               	decf	i2sprintf@prec& (0+255),f,b
 14682  002A98  A0D8               	btfss	status,0,c
 14683  002A9A  0783               	decf	(i2sprintf@prec+1)& (0+255),f,b
 14684  002A9C  0100               	movlb	0	; () banked
 14685  002A9E  2982               	incf	i2sprintf@prec& (0+255),w,b
 14686  002AA0  B4D8               	btfsc	status,2,c
 14687  002AA2  2983               	incf	(i2sprintf@prec+1)& (0+255),w,b
 14688  002AA4  A4D8               	btfss	status,2,c
 14689  002AA6  D7A2               	goto	i2l8245
 14690  002AA8                     i2l8253:
 14691                           
 14692                           ; BSR set to: 0
 14693  002AA8  5052               	movf	i2sprintf@f,w,c
 14694  002AAA  6E57               	movwf	??i2_sprintf& (0+255),c
 14695  002AAC  5053               	movf	i2sprintf@f+1,w,c
 14696  002AAE  6E58               	movwf	(??i2_sprintf+1)& (0+255),c
 14697  002AB0  4A52               	infsnz	i2sprintf@f,f,c
 14698  002AB2  2A53               	incf	i2sprintf@f+1,f,c
 14699  002AB4  C057  FFF6         	movff	??i2_sprintf,tblptrl
 14700  002AB8  C058  FFF7         	movff	??i2_sprintf+1,tblptrh
 14701  002ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 14702  002ABE  6EF8               	movwf	tblptru,c
 14703  002AC0  0008               	tblrd		*
 14704  002AC2  0100               	movlb	0	; () banked
 14705  002AC4  CFF5 F084          	movff	tablat,i2sprintf@c
 14706  002AC8  0100               	movlb	0	; () banked
 14707  002ACA  6784               	tstfsz	i2sprintf@c& (0+255),b
 14708  002ACC  EF14  F00F         	goto	i2l7963
 14709  002AD0                     i2l8255:
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;doprnt.c: 1547: *sp = 0;
 14713  002AD0  C050  FFD9         	movff	i2sprintf@sp,fsr2l
 14714  002AD4  C051  FFDA         	movff	i2sprintf@sp+1,fsr2h
 14715  002AD8  0E00               	movlw	0
 14716  002ADA  6EDF               	movwf	indf2,c
 14717  002ADC  0012               	return	
 14718  002ADE                     __end_ofi2_sprintf:
 14719                           	opt stack 0
 14720                           pclatu	equ	0xFFB
 14721                           pclath	equ	0xFFA
 14722                           tblptru	equ	0xFF8
 14723                           tblptrh	equ	0xFF7
 14724                           tblptrl	equ	0xFF6
 14725                           tablat	equ	0xFF5
 14726                           prodh	equ	0xFF4
 14727                           prodl	equ	0xFF3
 14728                           intcon	equ	0xFF2
 14729                           intcon3	equ	0xFF0
 14730                           indf0	equ	0xFEF
 14731                           fsr0h	equ	0xFEA
 14732                           fsr0l	equ	0xFE9
 14733                           wreg	equ	0xFE8
 14734                           fsr1h	equ	0xFE2
 14735                           fsr1l	equ	0xFE1
 14736                           indf2	equ	0xFDF
 14737                           postinc2	equ	0xFDE
 14738                           postdec2	equ	0xFDD
 14739                           fsr2h	equ	0xFDA
 14740                           fsr2l	equ	0xFD9
 14741                           status	equ	0xFD8
 14742                           
 14743 ;; *************** function i2_scale *****************
 14744 ;; Defined at:
 14745 ;;		line 425 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\doprnt.c"
 14746 ;; Parameters:    Size  Location     Type
 14747 ;;  scl             1    wreg     char 
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;  scl             1   43[COMRAM] char 
 14750 ;;  scale           3    0        float 
 14751 ;;  scale           3    0        float 
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  3   37[COMRAM] float 
 14754 ;; Registers used:
 14755 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/0
 14758 ;;		On exit  : 0/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14761 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14762 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14765 ;;Total ram usage:        7 bytes
 14766 ;; Hardware stack levels used:    1
 14767 ;; Hardware stack levels required when called:    2
 14768 ;; This function calls:
 14769 ;;		i2___awdiv
 14770 ;;		i2___awmod
 14771 ;;		i2___ftmul
 14772 ;;		i2___wmul
 14773 ;; This function is called by:
 14774 ;;		i2_sprintf
 14775 ;; This function uses a non-reentrant model
 14776 ;;
 14777                           
 14778                           	psect	text43
 14779  00313C                     __ptext43:
 14780                           	opt stack 0
 14781  00313C                     i2_scale:
 14782                           	opt stack 18
 14783                           
 14784                           ; BSR set to: 0
 14785                           ;incstack = 0
 14786                           ;i2scale@scl stored from wreg
 14787  00313C  CFE8 F02C          	movff	wreg,i2scale@scl
 14788                           
 14789                           ;doprnt.c: 428: if(scl < 0) {
 14790  003140  AE2C               	btfss	i2scale@scl,7,c
 14791  003142  D113               	goto	i2l7299
 14792                           
 14793                           ;doprnt.c: 429: scl = -scl;
 14794  003144  6C2C               	negf	i2scale@scl,c
 14795                           
 14796                           ;doprnt.c: 430: if(scl>=110)
 14797  003146  502C               	movf	i2scale@scl,w,c
 14798  003148  0A80               	xorlw	128
 14799  00314A  0F12               	addlw	-238
 14800  00314C  A0D8               	btfss	status,0,c
 14801  00314E  D09A               	goto	i2l7289
 14802                           
 14803                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14804  003150  0E00               	movlw	0
 14805  003152  6E14               	movwf	i2___wmul@multiplicand+1,c
 14806  003154  0E03               	movlw	3
 14807  003156  6E13               	movwf	i2___wmul@multiplicand,c
 14808  003158  0E00               	movlw	0
 14809  00315A  6E0B               	movwf	i2___awdiv@divisor+1,c
 14810  00315C  0E0A               	movlw	10
 14811  00315E  6E0A               	movwf	i2___awdiv@divisor,c
 14812  003160  0E00               	movlw	0
 14813  003162  6E04               	movwf	i2___awmod@divisor+1,c
 14814  003164  0E64               	movlw	100
 14815  003166  6E03               	movwf	i2___awmod@divisor,c
 14816  003168  502C               	movf	i2scale@scl,w,c
 14817  00316A  6E01               	movwf	i2___awmod@dividend,c
 14818  00316C  6A02               	clrf	i2___awmod@dividend+1,c
 14819  00316E  BE01               	btfsc	i2___awmod@dividend,7,c
 14820  003170  0602               	decf	i2___awmod@dividend+1,f,c
 14821  003172  EC8C  F032         	call	i2___awmod	;wreg free
 14822  003176  C001  F008         	movff	?i2___awmod,i2___awdiv@dividend
 14823  00317A  C002  F009         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14824  00317E  EC92  F031         	call	i2___awdiv	;wreg free
 14825  003182  0E09               	movlw	9
 14826  003184  2408               	addwf	?i2___awdiv,w,c
 14827  003186  6E11               	movwf	i2___wmul@multiplier,c
 14828  003188  0E00               	movlw	0
 14829  00318A  2009               	addwfc	?i2___awdiv+1,w,c
 14830  00318C  6E12               	movwf	i2___wmul@multiplier+1,c
 14831  00318E  EC61  F037         	call	i2___wmul	;wreg free
 14832  003192  0E29               	movlw	low __npowers_
 14833  003194  2411               	addwf	?i2___wmul,w,c
 14834  003196  6EF6               	movwf	tblptrl,c
 14835  003198  0E0F               	movlw	high __npowers_
 14836  00319A  2012               	addwfc	?i2___wmul+1,w,c
 14837  00319C  6EF7               	movwf	tblptrh,c
 14838  00319E  6AF8               	clrf	tblptru,c
 14839  0031A0  0E00               	movlw	low (__mediumconst shr (0+16))
 14840  0031A2  22F8               	addwfc	tblptru,f,c
 14841  0031A4  0009               	tblrd		*+
 14842  0031A6  CFF5 F01A          	movff	tablat,i2___ftmul@f2
 14843  0031AA  0009               	tblrd		*+
 14844  0031AC  CFF5 F01B          	movff	tablat,i2___ftmul@f2+1
 14845  0031B0  000A               	tblrd		*-
 14846  0031B2  CFF5 F01C          	movff	tablat,i2___ftmul@f2+2
 14847  0031B6  0E00               	movlw	0
 14848  0031B8  6E14               	movwf	i2___wmul@multiplicand+1,c
 14849  0031BA  0E03               	movlw	3
 14850  0031BC  6E13               	movwf	i2___wmul@multiplicand,c
 14851  0031BE  0E00               	movlw	0
 14852  0031C0  6E0B               	movwf	i2___awdiv@divisor+1,c
 14853  0031C2  0E64               	movlw	100
 14854  0031C4  6E0A               	movwf	i2___awdiv@divisor,c
 14855  0031C6  502C               	movf	i2scale@scl,w,c
 14856  0031C8  6E08               	movwf	i2___awdiv@dividend,c
 14857  0031CA  6A09               	clrf	i2___awdiv@dividend+1,c
 14858  0031CC  BE08               	btfsc	i2___awdiv@dividend,7,c
 14859  0031CE  0609               	decf	i2___awdiv@dividend+1,f,c
 14860  0031D0  EC92  F031         	call	i2___awdiv	;wreg free
 14861  0031D4  0E12               	movlw	18
 14862  0031D6  2408               	addwf	?i2___awdiv,w,c
 14863  0031D8  6E11               	movwf	i2___wmul@multiplier,c
 14864  0031DA  0E00               	movlw	0
 14865  0031DC  2009               	addwfc	?i2___awdiv+1,w,c
 14866  0031DE  6E12               	movwf	i2___wmul@multiplier+1,c
 14867  0031E0  EC61  F037         	call	i2___wmul	;wreg free
 14868  0031E4  0E29               	movlw	low __npowers_
 14869  0031E6  2411               	addwf	?i2___wmul,w,c
 14870  0031E8  6EF6               	movwf	tblptrl,c
 14871  0031EA  0E0F               	movlw	high __npowers_
 14872  0031EC  2012               	addwfc	?i2___wmul+1,w,c
 14873  0031EE  6EF7               	movwf	tblptrh,c
 14874  0031F0  6AF8               	clrf	tblptru,c
 14875  0031F2  0E00               	movlw	low (__mediumconst shr (0+16))
 14876  0031F4  22F8               	addwfc	tblptru,f,c
 14877  0031F6  0009               	tblrd		*+
 14878  0031F8  CFF5 F017          	movff	tablat,i2___ftmul@f1
 14879  0031FC  0009               	tblrd		*+
 14880  0031FE  CFF5 F018          	movff	tablat,i2___ftmul@f1+1
 14881  003202  000A               	tblrd		*-
 14882  003204  CFF5 F019          	movff	tablat,i2___ftmul@f1+2
 14883  003208  EC6C  F02E         	call	i2___ftmul	;wreg free
 14884  00320C  C017  F029         	movff	?i2___ftmul,i2_scale$2285
 14885  003210  C018  F02A         	movff	?i2___ftmul+1,i2_scale$2285+1
 14886  003214  C019  F02B         	movff	?i2___ftmul+2,i2_scale$2285+2
 14887                           
 14888                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14889  003218  C029  F017         	movff	i2_scale$2285,i2___ftmul@f1
 14890  00321C  C02A  F018         	movff	i2_scale$2285+1,i2___ftmul@f1+1
 14891  003220  C02B  F019         	movff	i2_scale$2285+2,i2___ftmul@f1+2
 14892  003224  0E00               	movlw	0
 14893  003226  6E14               	movwf	i2___wmul@multiplicand+1,c
 14894  003228  0E03               	movlw	3
 14895  00322A  6E13               	movwf	i2___wmul@multiplicand,c
 14896  00322C  0E00               	movlw	0
 14897  00322E  6E04               	movwf	i2___awmod@divisor+1,c
 14898  003230  0E0A               	movlw	10
 14899  003232  6E03               	movwf	i2___awmod@divisor,c
 14900  003234  502C               	movf	i2scale@scl,w,c
 14901  003236  6E01               	movwf	i2___awmod@dividend,c
 14902  003238  6A02               	clrf	i2___awmod@dividend+1,c
 14903  00323A  BE01               	btfsc	i2___awmod@dividend,7,c
 14904  00323C  0602               	decf	i2___awmod@dividend+1,f,c
 14905  00323E  EC8C  F032         	call	i2___awmod	;wreg free
 14906  003242  C001  F011         	movff	?i2___awmod,i2___wmul@multiplier
 14907  003246  C002  F012         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14908  00324A  EC61  F037         	call	i2___wmul	;wreg free
 14909  00324E  0E29               	movlw	low __npowers_
 14910  003250  2411               	addwf	?i2___wmul,w,c
 14911  003252  6EF6               	movwf	tblptrl,c
 14912  003254  0E0F               	movlw	high __npowers_
 14913  003256  2012               	addwfc	?i2___wmul+1,w,c
 14914  003258  6EF7               	movwf	tblptrh,c
 14915  00325A  6AF8               	clrf	tblptru,c
 14916  00325C  0E00               	movlw	low (__mediumconst shr (0+16))
 14917  00325E  22F8               	addwfc	tblptru,f,c
 14918  003260  0009               	tblrd		*+
 14919  003262  CFF5 F01A          	movff	tablat,i2___ftmul@f2
 14920  003266  0009               	tblrd		*+
 14921  003268  CFF5 F01B          	movff	tablat,i2___ftmul@f2+1
 14922  00326C  000A               	tblrd		*-
 14923  00326E  CFF5 F01C          	movff	tablat,i2___ftmul@f2+2
 14924  003272  EC6C  F02E         	call	i2___ftmul	;wreg free
 14925  003276  C017  F026         	movff	?i2___ftmul,?i2_scale
 14926  00327A  C018  F027         	movff	?i2___ftmul+1,?i2_scale+1
 14927  00327E  C019  F028         	movff	?i2___ftmul+2,?i2_scale+2
 14928  003282  0012               	return	
 14929  003284                     i2l7289:
 14930                           
 14931                           ;doprnt.c: 432: else if(scl > 10)
 14932  003284  502C               	movf	i2scale@scl,w,c
 14933  003286  0A80               	xorlw	128
 14934  003288  0F75               	addlw	-139
 14935  00328A  A0D8               	btfss	status,0,c
 14936  00328C  D059               	goto	i2l7295
 14937                           
 14938                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 14939  00328E  0E00               	movlw	0
 14940  003290  6E14               	movwf	i2___wmul@multiplicand+1,c
 14941  003292  0E03               	movlw	3
 14942  003294  6E13               	movwf	i2___wmul@multiplicand,c
 14943  003296  0E00               	movlw	0
 14944  003298  6E0B               	movwf	i2___awdiv@divisor+1,c
 14945  00329A  0E0A               	movlw	10
 14946  00329C  6E0A               	movwf	i2___awdiv@divisor,c
 14947  00329E  502C               	movf	i2scale@scl,w,c
 14948  0032A0  6E08               	movwf	i2___awdiv@dividend,c
 14949  0032A2  6A09               	clrf	i2___awdiv@dividend+1,c
 14950  0032A4  BE08               	btfsc	i2___awdiv@dividend,7,c
 14951  0032A6  0609               	decf	i2___awdiv@dividend+1,f,c
 14952  0032A8  EC92  F031         	call	i2___awdiv	;wreg free
 14953  0032AC  0E09               	movlw	9
 14954  0032AE  2408               	addwf	?i2___awdiv,w,c
 14955  0032B0  6E11               	movwf	i2___wmul@multiplier,c
 14956  0032B2  0E00               	movlw	0
 14957  0032B4  2009               	addwfc	?i2___awdiv+1,w,c
 14958  0032B6  6E12               	movwf	i2___wmul@multiplier+1,c
 14959  0032B8  EC61  F037         	call	i2___wmul	;wreg free
 14960  0032BC  0E29               	movlw	low __npowers_
 14961  0032BE  2411               	addwf	?i2___wmul,w,c
 14962  0032C0  6EF6               	movwf	tblptrl,c
 14963  0032C2  0E0F               	movlw	high __npowers_
 14964  0032C4  2012               	addwfc	?i2___wmul+1,w,c
 14965  0032C6  6EF7               	movwf	tblptrh,c
 14966  0032C8  6AF8               	clrf	tblptru,c
 14967  0032CA  0E00               	movlw	low (__mediumconst shr (0+16))
 14968  0032CC  22F8               	addwfc	tblptru,f,c
 14969  0032CE  0009               	tblrd		*+
 14970  0032D0  CFF5 F017          	movff	tablat,i2___ftmul@f1
 14971  0032D4  0009               	tblrd		*+
 14972  0032D6  CFF5 F018          	movff	tablat,i2___ftmul@f1+1
 14973  0032DA  000A               	tblrd		*-
 14974  0032DC  CFF5 F019          	movff	tablat,i2___ftmul@f1+2
 14975  0032E0  0E00               	movlw	0
 14976  0032E2  6E14               	movwf	i2___wmul@multiplicand+1,c
 14977  0032E4  0E03               	movlw	3
 14978  0032E6  6E13               	movwf	i2___wmul@multiplicand,c
 14979  0032E8  0E00               	movlw	0
 14980  0032EA  6E04               	movwf	i2___awmod@divisor+1,c
 14981  0032EC  0E0A               	movlw	10
 14982  0032EE  6E03               	movwf	i2___awmod@divisor,c
 14983  0032F0  502C               	movf	i2scale@scl,w,c
 14984  0032F2  6E01               	movwf	i2___awmod@dividend,c
 14985  0032F4  6A02               	clrf	i2___awmod@dividend+1,c
 14986  0032F6  BE01               	btfsc	i2___awmod@dividend,7,c
 14987  0032F8  0602               	decf	i2___awmod@dividend+1,f,c
 14988  0032FA  EC8C  F032         	call	i2___awmod	;wreg free
 14989  0032FE  C001  F011         	movff	?i2___awmod,i2___wmul@multiplier
 14990  003302  C002  F012         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14991  003306  EC61  F037         	call	i2___wmul	;wreg free
 14992  00330A  0E29               	movlw	low __npowers_
 14993  00330C  2411               	addwf	?i2___wmul,w,c
 14994  00330E  6EF6               	movwf	tblptrl,c
 14995  003310  0E0F               	movlw	high __npowers_
 14996  003312  2012               	addwfc	?i2___wmul+1,w,c
 14997  003314  6EF7               	movwf	tblptrh,c
 14998  003316  6AF8               	clrf	tblptru,c
 14999  003318  0E00               	movlw	low (__mediumconst shr (0+16))
 15000  00331A  22F8               	addwfc	tblptru,f,c
 15001  00331C  0009               	tblrd		*+
 15002  00331E  CFF5 F01A          	movff	tablat,i2___ftmul@f2
 15003  003322  0009               	tblrd		*+
 15004  003324  CFF5 F01B          	movff	tablat,i2___ftmul@f2+1
 15005  003328  000A               	tblrd		*-
 15006  00332A  CFF5 F01C          	movff	tablat,i2___ftmul@f2+2
 15007  00332E  EC6C  F02E         	call	i2___ftmul	;wreg free
 15008  003332  C017  F026         	movff	?i2___ftmul,?i2_scale
 15009  003336  C018  F027         	movff	?i2___ftmul+1,?i2_scale+1
 15010  00333A  C019  F028         	movff	?i2___ftmul+2,?i2_scale+2
 15011  00333E  0012               	return	
 15012  003340                     i2l7295:
 15013                           
 15014                           ;doprnt.c: 434: return _npowers_[scl];
 15015  003340  502C               	movf	i2scale@scl,w,c
 15016  003342  0D03               	mullw	3
 15017  003344  0E29               	movlw	low __npowers_
 15018  003346  24F3               	addwf	prodl,w,c
 15019  003348  6EF6               	movwf	tblptrl,c
 15020  00334A  0E0F               	movlw	high __npowers_
 15021  00334C  20F4               	addwfc	prodh,w,c
 15022  00334E  6EF7               	movwf	tblptrh,c
 15023  003350  6AF8               	clrf	tblptru,c
 15024  003352  0E00               	movlw	low (__mediumconst shr (0+16))
 15025  003354  22F8               	addwfc	tblptru,f,c
 15026  003356  0009               	tblrd		*+
 15027  003358  CFF5 F026          	movff	tablat,?i2_scale
 15028  00335C  0009               	tblrd		*+
 15029  00335E  CFF5 F027          	movff	tablat,?i2_scale+1
 15030  003362  000A               	tblrd		*-
 15031  003364  CFF5 F028          	movff	tablat,?i2_scale+2
 15032  003368  0012               	return	
 15033  00336A                     i2l7299:
 15034                           
 15035                           ;doprnt.c: 435: }
 15036                           ;doprnt.c: 436: if(scl>=110)
 15037  00336A  502C               	movf	i2scale@scl,w,c
 15038  00336C  0A80               	xorlw	128
 15039  00336E  0F12               	addlw	-238
 15040  003370  A0D8               	btfss	status,0,c
 15041  003372  D09A               	goto	i2l7307
 15042                           
 15043                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15044  003374  0E00               	movlw	0
 15045  003376  6E14               	movwf	i2___wmul@multiplicand+1,c
 15046  003378  0E03               	movlw	3
 15047  00337A  6E13               	movwf	i2___wmul@multiplicand,c
 15048  00337C  0E00               	movlw	0
 15049  00337E  6E0B               	movwf	i2___awdiv@divisor+1,c
 15050  003380  0E0A               	movlw	10
 15051  003382  6E0A               	movwf	i2___awdiv@divisor,c
 15052  003384  0E00               	movlw	0
 15053  003386  6E04               	movwf	i2___awmod@divisor+1,c
 15054  003388  0E64               	movlw	100
 15055  00338A  6E03               	movwf	i2___awmod@divisor,c
 15056  00338C  502C               	movf	i2scale@scl,w,c
 15057  00338E  6E01               	movwf	i2___awmod@dividend,c
 15058  003390  6A02               	clrf	i2___awmod@dividend+1,c
 15059  003392  BE01               	btfsc	i2___awmod@dividend,7,c
 15060  003394  0602               	decf	i2___awmod@dividend+1,f,c
 15061  003396  EC8C  F032         	call	i2___awmod	;wreg free
 15062  00339A  C001  F008         	movff	?i2___awmod,i2___awdiv@dividend
 15063  00339E  C002  F009         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15064  0033A2  EC92  F031         	call	i2___awdiv	;wreg free
 15065  0033A6  0E09               	movlw	9
 15066  0033A8  2408               	addwf	?i2___awdiv,w,c
 15067  0033AA  6E11               	movwf	i2___wmul@multiplier,c
 15068  0033AC  0E00               	movlw	0
 15069  0033AE  2009               	addwfc	?i2___awdiv+1,w,c
 15070  0033B0  6E12               	movwf	i2___wmul@multiplier+1,c
 15071  0033B2  EC61  F037         	call	i2___wmul	;wreg free
 15072  0033B6  0E50               	movlw	low __powers_
 15073  0033B8  2411               	addwf	?i2___wmul,w,c
 15074  0033BA  6EF6               	movwf	tblptrl,c
 15075  0033BC  0E0F               	movlw	high __powers_
 15076  0033BE  2012               	addwfc	?i2___wmul+1,w,c
 15077  0033C0  6EF7               	movwf	tblptrh,c
 15078  0033C2  6AF8               	clrf	tblptru,c
 15079  0033C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15080  0033C6  22F8               	addwfc	tblptru,f,c
 15081  0033C8  0009               	tblrd		*+
 15082  0033CA  CFF5 F01A          	movff	tablat,i2___ftmul@f2
 15083  0033CE  0009               	tblrd		*+
 15084  0033D0  CFF5 F01B          	movff	tablat,i2___ftmul@f2+1
 15085  0033D4  000A               	tblrd		*-
 15086  0033D6  CFF5 F01C          	movff	tablat,i2___ftmul@f2+2
 15087  0033DA  0E00               	movlw	0
 15088  0033DC  6E14               	movwf	i2___wmul@multiplicand+1,c
 15089  0033DE  0E03               	movlw	3
 15090  0033E0  6E13               	movwf	i2___wmul@multiplicand,c
 15091  0033E2  0E00               	movlw	0
 15092  0033E4  6E0B               	movwf	i2___awdiv@divisor+1,c
 15093  0033E6  0E64               	movlw	100
 15094  0033E8  6E0A               	movwf	i2___awdiv@divisor,c
 15095  0033EA  502C               	movf	i2scale@scl,w,c
 15096  0033EC  6E08               	movwf	i2___awdiv@dividend,c
 15097  0033EE  6A09               	clrf	i2___awdiv@dividend+1,c
 15098  0033F0  BE08               	btfsc	i2___awdiv@dividend,7,c
 15099  0033F2  0609               	decf	i2___awdiv@dividend+1,f,c
 15100  0033F4  EC92  F031         	call	i2___awdiv	;wreg free
 15101  0033F8  0E12               	movlw	18
 15102  0033FA  2408               	addwf	?i2___awdiv,w,c
 15103  0033FC  6E11               	movwf	i2___wmul@multiplier,c
 15104  0033FE  0E00               	movlw	0
 15105  003400  2009               	addwfc	?i2___awdiv+1,w,c
 15106  003402  6E12               	movwf	i2___wmul@multiplier+1,c
 15107  003404  EC61  F037         	call	i2___wmul	;wreg free
 15108  003408  0E50               	movlw	low __powers_
 15109  00340A  2411               	addwf	?i2___wmul,w,c
 15110  00340C  6EF6               	movwf	tblptrl,c
 15111  00340E  0E0F               	movlw	high __powers_
 15112  003410  2012               	addwfc	?i2___wmul+1,w,c
 15113  003412  6EF7               	movwf	tblptrh,c
 15114  003414  6AF8               	clrf	tblptru,c
 15115  003416  0E00               	movlw	low (__mediumconst shr (0+16))
 15116  003418  22F8               	addwfc	tblptru,f,c
 15117  00341A  0009               	tblrd		*+
 15118  00341C  CFF5 F017          	movff	tablat,i2___ftmul@f1
 15119  003420  0009               	tblrd		*+
 15120  003422  CFF5 F018          	movff	tablat,i2___ftmul@f1+1
 15121  003426  000A               	tblrd		*-
 15122  003428  CFF5 F019          	movff	tablat,i2___ftmul@f1+2
 15123  00342C  EC6C  F02E         	call	i2___ftmul	;wreg free
 15124  003430  C017  F029         	movff	?i2___ftmul,i2_scale$2285
 15125  003434  C018  F02A         	movff	?i2___ftmul+1,i2_scale$2285+1
 15126  003438  C019  F02B         	movff	?i2___ftmul+2,i2_scale$2285+2
 15127                           
 15128                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15129  00343C  C029  F017         	movff	i2_scale$2285,i2___ftmul@f1
 15130  003440  C02A  F018         	movff	i2_scale$2285+1,i2___ftmul@f1+1
 15131  003444  C02B  F019         	movff	i2_scale$2285+2,i2___ftmul@f1+2
 15132  003448  0E00               	movlw	0
 15133  00344A  6E14               	movwf	i2___wmul@multiplicand+1,c
 15134  00344C  0E03               	movlw	3
 15135  00344E  6E13               	movwf	i2___wmul@multiplicand,c
 15136  003450  0E00               	movlw	0
 15137  003452  6E04               	movwf	i2___awmod@divisor+1,c
 15138  003454  0E0A               	movlw	10
 15139  003456  6E03               	movwf	i2___awmod@divisor,c
 15140  003458  502C               	movf	i2scale@scl,w,c
 15141  00345A  6E01               	movwf	i2___awmod@dividend,c
 15142  00345C  6A02               	clrf	i2___awmod@dividend+1,c
 15143  00345E  BE01               	btfsc	i2___awmod@dividend,7,c
 15144  003460  0602               	decf	i2___awmod@dividend+1,f,c
 15145  003462  EC8C  F032         	call	i2___awmod	;wreg free
 15146  003466  C001  F011         	movff	?i2___awmod,i2___wmul@multiplier
 15147  00346A  C002  F012         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15148  00346E  EC61  F037         	call	i2___wmul	;wreg free
 15149  003472  0E50               	movlw	low __powers_
 15150  003474  2411               	addwf	?i2___wmul,w,c
 15151  003476  6EF6               	movwf	tblptrl,c
 15152  003478  0E0F               	movlw	high __powers_
 15153  00347A  2012               	addwfc	?i2___wmul+1,w,c
 15154  00347C  6EF7               	movwf	tblptrh,c
 15155  00347E  6AF8               	clrf	tblptru,c
 15156  003480  0E00               	movlw	low (__mediumconst shr (0+16))
 15157  003482  22F8               	addwfc	tblptru,f,c
 15158  003484  0009               	tblrd		*+
 15159  003486  CFF5 F01A          	movff	tablat,i2___ftmul@f2
 15160  00348A  0009               	tblrd		*+
 15161  00348C  CFF5 F01B          	movff	tablat,i2___ftmul@f2+1
 15162  003490  000A               	tblrd		*-
 15163  003492  CFF5 F01C          	movff	tablat,i2___ftmul@f2+2
 15164  003496  EC6C  F02E         	call	i2___ftmul	;wreg free
 15165  00349A  C017  F026         	movff	?i2___ftmul,?i2_scale
 15166  00349E  C018  F027         	movff	?i2___ftmul+1,?i2_scale+1
 15167  0034A2  C019  F028         	movff	?i2___ftmul+2,?i2_scale+2
 15168  0034A6  0012               	return	
 15169  0034A8                     i2l7307:
 15170                           
 15171                           ;doprnt.c: 438: else if(scl > 10)
 15172  0034A8  502C               	movf	i2scale@scl,w,c
 15173  0034AA  0A80               	xorlw	128
 15174  0034AC  0F75               	addlw	-139
 15175  0034AE  A0D8               	btfss	status,0,c
 15176  0034B0  D059               	goto	i2l7313
 15177                           
 15178                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 15179  0034B2  0E00               	movlw	0
 15180  0034B4  6E14               	movwf	i2___wmul@multiplicand+1,c
 15181  0034B6  0E03               	movlw	3
 15182  0034B8  6E13               	movwf	i2___wmul@multiplicand,c
 15183  0034BA  0E00               	movlw	0
 15184  0034BC  6E0B               	movwf	i2___awdiv@divisor+1,c
 15185  0034BE  0E0A               	movlw	10
 15186  0034C0  6E0A               	movwf	i2___awdiv@divisor,c
 15187  0034C2  502C               	movf	i2scale@scl,w,c
 15188  0034C4  6E08               	movwf	i2___awdiv@dividend,c
 15189  0034C6  6A09               	clrf	i2___awdiv@dividend+1,c
 15190  0034C8  BE08               	btfsc	i2___awdiv@dividend,7,c
 15191  0034CA  0609               	decf	i2___awdiv@dividend+1,f,c
 15192  0034CC  EC92  F031         	call	i2___awdiv	;wreg free
 15193  0034D0  0E09               	movlw	9
 15194  0034D2  2408               	addwf	?i2___awdiv,w,c
 15195  0034D4  6E11               	movwf	i2___wmul@multiplier,c
 15196  0034D6  0E00               	movlw	0
 15197  0034D8  2009               	addwfc	?i2___awdiv+1,w,c
 15198  0034DA  6E12               	movwf	i2___wmul@multiplier+1,c
 15199  0034DC  EC61  F037         	call	i2___wmul	;wreg free
 15200  0034E0  0E50               	movlw	low __powers_
 15201  0034E2  2411               	addwf	?i2___wmul,w,c
 15202  0034E4  6EF6               	movwf	tblptrl,c
 15203  0034E6  0E0F               	movlw	high __powers_
 15204  0034E8  2012               	addwfc	?i2___wmul+1,w,c
 15205  0034EA  6EF7               	movwf	tblptrh,c
 15206  0034EC  6AF8               	clrf	tblptru,c
 15207  0034EE  0E00               	movlw	low (__mediumconst shr (0+16))
 15208  0034F0  22F8               	addwfc	tblptru,f,c
 15209  0034F2  0009               	tblrd		*+
 15210  0034F4  CFF5 F017          	movff	tablat,i2___ftmul@f1
 15211  0034F8  0009               	tblrd		*+
 15212  0034FA  CFF5 F018          	movff	tablat,i2___ftmul@f1+1
 15213  0034FE  000A               	tblrd		*-
 15214  003500  CFF5 F019          	movff	tablat,i2___ftmul@f1+2
 15215  003504  0E00               	movlw	0
 15216  003506  6E14               	movwf	i2___wmul@multiplicand+1,c
 15217  003508  0E03               	movlw	3
 15218  00350A  6E13               	movwf	i2___wmul@multiplicand,c
 15219  00350C  0E00               	movlw	0
 15220  00350E  6E04               	movwf	i2___awmod@divisor+1,c
 15221  003510  0E0A               	movlw	10
 15222  003512  6E03               	movwf	i2___awmod@divisor,c
 15223  003514  502C               	movf	i2scale@scl,w,c
 15224  003516  6E01               	movwf	i2___awmod@dividend,c
 15225  003518  6A02               	clrf	i2___awmod@dividend+1,c
 15226  00351A  BE01               	btfsc	i2___awmod@dividend,7,c
 15227  00351C  0602               	decf	i2___awmod@dividend+1,f,c
 15228  00351E  EC8C  F032         	call	i2___awmod	;wreg free
 15229  003522  C001  F011         	movff	?i2___awmod,i2___wmul@multiplier
 15230  003526  C002  F012         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15231  00352A  EC61  F037         	call	i2___wmul	;wreg free
 15232  00352E  0E50               	movlw	low __powers_
 15233  003530  2411               	addwf	?i2___wmul,w,c
 15234  003532  6EF6               	movwf	tblptrl,c
 15235  003534  0E0F               	movlw	high __powers_
 15236  003536  2012               	addwfc	?i2___wmul+1,w,c
 15237  003538  6EF7               	movwf	tblptrh,c
 15238  00353A  6AF8               	clrf	tblptru,c
 15239  00353C  0E00               	movlw	low (__mediumconst shr (0+16))
 15240  00353E  22F8               	addwfc	tblptru,f,c
 15241  003540  0009               	tblrd		*+
 15242  003542  CFF5 F01A          	movff	tablat,i2___ftmul@f2
 15243  003546  0009               	tblrd		*+
 15244  003548  CFF5 F01B          	movff	tablat,i2___ftmul@f2+1
 15245  00354C  000A               	tblrd		*-
 15246  00354E  CFF5 F01C          	movff	tablat,i2___ftmul@f2+2
 15247  003552  EC6C  F02E         	call	i2___ftmul	;wreg free
 15248  003556  C017  F026         	movff	?i2___ftmul,?i2_scale
 15249  00355A  C018  F027         	movff	?i2___ftmul+1,?i2_scale+1
 15250  00355E  C019  F028         	movff	?i2___ftmul+2,?i2_scale+2
 15251  003562  0012               	return	
 15252  003564                     i2l7313:
 15253                           
 15254                           ;doprnt.c: 440: return _powers_[scl];
 15255  003564  502C               	movf	i2scale@scl,w,c
 15256  003566  0D03               	mullw	3
 15257  003568  0E50               	movlw	low __powers_
 15258  00356A  24F3               	addwf	prodl,w,c
 15259  00356C  6EF6               	movwf	tblptrl,c
 15260  00356E  0E0F               	movlw	high __powers_
 15261  003570  20F4               	addwfc	prodh,w,c
 15262  003572  6EF7               	movwf	tblptrh,c
 15263  003574  6AF8               	clrf	tblptru,c
 15264  003576  0E00               	movlw	low (__mediumconst shr (0+16))
 15265  003578  22F8               	addwfc	tblptru,f,c
 15266  00357A  0009               	tblrd		*+
 15267  00357C  CFF5 F026          	movff	tablat,?i2_scale
 15268  003580  0009               	tblrd		*+
 15269  003582  CFF5 F027          	movff	tablat,?i2_scale+1
 15270  003586  000A               	tblrd		*-
 15271  003588  CFF5 F028          	movff	tablat,?i2_scale+2
 15272  00358C  0012               	return	
 15273  00358E                     __end_ofi2_scale:
 15274                           	opt stack 0
 15275                           pclatu	equ	0xFFB
 15276                           pclath	equ	0xFFA
 15277                           tblptru	equ	0xFF8
 15278                           tblptrh	equ	0xFF7
 15279                           tblptrl	equ	0xFF6
 15280                           tablat	equ	0xFF5
 15281                           prodh	equ	0xFF4
 15282                           prodl	equ	0xFF3
 15283                           intcon	equ	0xFF2
 15284                           intcon3	equ	0xFF0
 15285                           indf0	equ	0xFEF
 15286                           fsr0h	equ	0xFEA
 15287                           fsr0l	equ	0xFE9
 15288                           wreg	equ	0xFE8
 15289                           fsr1h	equ	0xFE2
 15290                           fsr1l	equ	0xFE1
 15291                           indf2	equ	0xFDF
 15292                           postinc2	equ	0xFDE
 15293                           postdec2	equ	0xFDD
 15294                           fsr2h	equ	0xFDA
 15295                           fsr2l	equ	0xFD9
 15296                           status	equ	0xFD8
 15297                           
 15298 ;; *************** function i2_isdigit *****************
 15299 ;; Defined at:
 15300 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\isdigit.c"
 15301 ;; Parameters:    Size  Location     Type
 15302 ;;  c               1    wreg     unsigned char 
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;  c               1    2[COMRAM] unsigned char 
 15305 ;;  isdigit         1    1[COMRAM] unsigned char 
 15306 ;; Return value:  Size  Location     Type
 15307 ;;		None               void
 15308 ;; Registers used:
 15309 ;;		wreg, status,2, status,0
 15310 ;; Tracked objects:
 15311 ;;		On entry : 0/0
 15312 ;;		On exit  : 0/0
 15313 ;;		Unchanged: 0/0
 15314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15317 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15318 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15319 ;;Total ram usage:        3 bytes
 15320 ;; Hardware stack levels used:    1
 15321 ;; This function calls:
 15322 ;;		Nothing
 15323 ;; This function is called by:
 15324 ;;		i2_sprintf
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           	psect	text44
 15329  006FBE                     __ptext44:
 15330                           	opt stack 0
 15331  006FBE                     i2_isdigit:
 15332                           	opt stack 20
 15333                           
 15334                           ;incstack = 0
 15335                           ;i2isdigit@c stored from wreg
 15336  006FBE  CFE8 F003          	movff	wreg,i2isdigit@c
 15337  006FC2  6E01               	movwf	??i2_isdigit& (0+255),c
 15338  006FC4  0E00               	movlw	0
 15339  006FC6  6E02               	movwf	i2_isdigit$1329,c
 15340  006FC8  5001               	movf	??i2_isdigit& (0+255),w,c
 15341  006FCA  0E3A               	movlw	58
 15342  006FCC  5C03               	subwf	i2isdigit@c,w,c
 15343  006FCE  B0D8               	btfsc	status,0,c
 15344  006FD0  D007               	goto	i2l7517
 15345  006FD2  0E2F               	movlw	47
 15346  006FD4  6403               	cpfsgt	i2isdigit@c,c
 15347  006FD6  D004               	goto	i2l7517
 15348  006FD8  6E01               	movwf	??i2_isdigit& (0+255),c
 15349  006FDA  0E01               	movlw	1
 15350  006FDC  6E02               	movwf	i2_isdigit$1329,c
 15351  006FDE  5001               	movf	??i2_isdigit& (0+255),w,c
 15352  006FE0                     i2l7517:
 15353  006FE0  C002  F001         	movff	i2_isdigit$1329,??i2_isdigit
 15354  006FE4  3001               	rrcf	??i2_isdigit,w,c
 15355  006FE6  0012               	return	
 15356  006FE8                     __end_ofi2_isdigit:
 15357                           	opt stack 0
 15358                           pclatu	equ	0xFFB
 15359                           pclath	equ	0xFFA
 15360                           tblptru	equ	0xFF8
 15361                           tblptrh	equ	0xFF7
 15362                           tblptrl	equ	0xFF6
 15363                           tablat	equ	0xFF5
 15364                           prodh	equ	0xFF4
 15365                           prodl	equ	0xFF3
 15366                           intcon	equ	0xFF2
 15367                           intcon3	equ	0xFF0
 15368                           indf0	equ	0xFEF
 15369                           fsr0h	equ	0xFEA
 15370                           fsr0l	equ	0xFE9
 15371                           wreg	equ	0xFE8
 15372                           fsr1h	equ	0xFE2
 15373                           fsr1l	equ	0xFE1
 15374                           indf2	equ	0xFDF
 15375                           postinc2	equ	0xFDE
 15376                           postdec2	equ	0xFDD
 15377                           fsr2h	equ	0xFDA
 15378                           fsr2l	equ	0xFD9
 15379                           status	equ	0xFD8
 15380                           
 15381 ;; *************** function i2_fround *****************
 15382 ;; Defined at:
 15383 ;;		line 409 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\doprnt.c"
 15384 ;; Parameters:    Size  Location     Type
 15385 ;;  prec            1    wreg     unsigned char 
 15386 ;; Auto vars:     Size  Location     Type
 15387 ;;  prec            1   46[COMRAM] unsigned char 
 15388 ;;  fround          3    0        float 
 15389 ;;  fround          3    0        float 
 15390 ;;  fround          3    0        float 
 15391 ;; Return value:  Size  Location     Type
 15392 ;;                  3   37[COMRAM] float 
 15393 ;; Registers used:
 15394 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15395 ;; Tracked objects:
 15396 ;;		On entry : 0/0
 15397 ;;		On exit  : 0/0
 15398 ;;		Unchanged: 0/0
 15399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15400 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15401 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15403 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15404 ;;Total ram usage:       10 bytes
 15405 ;; Hardware stack levels used:    1
 15406 ;; Hardware stack levels required when called:    2
 15407 ;; This function calls:
 15408 ;;		i2___awdiv
 15409 ;;		i2___awmod
 15410 ;;		i2___ftmul
 15411 ;;		i2___wmul
 15412 ;; This function is called by:
 15413 ;;		i2_sprintf
 15414 ;; This function uses a non-reentrant model
 15415 ;;
 15416                           
 15417                           	psect	text45
 15418  003EC2                     __ptext45:
 15419                           	opt stack 0
 15420  003EC2                     i2_fround:
 15421                           	opt stack 18
 15422                           
 15423                           ;incstack = 0
 15424                           ;i2fround@prec stored from wreg
 15425  003EC2  CFE8 F02F          	movff	wreg,i2fround@prec
 15426                           
 15427                           ;doprnt.c: 413: if(prec>=110)
 15428  003EC6  0E6D               	movlw	109
 15429  003EC8  642F               	cpfsgt	i2fround@prec,c
 15430  003ECA  D0A8               	goto	i2l7267
 15431                           
 15432                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15433  003ECC  0E00               	movlw	0
 15434  003ECE  6E14               	movwf	i2___wmul@multiplicand+1,c
 15435  003ED0  0E03               	movlw	3
 15436  003ED2  6E13               	movwf	i2___wmul@multiplicand,c
 15437  003ED4  0E00               	movlw	0
 15438  003ED6  6E0B               	movwf	i2___awdiv@divisor+1,c
 15439  003ED8  0E0A               	movlw	10
 15440  003EDA  6E0A               	movwf	i2___awdiv@divisor,c
 15441  003EDC  0E00               	movlw	0
 15442  003EDE  6E04               	movwf	i2___awmod@divisor+1,c
 15443  003EE0  0E64               	movlw	100
 15444  003EE2  6E03               	movwf	i2___awmod@divisor,c
 15445  003EE4  C02F  F001         	movff	i2fround@prec,i2___awmod@dividend
 15446  003EE8  6A02               	clrf	i2___awmod@dividend+1,c
 15447  003EEA  EC8C  F032         	call	i2___awmod	;wreg free
 15448  003EEE  C001  F008         	movff	?i2___awmod,i2___awdiv@dividend
 15449  003EF2  C002  F009         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15450  003EF6  EC92  F031         	call	i2___awdiv	;wreg free
 15451  003EFA  0E09               	movlw	9
 15452  003EFC  2408               	addwf	?i2___awdiv,w,c
 15453  003EFE  6E11               	movwf	i2___wmul@multiplier,c
 15454  003F00  0E00               	movlw	0
 15455  003F02  2009               	addwfc	?i2___awdiv+1,w,c
 15456  003F04  6E12               	movwf	i2___wmul@multiplier+1,c
 15457  003F06  EC61  F037         	call	i2___wmul	;wreg free
 15458  003F0A  0E29               	movlw	low __npowers_
 15459  003F0C  2411               	addwf	?i2___wmul,w,c
 15460  003F0E  6EF6               	movwf	tblptrl,c
 15461  003F10  0E0F               	movlw	high __npowers_
 15462  003F12  2012               	addwfc	?i2___wmul+1,w,c
 15463  003F14  6EF7               	movwf	tblptrh,c
 15464  003F16  6AF8               	clrf	tblptru,c
 15465  003F18  0E00               	movlw	low (__mediumconst shr (0+16))
 15466  003F1A  22F8               	addwfc	tblptru,f,c
 15467  003F1C  0009               	tblrd		*+
 15468  003F1E  CFF5 F01A          	movff	tablat,i2___ftmul@f2
 15469  003F22  0009               	tblrd		*+
 15470  003F24  CFF5 F01B          	movff	tablat,i2___ftmul@f2+1
 15471  003F28  000A               	tblrd		*-
 15472  003F2A  CFF5 F01C          	movff	tablat,i2___ftmul@f2+2
 15473  003F2E  0E00               	movlw	0
 15474  003F30  6E14               	movwf	i2___wmul@multiplicand+1,c
 15475  003F32  0E03               	movlw	3
 15476  003F34  6E13               	movwf	i2___wmul@multiplicand,c
 15477  003F36  0E00               	movlw	0
 15478  003F38  6E0B               	movwf	i2___awdiv@divisor+1,c
 15479  003F3A  0E64               	movlw	100
 15480  003F3C  6E0A               	movwf	i2___awdiv@divisor,c
 15481  003F3E  C02F  F008         	movff	i2fround@prec,i2___awdiv@dividend
 15482  003F42  6A09               	clrf	i2___awdiv@dividend+1,c
 15483  003F44  EC92  F031         	call	i2___awdiv	;wreg free
 15484  003F48  0E12               	movlw	18
 15485  003F4A  2408               	addwf	?i2___awdiv,w,c
 15486  003F4C  6E11               	movwf	i2___wmul@multiplier,c
 15487  003F4E  0E00               	movlw	0
 15488  003F50  2009               	addwfc	?i2___awdiv+1,w,c
 15489  003F52  6E12               	movwf	i2___wmul@multiplier+1,c
 15490  003F54  EC61  F037         	call	i2___wmul	;wreg free
 15491  003F58  0E29               	movlw	low __npowers_
 15492  003F5A  2411               	addwf	?i2___wmul,w,c
 15493  003F5C  6EF6               	movwf	tblptrl,c
 15494  003F5E  0E0F               	movlw	high __npowers_
 15495  003F60  2012               	addwfc	?i2___wmul+1,w,c
 15496  003F62  6EF7               	movwf	tblptrh,c
 15497  003F64  6AF8               	clrf	tblptru,c
 15498  003F66  0E00               	movlw	low (__mediumconst shr (0+16))
 15499  003F68  22F8               	addwfc	tblptru,f,c
 15500  003F6A  0009               	tblrd		*+
 15501  003F6C  CFF5 F017          	movff	tablat,i2___ftmul@f1
 15502  003F70  0009               	tblrd		*+
 15503  003F72  CFF5 F018          	movff	tablat,i2___ftmul@f1+1
 15504  003F76  000A               	tblrd		*-
 15505  003F78  CFF5 F019          	movff	tablat,i2___ftmul@f1+2
 15506  003F7C  EC6C  F02E         	call	i2___ftmul	;wreg free
 15507  003F80  C017  F02C         	movff	?i2___ftmul,i2_fround$2283
 15508  003F84  C018  F02D         	movff	?i2___ftmul+1,i2_fround$2283+1
 15509  003F88  C019  F02E         	movff	?i2___ftmul+2,i2_fround$2283+2
 15510                           
 15511                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15512  003F8C  0E00               	movlw	0
 15513  003F8E  6E14               	movwf	i2___wmul@multiplicand+1,c
 15514  003F90  0E03               	movlw	3
 15515  003F92  6E13               	movwf	i2___wmul@multiplicand,c
 15516  003F94  0E00               	movlw	0
 15517  003F96  6E04               	movwf	i2___awmod@divisor+1,c
 15518  003F98  0E0A               	movlw	10
 15519  003F9A  6E03               	movwf	i2___awmod@divisor,c
 15520  003F9C  C02F  F001         	movff	i2fround@prec,i2___awmod@dividend
 15521  003FA0  6A02               	clrf	i2___awmod@dividend+1,c
 15522  003FA2  EC8C  F032         	call	i2___awmod	;wreg free
 15523  003FA6  C001  F011         	movff	?i2___awmod,i2___wmul@multiplier
 15524  003FAA  C002  F012         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15525  003FAE  EC61  F037         	call	i2___wmul	;wreg free
 15526  003FB2  0E29               	movlw	low __npowers_
 15527  003FB4  2411               	addwf	?i2___wmul,w,c
 15528  003FB6  6EF6               	movwf	tblptrl,c
 15529  003FB8  0E0F               	movlw	high __npowers_
 15530  003FBA  2012               	addwfc	?i2___wmul+1,w,c
 15531  003FBC  6EF7               	movwf	tblptrh,c
 15532  003FBE  6AF8               	clrf	tblptru,c
 15533  003FC0  0E00               	movlw	low (__mediumconst shr (0+16))
 15534  003FC2  22F8               	addwfc	tblptru,f,c
 15535  003FC4  0009               	tblrd		*+
 15536  003FC6  CFF5 F01A          	movff	tablat,i2___ftmul@f2
 15537  003FCA  0009               	tblrd		*+
 15538  003FCC  CFF5 F01B          	movff	tablat,i2___ftmul@f2+1
 15539  003FD0  000A               	tblrd		*-
 15540  003FD2  CFF5 F01C          	movff	tablat,i2___ftmul@f2+2
 15541  003FD6  C02C  F017         	movff	i2_fround$2283,i2___ftmul@f1
 15542  003FDA  C02D  F018         	movff	i2_fround$2283+1,i2___ftmul@f1+1
 15543  003FDE  C02E  F019         	movff	i2_fround$2283+2,i2___ftmul@f1+2
 15544  003FE2  EC6C  F02E         	call	i2___ftmul	;wreg free
 15545  003FE6  C017  F029         	movff	?i2___ftmul,i2_fround$2284
 15546  003FEA  C018  F02A         	movff	?i2___ftmul+1,i2_fround$2284+1
 15547  003FEE  C019  F02B         	movff	?i2___ftmul+2,i2_fround$2284+2
 15548                           
 15549                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15550  003FF2  C029  F017         	movff	i2_fround$2284,i2___ftmul@f1
 15551  003FF6  C02A  F018         	movff	i2_fround$2284+1,i2___ftmul@f1+1
 15552  003FFA  C02B  F019         	movff	i2_fround$2284+2,i2___ftmul@f1+2
 15553  003FFE  0E00               	movlw	0
 15554  004000  6E1A               	movwf	i2___ftmul@f2,c
 15555  004002  0E00               	movlw	0
 15556  004004  6E1B               	movwf	i2___ftmul@f2+1,c
 15557  004006  0E3F               	movlw	63
 15558  004008  6E1C               	movwf	i2___ftmul@f2+2,c
 15559  00400A  EC6C  F02E         	call	i2___ftmul	;wreg free
 15560  00400E  C017  F026         	movff	?i2___ftmul,?i2_fround
 15561  004012  C018  F027         	movff	?i2___ftmul+1,?i2_fround+1
 15562  004016  C019  F028         	movff	?i2___ftmul+2,?i2_fround+2
 15563  00401A  0012               	return	
 15564  00401C                     i2l7267:
 15565                           
 15566                           ;doprnt.c: 415: else if(prec > 10)
 15567  00401C  0E0A               	movlw	10
 15568  00401E  642F               	cpfsgt	i2fround@prec,c
 15569  004020  D069               	goto	i2l7275
 15570                           
 15571                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15572  004022  0E00               	movlw	0
 15573  004024  6E14               	movwf	i2___wmul@multiplicand+1,c
 15574  004026  0E03               	movlw	3
 15575  004028  6E13               	movwf	i2___wmul@multiplicand,c
 15576  00402A  0E00               	movlw	0
 15577  00402C  6E04               	movwf	i2___awmod@divisor+1,c
 15578  00402E  0E0A               	movlw	10
 15579  004030  6E03               	movwf	i2___awmod@divisor,c
 15580  004032  C02F  F001         	movff	i2fround@prec,i2___awmod@dividend
 15581  004036  6A02               	clrf	i2___awmod@dividend+1,c
 15582  004038  EC8C  F032         	call	i2___awmod	;wreg free
 15583  00403C  C001  F011         	movff	?i2___awmod,i2___wmul@multiplier
 15584  004040  C002  F012         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15585  004044  EC61  F037         	call	i2___wmul	;wreg free
 15586  004048  0E29               	movlw	low __npowers_
 15587  00404A  2411               	addwf	?i2___wmul,w,c
 15588  00404C  6EF6               	movwf	tblptrl,c
 15589  00404E  0E0F               	movlw	high __npowers_
 15590  004050  2012               	addwfc	?i2___wmul+1,w,c
 15591  004052  6EF7               	movwf	tblptrh,c
 15592  004054  6AF8               	clrf	tblptru,c
 15593  004056  0E00               	movlw	low (__mediumconst shr (0+16))
 15594  004058  22F8               	addwfc	tblptru,f,c
 15595  00405A  0009               	tblrd		*+
 15596  00405C  CFF5 F01A          	movff	tablat,i2___ftmul@f2
 15597  004060  0009               	tblrd		*+
 15598  004062  CFF5 F01B          	movff	tablat,i2___ftmul@f2+1
 15599  004066  000A               	tblrd		*-
 15600  004068  CFF5 F01C          	movff	tablat,i2___ftmul@f2+2
 15601  00406C  0E00               	movlw	0
 15602  00406E  6E14               	movwf	i2___wmul@multiplicand+1,c
 15603  004070  0E03               	movlw	3
 15604  004072  6E13               	movwf	i2___wmul@multiplicand,c
 15605  004074  0E00               	movlw	0
 15606  004076  6E0B               	movwf	i2___awdiv@divisor+1,c
 15607  004078  0E0A               	movlw	10
 15608  00407A  6E0A               	movwf	i2___awdiv@divisor,c
 15609  00407C  C02F  F008         	movff	i2fround@prec,i2___awdiv@dividend
 15610  004080  6A09               	clrf	i2___awdiv@dividend+1,c
 15611  004082  EC92  F031         	call	i2___awdiv	;wreg free
 15612  004086  0E09               	movlw	9
 15613  004088  2408               	addwf	?i2___awdiv,w,c
 15614  00408A  6E11               	movwf	i2___wmul@multiplier,c
 15615  00408C  0E00               	movlw	0
 15616  00408E  2009               	addwfc	?i2___awdiv+1,w,c
 15617  004090  6E12               	movwf	i2___wmul@multiplier+1,c
 15618  004092  EC61  F037         	call	i2___wmul	;wreg free
 15619  004096  0E29               	movlw	low __npowers_
 15620  004098  2411               	addwf	?i2___wmul,w,c
 15621  00409A  6EF6               	movwf	tblptrl,c
 15622  00409C  0E0F               	movlw	high __npowers_
 15623  00409E  2012               	addwfc	?i2___wmul+1,w,c
 15624  0040A0  6EF7               	movwf	tblptrh,c
 15625  0040A2  6AF8               	clrf	tblptru,c
 15626  0040A4  0E00               	movlw	low (__mediumconst shr (0+16))
 15627  0040A6  22F8               	addwfc	tblptru,f,c
 15628  0040A8  0009               	tblrd		*+
 15629  0040AA  CFF5 F017          	movff	tablat,i2___ftmul@f1
 15630  0040AE  0009               	tblrd		*+
 15631  0040B0  CFF5 F018          	movff	tablat,i2___ftmul@f1+1
 15632  0040B4  000A               	tblrd		*-
 15633  0040B6  CFF5 F019          	movff	tablat,i2___ftmul@f1+2
 15634  0040BA  EC6C  F02E         	call	i2___ftmul	;wreg free
 15635  0040BE  C017  F02C         	movff	?i2___ftmul,i2_fround$2283
 15636  0040C2  C018  F02D         	movff	?i2___ftmul+1,i2_fround$2283+1
 15637  0040C6  C019  F02E         	movff	?i2___ftmul+2,i2_fround$2283+2
 15638                           
 15639                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15640  0040CA  C02C  F017         	movff	i2_fround$2283,i2___ftmul@f1
 15641  0040CE  C02D  F018         	movff	i2_fround$2283+1,i2___ftmul@f1+1
 15642  0040D2  C02E  F019         	movff	i2_fround$2283+2,i2___ftmul@f1+2
 15643  0040D6  0E00               	movlw	0
 15644  0040D8  6E1A               	movwf	i2___ftmul@f2,c
 15645  0040DA  0E00               	movlw	0
 15646  0040DC  6E1B               	movwf	i2___ftmul@f2+1,c
 15647  0040DE  0E3F               	movlw	63
 15648  0040E0  6E1C               	movwf	i2___ftmul@f2+2,c
 15649  0040E2  EC6C  F02E         	call	i2___ftmul	;wreg free
 15650  0040E6  C017  F026         	movff	?i2___ftmul,?i2_fround
 15651  0040EA  C018  F027         	movff	?i2___ftmul+1,?i2_fround+1
 15652  0040EE  C019  F028         	movff	?i2___ftmul+2,?i2_fround+2
 15653  0040F2  0012               	return	
 15654  0040F4                     i2l7275:
 15655                           
 15656                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 15657  0040F4  502F               	movf	i2fround@prec,w,c
 15658  0040F6  0D03               	mullw	3
 15659  0040F8  0E29               	movlw	low __npowers_
 15660  0040FA  24F3               	addwf	prodl,w,c
 15661  0040FC  6EF6               	movwf	tblptrl,c
 15662  0040FE  0E0F               	movlw	high __npowers_
 15663  004100  20F4               	addwfc	prodh,w,c
 15664  004102  6EF7               	movwf	tblptrh,c
 15665  004104  6AF8               	clrf	tblptru,c
 15666  004106  0E00               	movlw	low (__mediumconst shr (0+16))
 15667  004108  22F8               	addwfc	tblptru,f,c
 15668  00410A  0009               	tblrd		*+
 15669  00410C  CFF5 F017          	movff	tablat,i2___ftmul@f1
 15670  004110  0009               	tblrd		*+
 15671  004112  CFF5 F018          	movff	tablat,i2___ftmul@f1+1
 15672  004116  000A               	tblrd		*-
 15673  004118  CFF5 F019          	movff	tablat,i2___ftmul@f1+2
 15674  00411C  0E00               	movlw	0
 15675  00411E  6E1A               	movwf	i2___ftmul@f2,c
 15676  004120  0E00               	movlw	0
 15677  004122  6E1B               	movwf	i2___ftmul@f2+1,c
 15678  004124  0E3F               	movlw	63
 15679  004126  6E1C               	movwf	i2___ftmul@f2+2,c
 15680  004128  EC6C  F02E         	call	i2___ftmul	;wreg free
 15681  00412C  C017  F026         	movff	?i2___ftmul,?i2_fround
 15682  004130  C018  F027         	movff	?i2___ftmul+1,?i2_fround+1
 15683  004134  C019  F028         	movff	?i2___ftmul+2,?i2_fround+2
 15684  004138  0012               	return	
 15685  00413A                     __end_ofi2_fround:
 15686                           	opt stack 0
 15687                           pclatu	equ	0xFFB
 15688                           pclath	equ	0xFFA
 15689                           tblptru	equ	0xFF8
 15690                           tblptrh	equ	0xFF7
 15691                           tblptrl	equ	0xFF6
 15692                           tablat	equ	0xFF5
 15693                           prodh	equ	0xFF4
 15694                           prodl	equ	0xFF3
 15695                           intcon	equ	0xFF2
 15696                           intcon3	equ	0xFF0
 15697                           indf0	equ	0xFEF
 15698                           fsr0h	equ	0xFEA
 15699                           fsr0l	equ	0xFE9
 15700                           wreg	equ	0xFE8
 15701                           fsr1h	equ	0xFE2
 15702                           fsr1l	equ	0xFE1
 15703                           indf2	equ	0xFDF
 15704                           postinc2	equ	0xFDE
 15705                           postdec2	equ	0xFDD
 15706                           fsr2h	equ	0xFDA
 15707                           fsr2l	equ	0xFD9
 15708                           status	equ	0xFD8
 15709                           
 15710 ;; *************** function i2___wmul *****************
 15711 ;; Defined at:
 15712 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\wmul.c"
 15713 ;; Parameters:    Size  Location     Type
 15714 ;;  multiplier      2   16[COMRAM] unsigned int 
 15715 ;;  multiplicand    2   18[COMRAM] unsigned int 
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;  __wmul          2   20[COMRAM] unsigned int 
 15718 ;; Return value:  Size  Location     Type
 15719 ;;                  2   16[COMRAM] unsigned int 
 15720 ;; Registers used:
 15721 ;;		wreg, status,2, status,0, prodl, prodh
 15722 ;; Tracked objects:
 15723 ;;		On entry : 0/0
 15724 ;;		On exit  : 0/0
 15725 ;;		Unchanged: 0/0
 15726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15728 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15730 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15731 ;;Total ram usage:        6 bytes
 15732 ;; Hardware stack levels used:    1
 15733 ;; This function calls:
 15734 ;;		Nothing
 15735 ;; This function is called by:
 15736 ;;		i2_fround
 15737 ;;		i2_scale
 15738 ;;		i2_sprintf
 15739 ;; This function uses a non-reentrant model
 15740 ;;
 15741                           
 15742                           	psect	text46
 15743  006EC2                     __ptext46:
 15744                           	opt stack 0
 15745  006EC2                     i2___wmul:
 15746                           	opt stack 19
 15747                           
 15748                           ;incstack = 0
 15749  006EC2  5011               	movf	i2___wmul@multiplier,w,c
 15750  006EC4  0213               	mulwf	i2___wmul@multiplicand,c
 15751  006EC6  CFF3 F015          	movff	prodl,i2___wmul@product
 15752  006ECA  CFF4 F016          	movff	prodh,i2___wmul@product+1
 15753  006ECE  5011               	movf	i2___wmul@multiplier,w,c
 15754  006ED0  0214               	mulwf	i2___wmul@multiplicand+1,c
 15755  006ED2  CFF3 FFF4          	movff	prodl,prodh
 15756  006ED6  6AF3               	clrf	prodl,c
 15757  006ED8  50F3               	movf	prodl,w,c
 15758  006EDA  2615               	addwf	i2___wmul@product,f,c
 15759  006EDC  50F4               	movf	prodh,w,c
 15760  006EDE  2216               	addwfc	i2___wmul@product+1,f,c
 15761  006EE0  5012               	movf	i2___wmul@multiplier+1,w,c
 15762  006EE2  0213               	mulwf	i2___wmul@multiplicand,c
 15763  006EE4  CFF3 FFF4          	movff	prodl,prodh
 15764  006EE8  6AF3               	clrf	prodl,c
 15765  006EEA  50F3               	movf	prodl,w,c
 15766  006EEC  2615               	addwf	i2___wmul@product,f,c
 15767  006EEE  50F4               	movf	prodh,w,c
 15768  006EF0  2216               	addwfc	i2___wmul@product+1,f,c
 15769  006EF2  C015  F011         	movff	i2___wmul@product,?i2___wmul
 15770  006EF6  C016  F012         	movff	i2___wmul@product+1,?i2___wmul+1
 15771  006EFA  0012               	return	
 15772  006EFC                     __end_ofi2___wmul:
 15773                           	opt stack 0
 15774                           pclatu	equ	0xFFB
 15775                           pclath	equ	0xFFA
 15776                           tblptru	equ	0xFF8
 15777                           tblptrh	equ	0xFF7
 15778                           tblptrl	equ	0xFF6
 15779                           tablat	equ	0xFF5
 15780                           prodh	equ	0xFF4
 15781                           prodl	equ	0xFF3
 15782                           intcon	equ	0xFF2
 15783                           intcon3	equ	0xFF0
 15784                           indf0	equ	0xFEF
 15785                           fsr0h	equ	0xFEA
 15786                           fsr0l	equ	0xFE9
 15787                           wreg	equ	0xFE8
 15788                           fsr1h	equ	0xFE2
 15789                           fsr1l	equ	0xFE1
 15790                           indf2	equ	0xFDF
 15791                           postinc2	equ	0xFDE
 15792                           postdec2	equ	0xFDD
 15793                           fsr2h	equ	0xFDA
 15794                           fsr2l	equ	0xFD9
 15795                           status	equ	0xFD8
 15796                           
 15797 ;; *************** function i2___awmod *****************
 15798 ;; Defined at:
 15799 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\awmod.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;  dividend        2    0[COMRAM] int 
 15802 ;;  divisor         2    2[COMRAM] int 
 15803 ;; Auto vars:     Size  Location     Type
 15804 ;;  __awmod         1    6[COMRAM] unsigned char 
 15805 ;;  __awmod         1    5[COMRAM] unsigned char 
 15806 ;; Return value:  Size  Location     Type
 15807 ;;                  2    0[COMRAM] int 
 15808 ;; Registers used:
 15809 ;;		wreg, status,2, status,0, prodl
 15810 ;; Tracked objects:
 15811 ;;		On entry : 0/0
 15812 ;;		On exit  : 0/0
 15813 ;;		Unchanged: 0/0
 15814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15818 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15819 ;;Total ram usage:        7 bytes
 15820 ;; Hardware stack levels used:    1
 15821 ;; This function calls:
 15822 ;;		Nothing
 15823 ;; This function is called by:
 15824 ;;		i2_fround
 15825 ;;		i2_scale
 15826 ;; This function uses a non-reentrant model
 15827 ;;
 15828                           
 15829                           	psect	text47
 15830  006518                     __ptext47:
 15831                           	opt stack 0
 15832  006518                     i2___awmod:
 15833                           	opt stack 19
 15834                           
 15835                           ;incstack = 0
 15836  006518  6E05               	movwf	??i2___awmod& (0+255),c
 15837  00651A  0E00               	movlw	0
 15838  00651C  6E07               	movwf	i2___awmod@sign,c
 15839  00651E  5005               	movf	??i2___awmod& (0+255),w,c
 15840  006520  5002               	movf	i2___awmod@dividend+1,w,c
 15841  006522  0A80               	xorlw	128
 15842  006524  6EF3               	movwf	prodl,c
 15843  006526  0E80               	movlw	128
 15844  006528  5CF3               	subwf	prodl,w,c
 15845  00652A  0E00               	movlw	0
 15846  00652C  B4D8               	btfsc	status,2,c
 15847  00652E  5C01               	subwf	i2___awmod@dividend,w,c
 15848  006530  B0D8               	btfsc	status,0,c
 15849  006532  D008               	goto	i2l6803
 15850  006534  6C01               	negf	i2___awmod@dividend,c
 15851  006536  1E02               	comf	i2___awmod@dividend+1,f,c
 15852  006538  B0D8               	btfsc	status,0,c
 15853  00653A  2A02               	incf	i2___awmod@dividend+1,f,c
 15854  00653C  6E05               	movwf	??i2___awmod& (0+255),c
 15855  00653E  0E01               	movlw	1
 15856  006540  6E07               	movwf	i2___awmod@sign,c
 15857  006542  5005               	movf	??i2___awmod& (0+255),w,c
 15858  006544                     i2l6803:
 15859  006544  5004               	movf	i2___awmod@divisor+1,w,c
 15860  006546  0A80               	xorlw	128
 15861  006548  6EF3               	movwf	prodl,c
 15862  00654A  0E80               	movlw	128
 15863  00654C  5CF3               	subwf	prodl,w,c
 15864  00654E  0E00               	movlw	0
 15865  006550  B4D8               	btfsc	status,2,c
 15866  006552  5C03               	subwf	i2___awmod@divisor,w,c
 15867  006554  B0D8               	btfsc	status,0,c
 15868  006556  D004               	goto	i2l6807
 15869  006558  6C03               	negf	i2___awmod@divisor,c
 15870  00655A  1E04               	comf	i2___awmod@divisor+1,f,c
 15871  00655C  B0D8               	btfsc	status,0,c
 15872  00655E  2A04               	incf	i2___awmod@divisor+1,f,c
 15873  006560                     i2l6807:
 15874  006560  5004               	movf	i2___awmod@divisor+1,w,c
 15875  006562  1003               	iorwf	i2___awmod@divisor,w,c
 15876  006564  B4D8               	btfsc	status,2,c
 15877  006566  D01A               	goto	i2l6823
 15878  006568  6E05               	movwf	??i2___awmod& (0+255),c
 15879  00656A  0E01               	movlw	1
 15880  00656C  6E06               	movwf	i2___awmod@counter,c
 15881  00656E  5005               	movf	??i2___awmod& (0+255),w,c
 15882  006570  D004               	goto	i2l6813
 15883  006572                     i2l6811:
 15884  006572  90D8               	bcf	status,0,c
 15885  006574  3603               	rlcf	i2___awmod@divisor,f,c
 15886  006576  3604               	rlcf	i2___awmod@divisor+1,f,c
 15887  006578  2A06               	incf	i2___awmod@counter,f,c
 15888  00657A                     i2l6813:
 15889  00657A  AE04               	btfss	i2___awmod@divisor+1,7,c
 15890  00657C  D7FA               	goto	i2l6811
 15891  00657E                     i2l6815:
 15892  00657E  5003               	movf	i2___awmod@divisor,w,c
 15893  006580  5C01               	subwf	i2___awmod@dividend,w,c
 15894  006582  5004               	movf	i2___awmod@divisor+1,w,c
 15895  006584  5802               	subwfb	i2___awmod@dividend+1,w,c
 15896  006586  A0D8               	btfss	status,0,c
 15897  006588  D004               	goto	i2l6819
 15898  00658A  5003               	movf	i2___awmod@divisor,w,c
 15899  00658C  5E01               	subwf	i2___awmod@dividend,f,c
 15900  00658E  5004               	movf	i2___awmod@divisor+1,w,c
 15901  006590  5A02               	subwfb	i2___awmod@dividend+1,f,c
 15902  006592                     i2l6819:
 15903  006592  90D8               	bcf	status,0,c
 15904  006594  3204               	rrcf	i2___awmod@divisor+1,f,c
 15905  006596  3203               	rrcf	i2___awmod@divisor,f,c
 15906  006598  2E06               	decfsz	i2___awmod@counter,f,c
 15907  00659A  D7F1               	goto	i2l6815
 15908  00659C                     i2l6823:
 15909  00659C  5007               	movf	i2___awmod@sign,w,c
 15910  00659E  B4D8               	btfsc	status,2,c
 15911  0065A0  D004               	goto	i2l6827
 15912  0065A2  6C01               	negf	i2___awmod@dividend,c
 15913  0065A4  1E02               	comf	i2___awmod@dividend+1,f,c
 15914  0065A6  B0D8               	btfsc	status,0,c
 15915  0065A8  2A02               	incf	i2___awmod@dividend+1,f,c
 15916  0065AA                     i2l6827:
 15917  0065AA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 15918  0065AE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 15919  0065B2  0012               	return	
 15920  0065B4                     __end_ofi2___awmod:
 15921                           	opt stack 0
 15922                           pclatu	equ	0xFFB
 15923                           pclath	equ	0xFFA
 15924                           tblptru	equ	0xFF8
 15925                           tblptrh	equ	0xFF7
 15926                           tblptrl	equ	0xFF6
 15927                           tablat	equ	0xFF5
 15928                           prodh	equ	0xFF4
 15929                           prodl	equ	0xFF3
 15930                           intcon	equ	0xFF2
 15931                           intcon3	equ	0xFF0
 15932                           indf0	equ	0xFEF
 15933                           fsr0h	equ	0xFEA
 15934                           fsr0l	equ	0xFE9
 15935                           wreg	equ	0xFE8
 15936                           fsr1h	equ	0xFE2
 15937                           fsr1l	equ	0xFE1
 15938                           indf2	equ	0xFDF
 15939                           postinc2	equ	0xFDE
 15940                           postdec2	equ	0xFDD
 15941                           fsr2h	equ	0xFDA
 15942                           fsr2l	equ	0xFD9
 15943                           status	equ	0xFD8
 15944                           
 15945 ;; *************** function i2___awdiv *****************
 15946 ;; Defined at:
 15947 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\awdiv.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;  dividend        2    7[COMRAM] int 
 15950 ;;  divisor         2    9[COMRAM] int 
 15951 ;; Auto vars:     Size  Location     Type
 15952 ;;  __awdiv         2   14[COMRAM] int 
 15953 ;;  __awdiv         1   13[COMRAM] unsigned char 
 15954 ;;  __awdiv         1   12[COMRAM] unsigned char 
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  2    7[COMRAM] int 
 15957 ;; Registers used:
 15958 ;;		wreg, status,2, status,0, prodl
 15959 ;; Tracked objects:
 15960 ;;		On entry : 0/0
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15967 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15968 ;;Total ram usage:        9 bytes
 15969 ;; Hardware stack levels used:    1
 15970 ;; This function calls:
 15971 ;;		Nothing
 15972 ;; This function is called by:
 15973 ;;		i2_fround
 15974 ;;		i2_scale
 15975 ;;		i2_sprintf
 15976 ;; This function uses a non-reentrant model
 15977 ;;
 15978                           
 15979                           	psect	text48
 15980  006324                     __ptext48:
 15981                           	opt stack 0
 15982  006324                     i2___awdiv:
 15983                           	opt stack 19
 15984                           
 15985                           ;incstack = 0
 15986  006324  6E0C               	movwf	??i2___awdiv& (0+255),c
 15987  006326  0E00               	movlw	0
 15988  006328  6E0E               	movwf	i2___awdiv@sign,c
 15989  00632A  500C               	movf	??i2___awdiv& (0+255),w,c
 15990  00632C  500B               	movf	i2___awdiv@divisor+1,w,c
 15991  00632E  0A80               	xorlw	128
 15992  006330  6EF3               	movwf	prodl,c
 15993  006332  0E80               	movlw	128
 15994  006334  5CF3               	subwf	prodl,w,c
 15995  006336  0E00               	movlw	0
 15996  006338  B4D8               	btfsc	status,2,c
 15997  00633A  5C0A               	subwf	i2___awdiv@divisor,w,c
 15998  00633C  B0D8               	btfsc	status,0,c
 15999  00633E  D008               	goto	i2l6759
 16000  006340  6C0A               	negf	i2___awdiv@divisor,c
 16001  006342  1E0B               	comf	i2___awdiv@divisor+1,f,c
 16002  006344  B0D8               	btfsc	status,0,c
 16003  006346  2A0B               	incf	i2___awdiv@divisor+1,f,c
 16004  006348  6E0C               	movwf	??i2___awdiv& (0+255),c
 16005  00634A  0E01               	movlw	1
 16006  00634C  6E0E               	movwf	i2___awdiv@sign,c
 16007  00634E  500C               	movf	??i2___awdiv& (0+255),w,c
 16008  006350                     i2l6759:
 16009  006350  5009               	movf	i2___awdiv@dividend+1,w,c
 16010  006352  0A80               	xorlw	128
 16011  006354  6EF3               	movwf	prodl,c
 16012  006356  0E80               	movlw	128
 16013  006358  5CF3               	subwf	prodl,w,c
 16014  00635A  0E00               	movlw	0
 16015  00635C  B4D8               	btfsc	status,2,c
 16016  00635E  5C08               	subwf	i2___awdiv@dividend,w,c
 16017  006360  B0D8               	btfsc	status,0,c
 16018  006362  D006               	goto	i2l6765
 16019  006364  6C08               	negf	i2___awdiv@dividend,c
 16020  006366  1E09               	comf	i2___awdiv@dividend+1,f,c
 16021  006368  B0D8               	btfsc	status,0,c
 16022  00636A  2A09               	incf	i2___awdiv@dividend+1,f,c
 16023  00636C  0E01               	movlw	1
 16024  00636E  1A0E               	xorwf	i2___awdiv@sign,f,c
 16025  006370                     i2l6765:
 16026  006370  0E00               	movlw	0
 16027  006372  6E10               	movwf	i2___awdiv@quotient+1,c
 16028  006374  0E00               	movlw	0
 16029  006376  6E0F               	movwf	i2___awdiv@quotient,c
 16030  006378  500B               	movf	i2___awdiv@divisor+1,w,c
 16031  00637A  100A               	iorwf	i2___awdiv@divisor,w,c
 16032  00637C  B4D8               	btfsc	status,2,c
 16033  00637E  D01E               	goto	i2l6787
 16034  006380  6E0C               	movwf	??i2___awdiv& (0+255),c
 16035  006382  0E01               	movlw	1
 16036  006384  6E0D               	movwf	i2___awdiv@counter,c
 16037  006386  500C               	movf	??i2___awdiv& (0+255),w,c
 16038  006388  D004               	goto	i2l6773
 16039  00638A                     i2l6771:
 16040  00638A  90D8               	bcf	status,0,c
 16041  00638C  360A               	rlcf	i2___awdiv@divisor,f,c
 16042  00638E  360B               	rlcf	i2___awdiv@divisor+1,f,c
 16043  006390  2A0D               	incf	i2___awdiv@counter,f,c
 16044  006392                     i2l6773:
 16045  006392  AE0B               	btfss	i2___awdiv@divisor+1,7,c
 16046  006394  D7FA               	goto	i2l6771
 16047  006396                     i2l6775:
 16048  006396  90D8               	bcf	status,0,c
 16049  006398  360F               	rlcf	i2___awdiv@quotient,f,c
 16050  00639A  3610               	rlcf	i2___awdiv@quotient+1,f,c
 16051  00639C  500A               	movf	i2___awdiv@divisor,w,c
 16052  00639E  5C08               	subwf	i2___awdiv@dividend,w,c
 16053  0063A0  500B               	movf	i2___awdiv@divisor+1,w,c
 16054  0063A2  5809               	subwfb	i2___awdiv@dividend+1,w,c
 16055  0063A4  A0D8               	btfss	status,0,c
 16056  0063A6  D005               	goto	i2l6783
 16057  0063A8  500A               	movf	i2___awdiv@divisor,w,c
 16058  0063AA  5E08               	subwf	i2___awdiv@dividend,f,c
 16059  0063AC  500B               	movf	i2___awdiv@divisor+1,w,c
 16060  0063AE  5A09               	subwfb	i2___awdiv@dividend+1,f,c
 16061  0063B0  800F               	bsf	i2___awdiv@quotient,0,c
 16062  0063B2                     i2l6783:
 16063  0063B2  90D8               	bcf	status,0,c
 16064  0063B4  320B               	rrcf	i2___awdiv@divisor+1,f,c
 16065  0063B6  320A               	rrcf	i2___awdiv@divisor,f,c
 16066  0063B8  2E0D               	decfsz	i2___awdiv@counter,f,c
 16067  0063BA  D7ED               	goto	i2l6775
 16068  0063BC                     i2l6787:
 16069  0063BC  500E               	movf	i2___awdiv@sign,w,c
 16070  0063BE  B4D8               	btfsc	status,2,c
 16071  0063C0  D004               	goto	i2l6791
 16072  0063C2  6C0F               	negf	i2___awdiv@quotient,c
 16073  0063C4  1E10               	comf	i2___awdiv@quotient+1,f,c
 16074  0063C6  B0D8               	btfsc	status,0,c
 16075  0063C8  2A10               	incf	i2___awdiv@quotient+1,f,c
 16076  0063CA                     i2l6791:
 16077  0063CA  C00F  F008         	movff	i2___awdiv@quotient,?i2___awdiv
 16078  0063CE  C010  F009         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 16079  0063D2  0012               	return	
 16080  0063D4                     __end_ofi2___awdiv:
 16081                           	opt stack 0
 16082                           pclatu	equ	0xFFB
 16083                           pclath	equ	0xFFA
 16084                           tblptru	equ	0xFF8
 16085                           tblptrh	equ	0xFF7
 16086                           tblptrl	equ	0xFF6
 16087                           tablat	equ	0xFF5
 16088                           prodh	equ	0xFF4
 16089                           prodl	equ	0xFF3
 16090                           intcon	equ	0xFF2
 16091                           intcon3	equ	0xFF0
 16092                           indf0	equ	0xFEF
 16093                           fsr0h	equ	0xFEA
 16094                           fsr0l	equ	0xFE9
 16095                           wreg	equ	0xFE8
 16096                           fsr1h	equ	0xFE2
 16097                           fsr1l	equ	0xFE1
 16098                           indf2	equ	0xFDF
 16099                           postinc2	equ	0xFDE
 16100                           postdec2	equ	0xFDD
 16101                           fsr2h	equ	0xFDA
 16102                           fsr2l	equ	0xFD9
 16103                           status	equ	0xFD8
 16104                           
 16105 ;; *************** function i2__tdiv_to_l_ *****************
 16106 ;; Defined at:
 16107 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftdivl.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;  f1              3    0[COMRAM] float 
 16110 ;;  f2              3    3[COMRAM] float 
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 16113 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 16114 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  4    0[COMRAM] unsigned long 
 16117 ;; Registers used:
 16118 ;;		wreg, status,2, status,0
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16124 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16125 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16126 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16127 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16128 ;;Total ram usage:       15 bytes
 16129 ;; Hardware stack levels used:    1
 16130 ;; This function calls:
 16131 ;;		Nothing
 16132 ;; This function is called by:
 16133 ;;		i2_sprintf
 16134 ;; This function uses a non-reentrant model
 16135 ;;
 16136                           
 16137                           	psect	text49
 16138  00565A                     __ptext49:
 16139                           	opt stack 0
 16140  00565A                     i2__tdiv_to_l_:
 16141                           	opt stack 20
 16142                           
 16143                           ;incstack = 0
 16144  00565A  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 16145  00565E  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16146  005660  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16147  005662  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 16148  005664  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16149  005666  E301               	bnc	u547_41
 16150  005668  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16151  00566A                     u547_41:
 16152  00566A  5007               	movf	??i2__tdiv_to_l_,w,c
 16153  00566C  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 16154  00566E  660F               	tstfsz	i2__tdiv_to_l_@exp1& (0+255),c
 16155  005670  D009               	goto	i2l7391
 16156  005672  0E00               	movlw	0
 16157  005674  6E01               	movwf	?i2__tdiv_to_l_,c
 16158  005676  0E00               	movlw	0
 16159  005678  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16160  00567A  0E00               	movlw	0
 16161  00567C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16162  00567E  0E00               	movlw	0
 16163  005680  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16164  005682  0012               	return	
 16165  005684                     i2l7391:
 16166  005684  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 16167  005688  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16168  00568A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16169  00568C  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 16170  00568E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16171  005690  E301               	bnc	u549_41
 16172  005692  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16173  005694                     u549_41:
 16174  005694  5007               	movf	??i2__tdiv_to_l_,w,c
 16175  005696  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16176  005698  660E               	tstfsz	i2__tdiv_to_l_@cntr& (0+255),c
 16177  00569A  D009               	goto	i2l7397
 16178  00569C  0E00               	movlw	0
 16179  00569E  6E01               	movwf	?i2__tdiv_to_l_,c
 16180  0056A0  0E00               	movlw	0
 16181  0056A2  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16182  0056A4  0E00               	movlw	0
 16183  0056A6  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16184  0056A8  0E00               	movlw	0
 16185  0056AA  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16186  0056AC  0012               	return	
 16187  0056AE                     i2l7397:
 16188  0056AE  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 16189  0056B0  0EFF               	movlw	255
 16190  0056B2  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 16191  0056B4  0EFF               	movlw	255
 16192  0056B6  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 16193  0056B8  0E00               	movlw	0
 16194  0056BA  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 16195  0056BC  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 16196  0056BE  0EFF               	movlw	255
 16197  0056C0  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 16198  0056C2  0EFF               	movlw	255
 16199  0056C4  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 16200  0056C6  0E00               	movlw	0
 16201  0056C8  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 16202  0056CA  0E00               	movlw	0
 16203  0056CC  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 16204  0056CE  0E00               	movlw	0
 16205  0056D0  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 16206  0056D2  0E00               	movlw	0
 16207  0056D4  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 16208  0056D6  0E00               	movlw	0
 16209  0056D8  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 16210  0056DA  0E7F               	movlw	127
 16211  0056DC  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16212  0056DE  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16213  0056E0  0F98               	addlw	152
 16214  0056E2  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16215  0056E4  6E07               	movwf	??i2__tdiv_to_l_& (0+255),c
 16216  0056E6  0E18               	movlw	24
 16217  0056E8  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16218  0056EA  5007               	movf	??i2__tdiv_to_l_& (0+255),w,c
 16219  0056EC                     i2l7411:
 16220  0056EC  90D8               	bcf	status,0,c
 16221  0056EE  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16222  0056F0  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16223  0056F2  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16224  0056F4  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16225  0056F6  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16226  0056F8  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 16227  0056FA  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16228  0056FC  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 16229  0056FE  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16230  005700  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 16231  005702  A0D8               	btfss	status,0,c
 16232  005704  D007               	goto	i2l759
 16233  005706  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16234  005708  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 16235  00570A  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16236  00570C  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 16237  00570E  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16238  005710  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 16239  005712  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 16240  005714                     i2l759:
 16241  005714  90D8               	bcf	status,0,c
 16242  005716  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 16243  005718  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 16244  00571A  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 16245  00571C  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 16246  00571E  D7E6               	goto	i2l7411
 16247  005720  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 16248  005722  D019               	goto	i2l7431
 16249  005724  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16250  005726  0A80               	xorlw	128
 16251  005728  6E07               	movwf	??i2__tdiv_to_l_& (0+255),c
 16252  00572A  0EE9               	movlw	233
 16253  00572C  0A80               	xorlw	128
 16254  00572E  5C07               	subwf	??i2__tdiv_to_l_,w,c
 16255  005730  B0D8               	btfsc	status,0,c
 16256  005732  D009               	goto	i2l7427
 16257  005734  0E00               	movlw	0
 16258  005736  6E01               	movwf	?i2__tdiv_to_l_,c
 16259  005738  0E00               	movlw	0
 16260  00573A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16261  00573C  0E00               	movlw	0
 16262  00573E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16263  005740  0E00               	movlw	0
 16264  005742  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16265  005744  0012               	return	
 16266  005746                     i2l7427:
 16267  005746  90D8               	bcf	status,0,c
 16268  005748  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 16269  00574A  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 16270  00574C  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 16271  00574E  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 16272  005750  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 16273  005752  D7F9               	goto	i2l7427
 16274  005754  D014               	goto	i2l765
 16275  005756                     i2l7431:
 16276  005756  0E17               	movlw	23
 16277  005758  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 16278  00575A  D00F               	goto	i2l7439
 16279  00575C  0E00               	movlw	0
 16280  00575E  6E01               	movwf	?i2__tdiv_to_l_,c
 16281  005760  0E00               	movlw	0
 16282  005762  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16283  005764  0E00               	movlw	0
 16284  005766  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16285  005768  0E00               	movlw	0
 16286  00576A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16287  00576C  0012               	return	
 16288  00576E                     i2l7437:
 16289  00576E  90D8               	bcf	status,0,c
 16290  005770  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16291  005772  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16292  005774  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16293  005776  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16294  005778  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 16295  00577A                     i2l7439:
 16296  00577A  660F               	tstfsz	i2__tdiv_to_l_@exp1,c
 16297  00577C  D7F8               	goto	i2l7437
 16298  00577E                     i2l765:
 16299  00577E  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16300  005782  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16301  005786  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16302  00578A  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16303  00578E  0012               	return	
 16304  005790                     __end_ofi2__tdiv_to_l_:
 16305                           	opt stack 0
 16306                           pclatu	equ	0xFFB
 16307                           pclath	equ	0xFFA
 16308                           tblptru	equ	0xFF8
 16309                           tblptrh	equ	0xFF7
 16310                           tblptrl	equ	0xFF6
 16311                           tablat	equ	0xFF5
 16312                           prodh	equ	0xFF4
 16313                           prodl	equ	0xFF3
 16314                           intcon	equ	0xFF2
 16315                           intcon3	equ	0xFF0
 16316                           indf0	equ	0xFEF
 16317                           fsr0h	equ	0xFEA
 16318                           fsr0l	equ	0xFE9
 16319                           wreg	equ	0xFE8
 16320                           fsr1h	equ	0xFE2
 16321                           fsr1l	equ	0xFE1
 16322                           indf2	equ	0xFDF
 16323                           postinc2	equ	0xFDE
 16324                           postdec2	equ	0xFDD
 16325                           fsr2h	equ	0xFDA
 16326                           fsr2l	equ	0xFD9
 16327                           status	equ	0xFD8
 16328                           
 16329 ;; *************** function i2__div_to_l_ *****************
 16330 ;; Defined at:
 16331 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\fldivl.c"
 16332 ;; Parameters:    Size  Location     Type
 16333 ;;  f1              3    0[COMRAM] unsigned long 
 16334 ;;  f2              3    3[COMRAM] unsigned long 
 16335 ;; Auto vars:     Size  Location     Type
 16336 ;;  _div_to_l_      4   10[COMRAM] unsigned long 
 16337 ;;  _div_to_l_      1   15[COMRAM] unsigned char 
 16338 ;;  _div_to_l_      1   14[COMRAM] unsigned char 
 16339 ;; Return value:  Size  Location     Type
 16340 ;;                  4    0[COMRAM] unsigned long 
 16341 ;; Registers used:
 16342 ;;		wreg, status,2, status,0
 16343 ;; Tracked objects:
 16344 ;;		On entry : 0/0
 16345 ;;		On exit  : 0/0
 16346 ;;		Unchanged: 0/0
 16347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16348 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16349 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16350 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16351 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16352 ;;Total ram usage:       16 bytes
 16353 ;; Hardware stack levels used:    1
 16354 ;; This function calls:
 16355 ;;		Nothing
 16356 ;; This function is called by:
 16357 ;;		i2_sprintf
 16358 ;; This function uses a non-reentrant model
 16359 ;;
 16360                           
 16361                           	psect	text50
 16362  005002                     __ptext50:
 16363                           	opt stack 0
 16364  005002                     i2__div_to_l_:
 16365                           	opt stack 20
 16366                           
 16367                           ;incstack = 0
 16368  005002  C001  F007         	movff	i2__div_to_l_@f1,??i2__div_to_l_
 16369  005006  C002  F008         	movff	i2__div_to_l_@f1+1,??i2__div_to_l_+1
 16370  00500A  C003  F009         	movff	i2__div_to_l_@f1+2,??i2__div_to_l_+2
 16371  00500E  C004  F00A         	movff	i2__div_to_l_@f1+3,??i2__div_to_l_+3
 16372  005012  0E18               	movlw	24
 16373  005014  D005               	goto	i2u538_40
 16374  005016                     i2u538_45:
 16375  005016  90D8               	bcf	status,0,c
 16376  005018  320A               	rrcf	??i2__div_to_l_+3,f,c
 16377  00501A  3209               	rrcf	??i2__div_to_l_+2,f,c
 16378  00501C  3208               	rrcf	??i2__div_to_l_+1,f,c
 16379  00501E  3207               	rrcf	??i2__div_to_l_,f,c
 16380  005020                     i2u538_40:
 16381  005020  2EE8               	decfsz	wreg,f,c
 16382  005022  D7F9               	goto	i2u538_45
 16383  005024  5007               	movf	??i2__div_to_l_,w,c
 16384  005026  6E10               	movwf	i2__div_to_l_@exp1,c
 16385  005028  6610               	tstfsz	i2__div_to_l_@exp1& (0+255),c
 16386  00502A  D009               	goto	i2l7335
 16387  00502C  0E00               	movlw	0
 16388  00502E  6E01               	movwf	?i2__div_to_l_,c
 16389  005030  0E00               	movlw	0
 16390  005032  6E02               	movwf	?i2__div_to_l_+1,c
 16391  005034  0E00               	movlw	0
 16392  005036  6E03               	movwf	?i2__div_to_l_+2,c
 16393  005038  0E00               	movlw	0
 16394  00503A  6E04               	movwf	?i2__div_to_l_+3,c
 16395  00503C  0012               	return	
 16396  00503E                     i2l7335:
 16397  00503E  C004  F007         	movff	i2__div_to_l_@f2,??i2__div_to_l_
 16398  005042  C005  F008         	movff	i2__div_to_l_@f2+1,??i2__div_to_l_+1
 16399  005046  C006  F009         	movff	i2__div_to_l_@f2+2,??i2__div_to_l_+2
 16400  00504A  C007  F00A         	movff	i2__div_to_l_@f2+3,??i2__div_to_l_+3
 16401  00504E  0E18               	movlw	24
 16402  005050  D005               	goto	i2u540_40
 16403  005052                     i2u540_45:
 16404  005052  90D8               	bcf	status,0,c
 16405  005054  320A               	rrcf	??i2__div_to_l_+3,f,c
 16406  005056  3209               	rrcf	??i2__div_to_l_+2,f,c
 16407  005058  3208               	rrcf	??i2__div_to_l_+1,f,c
 16408  00505A  3207               	rrcf	??i2__div_to_l_,f,c
 16409  00505C                     i2u540_40:
 16410  00505C  2EE8               	decfsz	wreg,f,c
 16411  00505E  D7F9               	goto	i2u540_45
 16412  005060  5007               	movf	??i2__div_to_l_,w,c
 16413  005062  6E0F               	movwf	i2__div_to_l_@cntr,c
 16414  005064  660F               	tstfsz	i2__div_to_l_@cntr& (0+255),c
 16415  005066  D009               	goto	i2l7341
 16416  005068  0E00               	movlw	0
 16417  00506A  6E01               	movwf	?i2__div_to_l_,c
 16418  00506C  0E00               	movlw	0
 16419  00506E  6E02               	movwf	?i2__div_to_l_+1,c
 16420  005070  0E00               	movlw	0
 16421  005072  6E03               	movwf	?i2__div_to_l_+2,c
 16422  005074  0E00               	movlw	0
 16423  005076  6E04               	movwf	?i2__div_to_l_+3,c
 16424  005078  0012               	return	
 16425  00507A                     i2l7341:
 16426  00507A  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 16427  00507C  0EFF               	movlw	255
 16428  00507E  1601               	andwf	i2__div_to_l_@f1,f,c
 16429  005080  0EFF               	movlw	255
 16430  005082  1602               	andwf	i2__div_to_l_@f1+1,f,c
 16431  005084  0EFF               	movlw	255
 16432  005086  1603               	andwf	i2__div_to_l_@f1+2,f,c
 16433  005088  0E00               	movlw	0
 16434  00508A  1604               	andwf	i2__div_to_l_@f1+3,f,c
 16435  00508C  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 16436  00508E  0EFF               	movlw	255
 16437  005090  1604               	andwf	i2__div_to_l_@f2,f,c
 16438  005092  0EFF               	movlw	255
 16439  005094  1605               	andwf	i2__div_to_l_@f2+1,f,c
 16440  005096  0EFF               	movlw	255
 16441  005098  1606               	andwf	i2__div_to_l_@f2+2,f,c
 16442  00509A  0E00               	movlw	0
 16443  00509C  1607               	andwf	i2__div_to_l_@f2+3,f,c
 16444  00509E  0E00               	movlw	0
 16445  0050A0  6E0B               	movwf	i2__div_to_l_@quot,c
 16446  0050A2  0E00               	movlw	0
 16447  0050A4  6E0C               	movwf	i2__div_to_l_@quot+1,c
 16448  0050A6  0E00               	movlw	0
 16449  0050A8  6E0D               	movwf	i2__div_to_l_@quot+2,c
 16450  0050AA  0E00               	movlw	0
 16451  0050AC  6E0E               	movwf	i2__div_to_l_@quot+3,c
 16452  0050AE  0E7F               	movlw	127
 16453  0050B0  5E10               	subwf	i2__div_to_l_@exp1,f,c
 16454  0050B2  500F               	movf	i2__div_to_l_@cntr,w,c
 16455  0050B4  0FA0               	addlw	160
 16456  0050B6  5E10               	subwf	i2__div_to_l_@exp1,f,c
 16457  0050B8  6E07               	movwf	??i2__div_to_l_& (0+255),c
 16458  0050BA  0E20               	movlw	32
 16459  0050BC  6E0F               	movwf	i2__div_to_l_@cntr,c
 16460  0050BE  5007               	movf	??i2__div_to_l_& (0+255),w,c
 16461  0050C0                     i2l640:
 16462  0050C0  90D8               	bcf	status,0,c
 16463  0050C2  360B               	rlcf	i2__div_to_l_@quot,f,c
 16464  0050C4  360C               	rlcf	i2__div_to_l_@quot+1,f,c
 16465  0050C6  360D               	rlcf	i2__div_to_l_@quot+2,f,c
 16466  0050C8  360E               	rlcf	i2__div_to_l_@quot+3,f,c
 16467  0050CA  5004               	movf	i2__div_to_l_@f2,w,c
 16468  0050CC  5C01               	subwf	i2__div_to_l_@f1,w,c
 16469  0050CE  5005               	movf	i2__div_to_l_@f2+1,w,c
 16470  0050D0  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 16471  0050D2  5006               	movf	i2__div_to_l_@f2+2,w,c
 16472  0050D4  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 16473  0050D6  5007               	movf	i2__div_to_l_@f2+3,w,c
 16474  0050D8  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 16475  0050DA  A0D8               	btfss	status,0,c
 16476  0050DC  D009               	goto	i2l7361
 16477  0050DE  5004               	movf	i2__div_to_l_@f2,w,c
 16478  0050E0  5E01               	subwf	i2__div_to_l_@f1,f,c
 16479  0050E2  5005               	movf	i2__div_to_l_@f2+1,w,c
 16480  0050E4  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 16481  0050E6  5006               	movf	i2__div_to_l_@f2+2,w,c
 16482  0050E8  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 16483  0050EA  5007               	movf	i2__div_to_l_@f2+3,w,c
 16484  0050EC  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 16485  0050EE  800B               	bsf	i2__div_to_l_@quot,0,c
 16486  0050F0                     i2l7361:
 16487  0050F0  90D8               	bcf	status,0,c
 16488  0050F2  3601               	rlcf	i2__div_to_l_@f1,f,c
 16489  0050F4  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 16490  0050F6  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 16491  0050F8  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 16492  0050FA  2E0F               	decfsz	i2__div_to_l_@cntr,f,c
 16493  0050FC  D7E1               	goto	i2l640
 16494  0050FE  AE10               	btfss	i2__div_to_l_@exp1,7,c
 16495  005100  D019               	goto	i2l7375
 16496  005102  5010               	movf	i2__div_to_l_@exp1,w,c
 16497  005104  0A80               	xorlw	128
 16498  005106  6E07               	movwf	??i2__div_to_l_& (0+255),c
 16499  005108  0EE1               	movlw	225
 16500  00510A  0A80               	xorlw	128
 16501  00510C  5C07               	subwf	??i2__div_to_l_,w,c
 16502  00510E  B0D8               	btfsc	status,0,c
 16503  005110  D009               	goto	i2l7371
 16504  005112  0E00               	movlw	0
 16505  005114  6E01               	movwf	?i2__div_to_l_,c
 16506  005116  0E00               	movlw	0
 16507  005118  6E02               	movwf	?i2__div_to_l_+1,c
 16508  00511A  0E00               	movlw	0
 16509  00511C  6E03               	movwf	?i2__div_to_l_+2,c
 16510  00511E  0E00               	movlw	0
 16511  005120  6E04               	movwf	?i2__div_to_l_+3,c
 16512  005122  0012               	return	
 16513  005124                     i2l7371:
 16514  005124  90D8               	bcf	status,0,c
 16515  005126  320E               	rrcf	i2__div_to_l_@quot+3,f,c
 16516  005128  320D               	rrcf	i2__div_to_l_@quot+2,f,c
 16517  00512A  320C               	rrcf	i2__div_to_l_@quot+1,f,c
 16518  00512C  320B               	rrcf	i2__div_to_l_@quot,f,c
 16519  00512E  3E10               	incfsz	i2__div_to_l_@exp1,f,c
 16520  005130  D7F9               	goto	i2l7371
 16521  005132  D014               	goto	i2l647
 16522  005134                     i2l7375:
 16523  005134  0E1F               	movlw	31
 16524  005136  6410               	cpfsgt	i2__div_to_l_@exp1,c
 16525  005138  D00F               	goto	i2l7383
 16526  00513A  0E00               	movlw	0
 16527  00513C  6E01               	movwf	?i2__div_to_l_,c
 16528  00513E  0E00               	movlw	0
 16529  005140  6E02               	movwf	?i2__div_to_l_+1,c
 16530  005142  0E00               	movlw	0
 16531  005144  6E03               	movwf	?i2__div_to_l_+2,c
 16532  005146  0E00               	movlw	0
 16533  005148  6E04               	movwf	?i2__div_to_l_+3,c
 16534  00514A  0012               	return	
 16535  00514C                     i2l7381:
 16536  00514C  90D8               	bcf	status,0,c
 16537  00514E  360B               	rlcf	i2__div_to_l_@quot,f,c
 16538  005150  360C               	rlcf	i2__div_to_l_@quot+1,f,c
 16539  005152  360D               	rlcf	i2__div_to_l_@quot+2,f,c
 16540  005154  360E               	rlcf	i2__div_to_l_@quot+3,f,c
 16541  005156  0610               	decf	i2__div_to_l_@exp1,f,c
 16542  005158                     i2l7383:
 16543  005158  6610               	tstfsz	i2__div_to_l_@exp1,c
 16544  00515A  D7F8               	goto	i2l7381
 16545  00515C                     i2l647:
 16546  00515C  C00B  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 16547  005160  C00C  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 16548  005164  C00D  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 16549  005168  C00E  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 16550  00516C  0012               	return	
 16551  00516E                     __end_ofi2__div_to_l_:
 16552                           	opt stack 0
 16553                           pclatu	equ	0xFFB
 16554                           pclath	equ	0xFFA
 16555                           tblptru	equ	0xFF8
 16556                           tblptrh	equ	0xFF7
 16557                           tblptrl	equ	0xFF6
 16558                           tablat	equ	0xFF5
 16559                           prodh	equ	0xFF4
 16560                           prodl	equ	0xFF3
 16561                           intcon	equ	0xFF2
 16562                           intcon3	equ	0xFF0
 16563                           indf0	equ	0xFEF
 16564                           fsr0h	equ	0xFEA
 16565                           fsr0l	equ	0xFE9
 16566                           wreg	equ	0xFE8
 16567                           fsr1h	equ	0xFE2
 16568                           fsr1l	equ	0xFE1
 16569                           indf2	equ	0xFDF
 16570                           postinc2	equ	0xFDE
 16571                           postdec2	equ	0xFDD
 16572                           fsr2h	equ	0xFDA
 16573                           fsr2l	equ	0xFD9
 16574                           status	equ	0xFD8
 16575                           
 16576 ;; *************** function i2___lltoft *****************
 16577 ;; Defined at:
 16578 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\lltoft.c"
 16579 ;; Parameters:    Size  Location     Type
 16580 ;;  c               4    8[COMRAM] unsigned long 
 16581 ;; Auto vars:     Size  Location     Type
 16582 ;;  __lltoft        1   16[COMRAM] unsigned char 
 16583 ;; Return value:  Size  Location     Type
 16584 ;;                  3    8[COMRAM] float 
 16585 ;; Registers used:
 16586 ;;		wreg, status,2, status,0, cstack
 16587 ;; Tracked objects:
 16588 ;;		On entry : 0/0
 16589 ;;		On exit  : 0/0
 16590 ;;		Unchanged: 0/0
 16591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16595 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16596 ;;Total ram usage:        9 bytes
 16597 ;; Hardware stack levels used:    1
 16598 ;; Hardware stack levels required when called:    1
 16599 ;; This function calls:
 16600 ;;		i2___ftpack
 16601 ;; This function is called by:
 16602 ;;		i2_sprintf
 16603 ;; This function uses a non-reentrant model
 16604 ;;
 16605                           
 16606                           	psect	text51
 16607  0068E4                     __ptext51:
 16608                           	opt stack 0
 16609  0068E4                     i2___lltoft:
 16610                           	opt stack 19
 16611                           
 16612                           ;incstack = 0
 16613  0068E4  6E0D               	movwf	??i2___lltoft& (0+255),c
 16614  0068E6  0E8E               	movlw	142
 16615  0068E8  6E11               	movwf	i2___lltoft@exp,c
 16616  0068EA  500D               	movf	??i2___lltoft& (0+255),w,c
 16617  0068EC  D006               	goto	i2l7563
 16618  0068EE                     i2l7561:
 16619  0068EE  90D8               	bcf	status,0,c
 16620  0068F0  320C               	rrcf	i2___lltoft@c+3,f,c
 16621  0068F2  320B               	rrcf	i2___lltoft@c+2,f,c
 16622  0068F4  320A               	rrcf	i2___lltoft@c+1,f,c
 16623  0068F6  3209               	rrcf	i2___lltoft@c,f,c
 16624  0068F8  2A11               	incf	i2___lltoft@exp,f,c
 16625  0068FA                     i2l7563:
 16626  0068FA  0E00               	movlw	0
 16627  0068FC  1409               	andwf	i2___lltoft@c,w,c
 16628  0068FE  6E0D               	movwf	??i2___lltoft& (0+255),c
 16629  006900  0E00               	movlw	0
 16630  006902  140A               	andwf	i2___lltoft@c+1,w,c
 16631  006904  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 16632  006906  0E00               	movlw	0
 16633  006908  140B               	andwf	i2___lltoft@c+2,w,c
 16634  00690A  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 16635  00690C  0EFF               	movlw	255
 16636  00690E  140C               	andwf	i2___lltoft@c+3,w,c
 16637  006910  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 16638  006912  5010               	movf	??i2___lltoft+3,w,c
 16639  006914  100D               	iorwf	??i2___lltoft,w,c
 16640  006916  100E               	iorwf	??i2___lltoft+1,w,c
 16641  006918  100F               	iorwf	??i2___lltoft+2,w,c
 16642  00691A  A4D8               	btfss	status,2,c
 16643  00691C  D7E8               	goto	i2l7561
 16644  00691E  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 16645  006922  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 16646  006926  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 16647  00692A  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 16648  00692E  6E0D               	movwf	??i2___lltoft& (0+255),c
 16649  006930  0E00               	movlw	0
 16650  006932  6E05               	movwf	i2___ftpack@sign,c
 16651  006934  500D               	movf	??i2___lltoft& (0+255),w,c
 16652  006936  ECEA  F031         	call	i2___ftpack	;wreg free
 16653  00693A  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 16654  00693E  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 16655  006942  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 16656  006946  0012               	return	
 16657  006948                     __end_ofi2___lltoft:
 16658                           	opt stack 0
 16659                           pclatu	equ	0xFFB
 16660                           pclath	equ	0xFFA
 16661                           tblptru	equ	0xFF8
 16662                           tblptrh	equ	0xFF7
 16663                           tblptrl	equ	0xFF6
 16664                           tablat	equ	0xFF5
 16665                           prodh	equ	0xFF4
 16666                           prodl	equ	0xFF3
 16667                           intcon	equ	0xFF2
 16668                           intcon3	equ	0xFF0
 16669                           indf0	equ	0xFEF
 16670                           fsr0h	equ	0xFEA
 16671                           fsr0l	equ	0xFE9
 16672                           wreg	equ	0xFE8
 16673                           fsr1h	equ	0xFE2
 16674                           fsr1l	equ	0xFE1
 16675                           indf2	equ	0xFDF
 16676                           postinc2	equ	0xFDE
 16677                           postdec2	equ	0xFDD
 16678                           fsr2h	equ	0xFDA
 16679                           fsr2l	equ	0xFD9
 16680                           status	equ	0xFD8
 16681                           
 16682 ;; *************** function i2___llmod *****************
 16683 ;; Defined at:
 16684 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\llmod.c"
 16685 ;; Parameters:    Size  Location     Type
 16686 ;;  dividend        4   14[COMRAM] unsigned long 
 16687 ;;  divisor         4   18[COMRAM] unsigned long 
 16688 ;; Auto vars:     Size  Location     Type
 16689 ;;  __llmod         1   23[COMRAM] unsigned char 
 16690 ;; Return value:  Size  Location     Type
 16691 ;;                  4   14[COMRAM] unsigned long 
 16692 ;; Registers used:
 16693 ;;		wreg, status,2, status,0
 16694 ;; Tracked objects:
 16695 ;;		On entry : 0/0
 16696 ;;		On exit  : 0/0
 16697 ;;		Unchanged: 0/0
 16698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16699 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16701 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16702 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16703 ;;Total ram usage:       10 bytes
 16704 ;; Hardware stack levels used:    1
 16705 ;; This function calls:
 16706 ;;		Nothing
 16707 ;; This function is called by:
 16708 ;;		i2_sprintf
 16709 ;; This function uses a non-reentrant model
 16710 ;;
 16711                           
 16712                           	psect	text52
 16713  00687A                     __ptext52:
 16714                           	opt stack 0
 16715  00687A                     i2___llmod:
 16716                           	opt stack 20
 16717                           
 16718                           ;incstack = 0
 16719  00687A  5016               	movf	i2___llmod@divisor+3,w,c
 16720  00687C  1013               	iorwf	i2___llmod@divisor,w,c
 16721  00687E  1014               	iorwf	i2___llmod@divisor+1,w,c
 16722  006880  1015               	iorwf	i2___llmod@divisor+2,w,c
 16723  006882  B4D8               	btfsc	status,2,c
 16724  006884  D026               	goto	i2l854
 16725  006886  6E17               	movwf	??i2___llmod& (0+255),c
 16726  006888  0E01               	movlw	1
 16727  00688A  6E18               	movwf	i2___llmod@counter,c
 16728  00688C  5017               	movf	??i2___llmod& (0+255),w,c
 16729  00688E  D006               	goto	i2l7549
 16730  006890                     i2l7547:
 16731  006890  90D8               	bcf	status,0,c
 16732  006892  3613               	rlcf	i2___llmod@divisor,f,c
 16733  006894  3614               	rlcf	i2___llmod@divisor+1,f,c
 16734  006896  3615               	rlcf	i2___llmod@divisor+2,f,c
 16735  006898  3616               	rlcf	i2___llmod@divisor+3,f,c
 16736  00689A  2A18               	incf	i2___llmod@counter,f,c
 16737  00689C                     i2l7549:
 16738  00689C  AE16               	btfss	i2___llmod@divisor+3,7,c
 16739  00689E  D7F8               	goto	i2l7547
 16740  0068A0                     i2l7551:
 16741  0068A0  5013               	movf	i2___llmod@divisor,w,c
 16742  0068A2  5C0F               	subwf	i2___llmod@dividend,w,c
 16743  0068A4  5014               	movf	i2___llmod@divisor+1,w,c
 16744  0068A6  5810               	subwfb	i2___llmod@dividend+1,w,c
 16745  0068A8  5015               	movf	i2___llmod@divisor+2,w,c
 16746  0068AA  5811               	subwfb	i2___llmod@dividend+2,w,c
 16747  0068AC  5016               	movf	i2___llmod@divisor+3,w,c
 16748  0068AE  5812               	subwfb	i2___llmod@dividend+3,w,c
 16749  0068B0  A0D8               	btfss	status,0,c
 16750  0068B2  D008               	goto	i2l7555
 16751  0068B4  5013               	movf	i2___llmod@divisor,w,c
 16752  0068B6  5E0F               	subwf	i2___llmod@dividend,f,c
 16753  0068B8  5014               	movf	i2___llmod@divisor+1,w,c
 16754  0068BA  5A10               	subwfb	i2___llmod@dividend+1,f,c
 16755  0068BC  5015               	movf	i2___llmod@divisor+2,w,c
 16756  0068BE  5A11               	subwfb	i2___llmod@dividend+2,f,c
 16757  0068C0  5016               	movf	i2___llmod@divisor+3,w,c
 16758  0068C2  5A12               	subwfb	i2___llmod@dividend+3,f,c
 16759  0068C4                     i2l7555:
 16760  0068C4  90D8               	bcf	status,0,c
 16761  0068C6  3216               	rrcf	i2___llmod@divisor+3,f,c
 16762  0068C8  3215               	rrcf	i2___llmod@divisor+2,f,c
 16763  0068CA  3214               	rrcf	i2___llmod@divisor+1,f,c
 16764  0068CC  3213               	rrcf	i2___llmod@divisor,f,c
 16765  0068CE  2E18               	decfsz	i2___llmod@counter,f,c
 16766  0068D0  D7E7               	goto	i2l7551
 16767  0068D2                     i2l854:
 16768  0068D2  C00F  F00F         	movff	i2___llmod@dividend,?i2___llmod
 16769  0068D6  C010  F010         	movff	i2___llmod@dividend+1,?i2___llmod+1
 16770  0068DA  C011  F011         	movff	i2___llmod@dividend+2,?i2___llmod+2
 16771  0068DE  C012  F012         	movff	i2___llmod@dividend+3,?i2___llmod+3
 16772  0068E2  0012               	return	
 16773  0068E4                     __end_ofi2___llmod:
 16774                           	opt stack 0
 16775                           pclatu	equ	0xFFB
 16776                           pclath	equ	0xFFA
 16777                           tblptru	equ	0xFF8
 16778                           tblptrh	equ	0xFF7
 16779                           tblptrl	equ	0xFF6
 16780                           tablat	equ	0xFF5
 16781                           prodh	equ	0xFF4
 16782                           prodl	equ	0xFF3
 16783                           intcon	equ	0xFF2
 16784                           intcon3	equ	0xFF0
 16785                           indf0	equ	0xFEF
 16786                           fsr0h	equ	0xFEA
 16787                           fsr0l	equ	0xFE9
 16788                           wreg	equ	0xFE8
 16789                           fsr1h	equ	0xFE2
 16790                           fsr1l	equ	0xFE1
 16791                           indf2	equ	0xFDF
 16792                           postinc2	equ	0xFDE
 16793                           postdec2	equ	0xFDD
 16794                           fsr2h	equ	0xFDA
 16795                           fsr2l	equ	0xFD9
 16796                           status	equ	0xFD8
 16797                           
 16798 ;; *************** function i2___lldiv *****************
 16799 ;; Defined at:
 16800 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\lldiv.c"
 16801 ;; Parameters:    Size  Location     Type
 16802 ;;  dividend        4    0[COMRAM] unsigned long 
 16803 ;;  divisor         4    4[COMRAM] unsigned long 
 16804 ;; Auto vars:     Size  Location     Type
 16805 ;;  __lldiv         4    9[COMRAM] unsigned long 
 16806 ;;  __lldiv         1   13[COMRAM] unsigned char 
 16807 ;; Return value:  Size  Location     Type
 16808 ;;                  4    0[COMRAM] unsigned long 
 16809 ;; Registers used:
 16810 ;;		wreg, status,2, status,0
 16811 ;; Tracked objects:
 16812 ;;		On entry : 0/0
 16813 ;;		On exit  : 0/0
 16814 ;;		Unchanged: 0/0
 16815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16816 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16817 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16819 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16820 ;;Total ram usage:       14 bytes
 16821 ;; Hardware stack levels used:    1
 16822 ;; This function calls:
 16823 ;;		Nothing
 16824 ;; This function is called by:
 16825 ;;		i2_sprintf
 16826 ;; This function uses a non-reentrant model
 16827 ;;
 16828                           
 16829                           	psect	text53
 16830  006772                     __ptext53:
 16831                           	opt stack 0
 16832  006772                     i2___lldiv:
 16833                           	opt stack 20
 16834                           
 16835                           ;incstack = 0
 16836  006772  0E00               	movlw	0
 16837  006774  6E0A               	movwf	i2___lldiv@quotient,c
 16838  006776  0E00               	movlw	0
 16839  006778  6E0B               	movwf	i2___lldiv@quotient+1,c
 16840  00677A  0E00               	movlw	0
 16841  00677C  6E0C               	movwf	i2___lldiv@quotient+2,c
 16842  00677E  0E00               	movlw	0
 16843  006780  6E0D               	movwf	i2___lldiv@quotient+3,c
 16844  006782  5008               	movf	i2___lldiv@divisor+3,w,c
 16845  006784  1005               	iorwf	i2___lldiv@divisor,w,c
 16846  006786  1006               	iorwf	i2___lldiv@divisor+1,w,c
 16847  006788  1007               	iorwf	i2___lldiv@divisor+2,w,c
 16848  00678A  B4D8               	btfsc	status,2,c
 16849  00678C  D02C               	goto	i2l844
 16850  00678E  6E09               	movwf	??i2___lldiv& (0+255),c
 16851  006790  0E01               	movlw	1
 16852  006792  6E0E               	movwf	i2___lldiv@counter,c
 16853  006794  5009               	movf	??i2___lldiv& (0+255),w,c
 16854  006796  D006               	goto	i2l7529
 16855  006798                     i2l7527:
 16856  006798  90D8               	bcf	status,0,c
 16857  00679A  3605               	rlcf	i2___lldiv@divisor,f,c
 16858  00679C  3606               	rlcf	i2___lldiv@divisor+1,f,c
 16859  00679E  3607               	rlcf	i2___lldiv@divisor+2,f,c
 16860  0067A0  3608               	rlcf	i2___lldiv@divisor+3,f,c
 16861  0067A2  2A0E               	incf	i2___lldiv@counter,f,c
 16862  0067A4                     i2l7529:
 16863  0067A4  AE08               	btfss	i2___lldiv@divisor+3,7,c
 16864  0067A6  D7F8               	goto	i2l7527
 16865  0067A8                     i2l7531:
 16866  0067A8  90D8               	bcf	status,0,c
 16867  0067AA  360A               	rlcf	i2___lldiv@quotient,f,c
 16868  0067AC  360B               	rlcf	i2___lldiv@quotient+1,f,c
 16869  0067AE  360C               	rlcf	i2___lldiv@quotient+2,f,c
 16870  0067B0  360D               	rlcf	i2___lldiv@quotient+3,f,c
 16871  0067B2  5005               	movf	i2___lldiv@divisor,w,c
 16872  0067B4  5C01               	subwf	i2___lldiv@dividend,w,c
 16873  0067B6  5006               	movf	i2___lldiv@divisor+1,w,c
 16874  0067B8  5802               	subwfb	i2___lldiv@dividend+1,w,c
 16875  0067BA  5007               	movf	i2___lldiv@divisor+2,w,c
 16876  0067BC  5803               	subwfb	i2___lldiv@dividend+2,w,c
 16877  0067BE  5008               	movf	i2___lldiv@divisor+3,w,c
 16878  0067C0  5804               	subwfb	i2___lldiv@dividend+3,w,c
 16879  0067C2  A0D8               	btfss	status,0,c
 16880  0067C4  D009               	goto	i2l7539
 16881  0067C6  5005               	movf	i2___lldiv@divisor,w,c
 16882  0067C8  5E01               	subwf	i2___lldiv@dividend,f,c
 16883  0067CA  5006               	movf	i2___lldiv@divisor+1,w,c
 16884  0067CC  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 16885  0067CE  5007               	movf	i2___lldiv@divisor+2,w,c
 16886  0067D0  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 16887  0067D2  5008               	movf	i2___lldiv@divisor+3,w,c
 16888  0067D4  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 16889  0067D6  800A               	bsf	i2___lldiv@quotient,0,c
 16890  0067D8                     i2l7539:
 16891  0067D8  90D8               	bcf	status,0,c
 16892  0067DA  3208               	rrcf	i2___lldiv@divisor+3,f,c
 16893  0067DC  3207               	rrcf	i2___lldiv@divisor+2,f,c
 16894  0067DE  3206               	rrcf	i2___lldiv@divisor+1,f,c
 16895  0067E0  3205               	rrcf	i2___lldiv@divisor,f,c
 16896  0067E2  2E0E               	decfsz	i2___lldiv@counter,f,c
 16897  0067E4  D7E1               	goto	i2l7531
 16898  0067E6                     i2l844:
 16899  0067E6  C00A  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 16900  0067EA  C00B  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 16901  0067EE  C00C  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 16902  0067F2  C00D  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 16903  0067F6  0012               	return	
 16904  0067F8                     __end_ofi2___lldiv:
 16905                           	opt stack 0
 16906                           pclatu	equ	0xFFB
 16907                           pclath	equ	0xFFA
 16908                           tblptru	equ	0xFF8
 16909                           tblptrh	equ	0xFF7
 16910                           tblptrl	equ	0xFF6
 16911                           tablat	equ	0xFF5
 16912                           prodh	equ	0xFF4
 16913                           prodl	equ	0xFF3
 16914                           intcon	equ	0xFF2
 16915                           intcon3	equ	0xFF0
 16916                           indf0	equ	0xFEF
 16917                           fsr0h	equ	0xFEA
 16918                           fsr0l	equ	0xFE9
 16919                           wreg	equ	0xFE8
 16920                           fsr1h	equ	0xFE2
 16921                           fsr1l	equ	0xFE1
 16922                           indf2	equ	0xFDF
 16923                           postinc2	equ	0xFDE
 16924                           postdec2	equ	0xFDD
 16925                           fsr2h	equ	0xFDA
 16926                           fsr2l	equ	0xFD9
 16927                           status	equ	0xFD8
 16928                           
 16929 ;; *************** function i2___fttol *****************
 16930 ;; Defined at:
 16931 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\fttol.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;  f1              3   44[COMRAM] float 
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;  __fttol         4   54[COMRAM] unsigned long 
 16936 ;;  __fttol         1   58[COMRAM] unsigned char 
 16937 ;;  __fttol         1   53[COMRAM] unsigned char 
 16938 ;; Return value:  Size  Location     Type
 16939 ;;                  4   44[COMRAM] long 
 16940 ;; Registers used:
 16941 ;;		wreg, status,2, status,0
 16942 ;; Tracked objects:
 16943 ;;		On entry : 0/0
 16944 ;;		On exit  : 0/0
 16945 ;;		Unchanged: 0/0
 16946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16948 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16949 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16950 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16951 ;;Total ram usage:       15 bytes
 16952 ;; Hardware stack levels used:    1
 16953 ;; This function calls:
 16954 ;;		Nothing
 16955 ;; This function is called by:
 16956 ;;		i2_sprintf
 16957 ;; This function uses a non-reentrant model
 16958 ;;
 16959                           
 16960                           	psect	text54
 16961  005DD0                     __ptext54:
 16962                           	opt stack 0
 16963  005DD0                     i2___fttol:
 16964                           	opt stack 20
 16965                           
 16966                           ;incstack = 0
 16967  005DD0  C02F  F031         	movff	i2___fttol@f1+2,??i2___fttol
 16968  005DD4  6A32               	clrf	(??i2___fttol+1)& (0+255),c
 16969  005DD6  6A33               	clrf	(??i2___fttol+2)& (0+255),c
 16970  005DD8  342E               	rlcf	i2___fttol@f1+1,w,c
 16971  005DDA  3631               	rlcf	??i2___fttol& (0+255),f,c
 16972  005DDC  E301               	bnc	u560_41
 16973  005DDE  8032               	bsf	(??i2___fttol+1)& (0+255),0,c
 16974  005DE0                     u560_41:
 16975  005DE0  5031               	movf	??i2___fttol,w,c
 16976  005DE2  6E3B               	movwf	i2___fttol@exp1,c
 16977  005DE4  663B               	tstfsz	i2___fttol@exp1& (0+255),c
 16978  005DE6  D009               	goto	i2l7469
 16979  005DE8  0E00               	movlw	0
 16980  005DEA  6E2D               	movwf	?i2___fttol,c
 16981  005DEC  0E00               	movlw	0
 16982  005DEE  6E2E               	movwf	?i2___fttol+1,c
 16983  005DF0  0E00               	movlw	0
 16984  005DF2  6E2F               	movwf	?i2___fttol+2,c
 16985  005DF4  0E00               	movlw	0
 16986  005DF6  6E30               	movwf	?i2___fttol+3,c
 16987  005DF8  0012               	return	
 16988  005DFA                     i2l7469:
 16989  005DFA  0E17               	movlw	23
 16990  005DFC  6E31               	movwf	??i2___fttol& (0+255),c
 16991  005DFE  C02D  F032         	movff	i2___fttol@f1,??i2___fttol+1
 16992  005E02  C02E  F033         	movff	i2___fttol@f1+1,??i2___fttol+2
 16993  005E06  C02F  F034         	movff	i2___fttol@f1+2,??i2___fttol+3
 16994  005E0A  2831               	incf	??i2___fttol,w,c
 16995  005E0C  6E35               	movwf	(??i2___fttol+4)& (0+255),c
 16996  005E0E  D004               	goto	i2u562_40
 16997  005E10                     i2u562_45:
 16998  005E10  90D8               	bcf	status,0,c
 16999  005E12  3234               	rrcf	??i2___fttol+3,f,c
 17000  005E14  3233               	rrcf	??i2___fttol+2,f,c
 17001  005E16  3232               	rrcf	??i2___fttol+1,f,c
 17002  005E18                     i2u562_40:
 17003  005E18  2E35               	decfsz	(??i2___fttol+4)& (0+255),f,c
 17004  005E1A  D7FA               	goto	i2u562_45
 17005  005E1C  5032               	movf	??i2___fttol+1,w,c
 17006  005E1E  6E36               	movwf	i2___fttol@sign1,c
 17007  005E20  8E2E               	bsf	i2___fttol@f1+1,7,c
 17008  005E22  0EFF               	movlw	255
 17009  005E24  162D               	andwf	i2___fttol@f1,f,c
 17010  005E26  0EFF               	movlw	255
 17011  005E28  162E               	andwf	i2___fttol@f1+1,f,c
 17012  005E2A  0E00               	movlw	0
 17013  005E2C  162F               	andwf	i2___fttol@f1+2,f,c
 17014  005E2E  502D               	movf	i2___fttol@f1,w,c
 17015  005E30  6E37               	movwf	i2___fttol@lval,c
 17016  005E32  502E               	movf	i2___fttol@f1+1,w,c
 17017  005E34  6E38               	movwf	i2___fttol@lval+1,c
 17018  005E36  502F               	movf	i2___fttol@f1+2,w,c
 17019  005E38  6E39               	movwf	i2___fttol@lval+2,c
 17020  005E3A  6A3A               	clrf	i2___fttol@lval+3,c
 17021  005E3C  0E8E               	movlw	142
 17022  005E3E  5E3B               	subwf	i2___fttol@exp1,f,c
 17023  005E40  AE3B               	btfss	i2___fttol@exp1,7,c
 17024  005E42  D019               	goto	i2l7491
 17025  005E44  503B               	movf	i2___fttol@exp1,w,c
 17026  005E46  0A80               	xorlw	128
 17027  005E48  6E31               	movwf	??i2___fttol& (0+255),c
 17028  005E4A  0EF1               	movlw	241
 17029  005E4C  0A80               	xorlw	128
 17030  005E4E  5C31               	subwf	??i2___fttol,w,c
 17031  005E50  B0D8               	btfsc	status,0,c
 17032  005E52  D009               	goto	i2l7487
 17033  005E54  0E00               	movlw	0
 17034  005E56  6E2D               	movwf	?i2___fttol,c
 17035  005E58  0E00               	movlw	0
 17036  005E5A  6E2E               	movwf	?i2___fttol+1,c
 17037  005E5C  0E00               	movlw	0
 17038  005E5E  6E2F               	movwf	?i2___fttol+2,c
 17039  005E60  0E00               	movlw	0
 17040  005E62  6E30               	movwf	?i2___fttol+3,c
 17041  005E64  0012               	return	
 17042  005E66                     i2l7487:
 17043  005E66  90D8               	bcf	status,0,c
 17044  005E68  323A               	rrcf	i2___fttol@lval+3,f,c
 17045  005E6A  3239               	rrcf	i2___fttol@lval+2,f,c
 17046  005E6C  3238               	rrcf	i2___fttol@lval+1,f,c
 17047  005E6E  3237               	rrcf	i2___fttol@lval,f,c
 17048  005E70  3E3B               	incfsz	i2___fttol@exp1,f,c
 17049  005E72  D7F9               	goto	i2l7487
 17050  005E74  D014               	goto	i2l7501
 17051  005E76                     i2l7491:
 17052  005E76  0E17               	movlw	23
 17053  005E78  643B               	cpfsgt	i2___fttol@exp1,c
 17054  005E7A  D00F               	goto	i2l7499
 17055  005E7C  0E00               	movlw	0
 17056  005E7E  6E2D               	movwf	?i2___fttol,c
 17057  005E80  0E00               	movlw	0
 17058  005E82  6E2E               	movwf	?i2___fttol+1,c
 17059  005E84  0E00               	movlw	0
 17060  005E86  6E2F               	movwf	?i2___fttol+2,c
 17061  005E88  0E00               	movlw	0
 17062  005E8A  6E30               	movwf	?i2___fttol+3,c
 17063  005E8C  0012               	return	
 17064  005E8E                     i2l7497:
 17065  005E8E  90D8               	bcf	status,0,c
 17066  005E90  3637               	rlcf	i2___fttol@lval,f,c
 17067  005E92  3638               	rlcf	i2___fttol@lval+1,f,c
 17068  005E94  3639               	rlcf	i2___fttol@lval+2,f,c
 17069  005E96  363A               	rlcf	i2___fttol@lval+3,f,c
 17070  005E98  063B               	decf	i2___fttol@exp1,f,c
 17071  005E9A                     i2l7499:
 17072  005E9A  663B               	tstfsz	i2___fttol@exp1,c
 17073  005E9C  D7F8               	goto	i2l7497
 17074  005E9E                     i2l7501:
 17075  005E9E  5036               	movf	i2___fttol@sign1,w,c
 17076  005EA0  B4D8               	btfsc	status,2,c
 17077  005EA2  D008               	goto	i2l7505
 17078  005EA4  1E3A               	comf	i2___fttol@lval+3,f,c
 17079  005EA6  1E39               	comf	i2___fttol@lval+2,f,c
 17080  005EA8  1E38               	comf	i2___fttol@lval+1,f,c
 17081  005EAA  6C37               	negf	i2___fttol@lval,c
 17082  005EAC  0E00               	movlw	0
 17083  005EAE  2238               	addwfc	i2___fttol@lval+1,f,c
 17084  005EB0  2239               	addwfc	i2___fttol@lval+2,f,c
 17085  005EB2  223A               	addwfc	i2___fttol@lval+3,f,c
 17086  005EB4                     i2l7505:
 17087  005EB4  C037  F02D         	movff	i2___fttol@lval,?i2___fttol
 17088  005EB8  C038  F02E         	movff	i2___fttol@lval+1,?i2___fttol+1
 17089  005EBC  C039  F02F         	movff	i2___fttol@lval+2,?i2___fttol+2
 17090  005EC0  C03A  F030         	movff	i2___fttol@lval+3,?i2___fttol+3
 17091  005EC4  0012               	return	
 17092  005EC6                     __end_ofi2___fttol:
 17093                           	opt stack 0
 17094                           pclatu	equ	0xFFB
 17095                           pclath	equ	0xFFA
 17096                           tblptru	equ	0xFF8
 17097                           tblptrh	equ	0xFF7
 17098                           tblptrl	equ	0xFF6
 17099                           tablat	equ	0xFF5
 17100                           prodh	equ	0xFF4
 17101                           prodl	equ	0xFF3
 17102                           intcon	equ	0xFF2
 17103                           intcon3	equ	0xFF0
 17104                           indf0	equ	0xFEF
 17105                           fsr0h	equ	0xFEA
 17106                           fsr0l	equ	0xFE9
 17107                           wreg	equ	0xFE8
 17108                           fsr1h	equ	0xFE2
 17109                           fsr1l	equ	0xFE1
 17110                           indf2	equ	0xFDF
 17111                           postinc2	equ	0xFDE
 17112                           postdec2	equ	0xFDD
 17113                           fsr2h	equ	0xFDA
 17114                           fsr2l	equ	0xFD9
 17115                           status	equ	0xFD8
 17116                           
 17117 ;; *************** function i2___ftneg *****************
 17118 ;; Defined at:
 17119 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftneg.c"
 17120 ;; Parameters:    Size  Location     Type
 17121 ;;  f1              3    0[COMRAM] float 
 17122 ;; Auto vars:     Size  Location     Type
 17123 ;;		None
 17124 ;; Return value:  Size  Location     Type
 17125 ;;                  3    0[COMRAM] float 
 17126 ;; Registers used:
 17127 ;;		wreg, status,2, status,0
 17128 ;; Tracked objects:
 17129 ;;		On entry : 0/0
 17130 ;;		On exit  : 0/0
 17131 ;;		Unchanged: 0/0
 17132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17133 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17136 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17137 ;;Total ram usage:        3 bytes
 17138 ;; Hardware stack levels used:    1
 17139 ;; This function calls:
 17140 ;;		Nothing
 17141 ;; This function is called by:
 17142 ;;		i2_sprintf
 17143 ;; This function uses a non-reentrant model
 17144 ;;
 17145                           
 17146                           	psect	text55
 17147  006FE8                     __ptext55:
 17148                           	opt stack 0
 17149  006FE8                     i2___ftneg:
 17150                           	opt stack 20
 17151                           
 17152                           ;incstack = 0
 17153  006FE8  0E7F               	movlw	127
 17154  006FEA  1403               	andwf	i2___ftneg@f1+2,w,c
 17155  006FEC  1002               	iorwf	i2___ftneg@f1+1,w,c
 17156  006FEE  1001               	iorwf	i2___ftneg@f1,w,c
 17157  006FF0  B4D8               	btfsc	status,2,c
 17158  006FF2  D006               	goto	i2l790
 17159  006FF4  0E00               	movlw	0
 17160  006FF6  1A01               	xorwf	i2___ftneg@f1,f,c
 17161  006FF8  0E00               	movlw	0
 17162  006FFA  1A02               	xorwf	i2___ftneg@f1+1,f,c
 17163  006FFC  0E80               	movlw	128
 17164  006FFE  1A03               	xorwf	i2___ftneg@f1+2,f,c
 17165  007000                     i2l790:
 17166  007000  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 17167  007004  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 17168  007008  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 17169  00700C  0012               	return	
 17170  00700E                     __end_ofi2___ftneg:
 17171                           	opt stack 0
 17172                           pclatu	equ	0xFFB
 17173                           pclath	equ	0xFFA
 17174                           tblptru	equ	0xFF8
 17175                           tblptrh	equ	0xFF7
 17176                           tblptrl	equ	0xFF6
 17177                           tablat	equ	0xFF5
 17178                           prodh	equ	0xFF4
 17179                           prodl	equ	0xFF3
 17180                           intcon	equ	0xFF2
 17181                           intcon3	equ	0xFF0
 17182                           indf0	equ	0xFEF
 17183                           fsr0h	equ	0xFEA
 17184                           fsr0l	equ	0xFE9
 17185                           wreg	equ	0xFE8
 17186                           fsr1h	equ	0xFE2
 17187                           fsr1l	equ	0xFE1
 17188                           indf2	equ	0xFDF
 17189                           postinc2	equ	0xFDE
 17190                           postdec2	equ	0xFDD
 17191                           fsr2h	equ	0xFDA
 17192                           fsr2l	equ	0xFD9
 17193                           status	equ	0xFD8
 17194                           
 17195 ;; *************** function i2___asftsub *****************
 17196 ;; Defined at:
 17197 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.31\sources\pic18\asftsub.c"
 17198 ;; Parameters:    Size  Location     Type
 17199 ;;  f1p             2   26[COMRAM] PTR float 
 17200 ;;		 -> sprintf@fval(3), 
 17201 ;;  f2              3   28[COMRAM] float 
 17202 ;; Auto vars:     Size  Location     Type
 17203 ;;		None
 17204 ;; Return value:  Size  Location     Type
 17205 ;;                  3   26[COMRAM] float 
 17206 ;; Registers used:
 17207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17208 ;; Tracked objects:
 17209 ;;		On entry : 0/0
 17210 ;;		On exit  : 0/0
 17211 ;;		Unchanged: 0/0
 17212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17213 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17216 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17217 ;;Total ram usage:        5 bytes
 17218 ;; Hardware stack levels used:    1
 17219 ;; Hardware stack levels required when called:    3
 17220 ;; This function calls:
 17221 ;;		i2___ftsub
 17222 ;; This function is called by:
 17223 ;;		i2_sprintf
 17224 ;; This function uses a non-reentrant model
 17225 ;;
 17226                           
 17227                           	psect	text56
 17228  006DD4                     __ptext56:
 17229                           	opt stack 0
 17230  006DD4                     i2___asftsub:
 17231                           	opt stack 17
 17232                           
 17233                           ;	Return value of i2___asftsub is never used
 17234                           
 17235                           ;incstack = 0
 17236  006DD4  C01B  FFD9         	movff	i2___asftsub@f1p,fsr2l
 17237  006DD8  C01C  FFDA         	movff	i2___asftsub@f1p+1,fsr2h
 17238  006DDC  CFDE F015          	movff	postinc2,i2___ftsub@f1
 17239  006DE0  CFDE F016          	movff	postinc2,i2___ftsub@f1+1
 17240  006DE4  CFDD F017          	movff	postdec2,i2___ftsub@f1+2
 17241  006DE8  C01D  F018         	movff	i2___asftsub@f2,i2___ftsub@f2
 17242  006DEC  C01E  F019         	movff	i2___asftsub@f2+1,i2___ftsub@f2+1
 17243  006DF0  C01F  F01A         	movff	i2___asftsub@f2+2,i2___ftsub@f2+2
 17244  006DF4  EC7E  F037         	call	i2___ftsub	;wreg free
 17245  006DF8  C01B  FFD9         	movff	i2___asftsub@f1p,fsr2l
 17246  006DFC  C01C  FFDA         	movff	i2___asftsub@f1p+1,fsr2h
 17247  006E00  C015  FFDE         	movff	?i2___ftsub,postinc2
 17248  006E04  C016  FFDE         	movff	?i2___ftsub+1,postinc2
 17249  006E08  C017  FFDD         	movff	?i2___ftsub+2,postdec2
 17250  006E0C  52DD               	movf	postdec2,f,c
 17251  006E0E  0012               	return	
 17252  006E10                     __end_ofi2___asftsub:
 17253                           	opt stack 0
 17254                           pclatu	equ	0xFFB
 17255                           pclath	equ	0xFFA
 17256                           tblptru	equ	0xFF8
 17257                           tblptrh	equ	0xFF7
 17258                           tblptrl	equ	0xFF6
 17259                           tablat	equ	0xFF5
 17260                           prodh	equ	0xFF4
 17261                           prodl	equ	0xFF3
 17262                           intcon	equ	0xFF2
 17263                           intcon3	equ	0xFF0
 17264                           indf0	equ	0xFEF
 17265                           fsr0h	equ	0xFEA
 17266                           fsr0l	equ	0xFE9
 17267                           wreg	equ	0xFE8
 17268                           fsr1h	equ	0xFE2
 17269                           fsr1l	equ	0xFE1
 17270                           indf2	equ	0xFDF
 17271                           postinc2	equ	0xFDE
 17272                           postdec2	equ	0xFDD
 17273                           fsr2h	equ	0xFDA
 17274                           fsr2l	equ	0xFD9
 17275                           status	equ	0xFD8
 17276                           
 17277 ;; *************** function i2___ftsub *****************
 17278 ;; Defined at:
 17279 ;;		line 20 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftsub.c"
 17280 ;; Parameters:    Size  Location     Type
 17281 ;;  f1              3   20[COMRAM] float 
 17282 ;;  f2              3   23[COMRAM] float 
 17283 ;; Auto vars:     Size  Location     Type
 17284 ;;		None
 17285 ;; Return value:  Size  Location     Type
 17286 ;;                  3   20[COMRAM] float 
 17287 ;; Registers used:
 17288 ;;		wreg, status,2, status,0, cstack
 17289 ;; Tracked objects:
 17290 ;;		On entry : 0/0
 17291 ;;		On exit  : 0/0
 17292 ;;		Unchanged: 0/0
 17293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17294 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17298 ;;Total ram usage:        6 bytes
 17299 ;; Hardware stack levels used:    1
 17300 ;; Hardware stack levels required when called:    2
 17301 ;; This function calls:
 17302 ;;		i2___ftadd
 17303 ;; This function is called by:
 17304 ;;		i2___asftsub
 17305 ;; This function uses a non-reentrant model
 17306 ;;
 17307                           
 17308                           	psect	text57
 17309  006EFC                     __ptext57:
 17310                           	opt stack 0
 17311  006EFC                     i2___ftsub:
 17312                           	opt stack 17
 17313                           
 17314                           ;incstack = 0
 17315  006EFC  0E00               	movlw	0
 17316  006EFE  1A18               	xorwf	i2___ftsub@f2,f,c
 17317  006F00  0E00               	movlw	0
 17318  006F02  1A19               	xorwf	i2___ftsub@f2+1,f,c
 17319  006F04  0E80               	movlw	128
 17320  006F06  1A1A               	xorwf	i2___ftsub@f2+2,f,c
 17321  006F08  C015  F009         	movff	i2___ftsub@f1,i2___ftadd@f1
 17322  006F0C  C016  F00A         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 17323  006F10  C017  F00B         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 17324  006F14  C018  F00C         	movff	i2___ftsub@f2,i2___ftadd@f2
 17325  006F18  C019  F00D         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 17326  006F1C  C01A  F00E         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 17327  006F20  ECB4  F024         	call	i2___ftadd	;wreg free
 17328  006F24  C009  F015         	movff	?i2___ftadd,?i2___ftsub
 17329  006F28  C00A  F016         	movff	?i2___ftadd+1,?i2___ftsub+1
 17330  006F2C  C00B  F017         	movff	?i2___ftadd+2,?i2___ftsub+2
 17331  006F30  0012               	return	
 17332  006F32                     __end_ofi2___ftsub:
 17333                           	opt stack 0
 17334                           pclatu	equ	0xFFB
 17335                           pclath	equ	0xFFA
 17336                           tblptru	equ	0xFF8
 17337                           tblptrh	equ	0xFF7
 17338                           tblptrl	equ	0xFF6
 17339                           tablat	equ	0xFF5
 17340                           prodh	equ	0xFF4
 17341                           prodl	equ	0xFF3
 17342                           intcon	equ	0xFF2
 17343                           intcon3	equ	0xFF0
 17344                           indf0	equ	0xFEF
 17345                           fsr0h	equ	0xFEA
 17346                           fsr0l	equ	0xFE9
 17347                           wreg	equ	0xFE8
 17348                           fsr1h	equ	0xFE2
 17349                           fsr1l	equ	0xFE1
 17350                           indf2	equ	0xFDF
 17351                           postinc2	equ	0xFDE
 17352                           postdec2	equ	0xFDD
 17353                           fsr2h	equ	0xFDA
 17354                           fsr2l	equ	0xFD9
 17355                           status	equ	0xFD8
 17356                           
 17357 ;; *************** function i2___asftmul *****************
 17358 ;; Defined at:
 17359 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.31\sources\pic18\asftmul.c"
 17360 ;; Parameters:    Size  Location     Type
 17361 ;;  f1p             2   37[COMRAM] PTR float 
 17362 ;;		 -> sprintf@integ(3), 
 17363 ;;  f2              3   39[COMRAM] float 
 17364 ;; Auto vars:     Size  Location     Type
 17365 ;;		None
 17366 ;; Return value:  Size  Location     Type
 17367 ;;                  3   37[COMRAM] float 
 17368 ;; Registers used:
 17369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17370 ;; Tracked objects:
 17371 ;;		On entry : 0/0
 17372 ;;		On exit  : 0/0
 17373 ;;		Unchanged: 0/0
 17374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17375 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17378 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17379 ;;Total ram usage:        5 bytes
 17380 ;; Hardware stack levels used:    1
 17381 ;; Hardware stack levels required when called:    2
 17382 ;; This function calls:
 17383 ;;		i2___ftmul
 17384 ;; This function is called by:
 17385 ;;		i2_sprintf
 17386 ;; This function uses a non-reentrant model
 17387 ;;
 17388                           
 17389                           	psect	text58
 17390  006E10                     __ptext58:
 17391                           	opt stack 0
 17392  006E10                     i2___asftmul:
 17393                           	opt stack 18
 17394                           
 17395                           ;	Return value of i2___asftmul is never used
 17396                           
 17397                           ;incstack = 0
 17398  006E10  C026  FFD9         	movff	i2___asftmul@f1p,fsr2l
 17399  006E14  C027  FFDA         	movff	i2___asftmul@f1p+1,fsr2h
 17400  006E18  CFDE F017          	movff	postinc2,i2___ftmul@f1
 17401  006E1C  CFDE F018          	movff	postinc2,i2___ftmul@f1+1
 17402  006E20  CFDD F019          	movff	postdec2,i2___ftmul@f1+2
 17403  006E24  C028  F01A         	movff	i2___asftmul@f2,i2___ftmul@f2
 17404  006E28  C029  F01B         	movff	i2___asftmul@f2+1,i2___ftmul@f2+1
 17405  006E2C  C02A  F01C         	movff	i2___asftmul@f2+2,i2___ftmul@f2+2
 17406  006E30  EC6C  F02E         	call	i2___ftmul	;wreg free
 17407  006E34  C026  FFD9         	movff	i2___asftmul@f1p,fsr2l
 17408  006E38  C027  FFDA         	movff	i2___asftmul@f1p+1,fsr2h
 17409  006E3C  C017  FFDE         	movff	?i2___ftmul,postinc2
 17410  006E40  C018  FFDE         	movff	?i2___ftmul+1,postinc2
 17411  006E44  C019  FFDD         	movff	?i2___ftmul+2,postdec2
 17412  006E48  52DD               	movf	postdec2,f,c
 17413  006E4A  0012               	return	
 17414  006E4C                     __end_ofi2___asftmul:
 17415                           	opt stack 0
 17416                           pclatu	equ	0xFFB
 17417                           pclath	equ	0xFFA
 17418                           tblptru	equ	0xFF8
 17419                           tblptrh	equ	0xFF7
 17420                           tblptrl	equ	0xFF6
 17421                           tablat	equ	0xFF5
 17422                           prodh	equ	0xFF4
 17423                           prodl	equ	0xFF3
 17424                           intcon	equ	0xFF2
 17425                           intcon3	equ	0xFF0
 17426                           indf0	equ	0xFEF
 17427                           fsr0h	equ	0xFEA
 17428                           fsr0l	equ	0xFE9
 17429                           wreg	equ	0xFE8
 17430                           fsr1h	equ	0xFE2
 17431                           fsr1l	equ	0xFE1
 17432                           indf2	equ	0xFDF
 17433                           postinc2	equ	0xFDE
 17434                           postdec2	equ	0xFDD
 17435                           fsr2h	equ	0xFDA
 17436                           fsr2l	equ	0xFD9
 17437                           status	equ	0xFD8
 17438                           
 17439 ;; *************** function i2___asftadd *****************
 17440 ;; Defined at:
 17441 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.31\sources\pic18\asftadd.c"
 17442 ;; Parameters:    Size  Location     Type
 17443 ;;  f1p             2   47[COMRAM] PTR float 
 17444 ;;		 -> sprintf@fval(3), readDistance@a(3), 
 17445 ;;  f2              3   49[COMRAM] float 
 17446 ;; Auto vars:     Size  Location     Type
 17447 ;;		None
 17448 ;; Return value:  Size  Location     Type
 17449 ;;                  3   47[COMRAM] float 
 17450 ;; Registers used:
 17451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17452 ;; Tracked objects:
 17453 ;;		On entry : 0/0
 17454 ;;		On exit  : 0/0
 17455 ;;		Unchanged: 0/0
 17456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17457 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17460 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17461 ;;Total ram usage:        5 bytes
 17462 ;; Hardware stack levels used:    1
 17463 ;; Hardware stack levels required when called:    2
 17464 ;; This function calls:
 17465 ;;		i2___ftadd
 17466 ;; This function is called by:
 17467 ;;		i2_sprintf
 17468 ;; This function uses a non-reentrant model
 17469 ;;
 17470                           
 17471                           	psect	text59
 17472  006E4C                     __ptext59:
 17473                           	opt stack 0
 17474  006E4C                     i2___asftadd:
 17475                           	opt stack 18
 17476                           
 17477                           ;	Return value of i2___asftadd is never used
 17478                           
 17479                           ;incstack = 0
 17480  006E4C  C030  FFD9         	movff	i2___asftadd@f1p,fsr2l
 17481  006E50  C031  FFDA         	movff	i2___asftadd@f1p+1,fsr2h
 17482  006E54  CFDE F009          	movff	postinc2,i2___ftadd@f1
 17483  006E58  CFDE F00A          	movff	postinc2,i2___ftadd@f1+1
 17484  006E5C  CFDD F00B          	movff	postdec2,i2___ftadd@f1+2
 17485  006E60  C032  F00C         	movff	i2___asftadd@f2,i2___ftadd@f2
 17486  006E64  C033  F00D         	movff	i2___asftadd@f2+1,i2___ftadd@f2+1
 17487  006E68  C034  F00E         	movff	i2___asftadd@f2+2,i2___ftadd@f2+2
 17488  006E6C  ECB4  F024         	call	i2___ftadd	;wreg free
 17489  006E70  C030  FFD9         	movff	i2___asftadd@f1p,fsr2l
 17490  006E74  C031  FFDA         	movff	i2___asftadd@f1p+1,fsr2h
 17491  006E78  C009  FFDE         	movff	?i2___ftadd,postinc2
 17492  006E7C  C00A  FFDE         	movff	?i2___ftadd+1,postinc2
 17493  006E80  C00B  FFDD         	movff	?i2___ftadd+2,postdec2
 17494  006E84  52DD               	movf	postdec2,f,c
 17495  006E86  0012               	return	
 17496  006E88                     __end_ofi2___asftadd:
 17497                           	opt stack 0
 17498                           pclatu	equ	0xFFB
 17499                           pclath	equ	0xFFA
 17500                           tblptru	equ	0xFF8
 17501                           tblptrh	equ	0xFF7
 17502                           tblptrl	equ	0xFF6
 17503                           tablat	equ	0xFF5
 17504                           prodh	equ	0xFF4
 17505                           prodl	equ	0xFF3
 17506                           intcon	equ	0xFF2
 17507                           intcon3	equ	0xFF0
 17508                           indf0	equ	0xFEF
 17509                           fsr0h	equ	0xFEA
 17510                           fsr0l	equ	0xFE9
 17511                           wreg	equ	0xFE8
 17512                           fsr1h	equ	0xFE2
 17513                           fsr1l	equ	0xFE1
 17514                           indf2	equ	0xFDF
 17515                           postinc2	equ	0xFDE
 17516                           postdec2	equ	0xFDD
 17517                           fsr2h	equ	0xFDA
 17518                           fsr2l	equ	0xFD9
 17519                           status	equ	0xFD8
 17520                           
 17521 ;; *************** function i2_lcdWriteStrC *****************
 17522 ;; Defined at:
 17523 ;;		line 130 in file "lcd.c"
 17524 ;; Parameters:    Size  Location     Type
 17525 ;;  s               2    3[COMRAM] PTR const unsigned char 
 17526 ;;		 -> STR_10(14), STR_9(9), showAccelerometerVal@buffer(10), STR_5(15), 
 17527 ;;		 -> showTempLight@buffer(10), showDistance@buffer(10), STR_1(18), 
 17528 ;; Auto vars:     Size  Location     Type
 17529 ;;		None
 17530 ;; Return value:  Size  Location     Type
 17531 ;;		None               void
 17532 ;; Registers used:
 17533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17534 ;; Tracked objects:
 17535 ;;		On entry : 0/0
 17536 ;;		On exit  : 0/0
 17537 ;;		Unchanged: 0/0
 17538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17543 ;;Total ram usage:        2 bytes
 17544 ;; Hardware stack levels used:    1
 17545 ;; Hardware stack levels required when called:    3
 17546 ;; This function calls:
 17547 ;;		i2_lcdWriteChar
 17548 ;; This function is called by:
 17549 ;;		_showAccelerometerVal
 17550 ;; This function uses a non-reentrant model
 17551 ;;
 17552                           
 17553                           	psect	text60
 17554  006B22                     __ptext60:
 17555                           	opt stack 0
 17556  006B22                     i2_lcdWriteStrC:
 17557                           	opt stack 18
 17558                           
 17559                           ;lcd.c: 132: while(*s) lcdWriteChar(*s++);
 17560                           
 17561                           ;incstack = 0
 17562  006B22  D015               	goto	i2l7959
 17563  006B24                     i2l7955:
 17564  006B24  C004  FFF6         	movff	i2lcdWriteStrC@s,tblptrl
 17565  006B28  C005  FFF7         	movff	i2lcdWriteStrC@s+1,tblptrh
 17566  006B2C  0E00               	movlw	low (__smallconst shr (0+16))
 17567  006B2E  6EF8               	movwf	tblptru,c
 17568  006B30  0E0E               	movlw	(high __ramtop+-1)
 17569  006B32  64F7               	cpfsgt	tblptrh,c
 17570  006B34  D003               	bra	i2u633_47
 17571  006B36  0008               	tblrd		*
 17572  006B38  50F5               	movf	tablat,w,c
 17573  006B3A  D005               	bra	i2u633_40
 17574  006B3C                     i2u633_47:
 17575  006B3C  CFF6 FFE9          	movff	tblptrl,fsr0l
 17576  006B40  CFF7 FFEA          	movff	tblptrh,fsr0h
 17577  006B44  50EF               	movf	indf0,w,c
 17578  006B46                     i2u633_40:
 17579  006B46  EC2D  F038         	call	i2_lcdWriteChar
 17580  006B4A  4A04               	infsnz	i2lcdWriteStrC@s,f,c
 17581  006B4C  2A05               	incf	i2lcdWriteStrC@s+1,f,c
 17582  006B4E                     i2l7959:
 17583  006B4E  C004  FFF6         	movff	i2lcdWriteStrC@s,tblptrl
 17584  006B52  C005  FFF7         	movff	i2lcdWriteStrC@s+1,tblptrh
 17585  006B56  0E00               	movlw	low (__smallconst shr (0+16))
 17586  006B58  6EF8               	movwf	tblptru,c
 17587  006B5A  0E0E               	movlw	(high __ramtop+-1)
 17588  006B5C  64F7               	cpfsgt	tblptrh,c
 17589  006B5E  D003               	bra	i2u634_47
 17590  006B60  0008               	tblrd		*
 17591  006B62  50F5               	movf	tablat,w,c
 17592  006B64  D005               	bra	i2u634_40
 17593  006B66                     i2u634_47:
 17594  006B66  CFF6 FFE9          	movff	tblptrl,fsr0l
 17595  006B6A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17596  006B6E  50EF               	movf	indf0,w,c
 17597  006B70                     i2u634_40:
 17598  006B70  0900               	iorlw	0
 17599  006B72  B4D8               	btfsc	status,2,c
 17600  006B74  0012               	return	
 17601  006B76  D7D6               	goto	i2l7955
 17602  006B78                     __end_ofi2_lcdWriteStrC:
 17603                           	opt stack 0
 17604                           pclatu	equ	0xFFB
 17605                           pclath	equ	0xFFA
 17606                           tblptru	equ	0xFF8
 17607                           tblptrh	equ	0xFF7
 17608                           tblptrl	equ	0xFF6
 17609                           tablat	equ	0xFF5
 17610                           prodh	equ	0xFF4
 17611                           prodl	equ	0xFF3
 17612                           intcon	equ	0xFF2
 17613                           intcon3	equ	0xFF0
 17614                           indf0	equ	0xFEF
 17615                           fsr0h	equ	0xFEA
 17616                           fsr0l	equ	0xFE9
 17617                           wreg	equ	0xFE8
 17618                           fsr1h	equ	0xFE2
 17619                           fsr1l	equ	0xFE1
 17620                           indf2	equ	0xFDF
 17621                           postinc2	equ	0xFDE
 17622                           postdec2	equ	0xFDD
 17623                           fsr2h	equ	0xFDA
 17624                           fsr2l	equ	0xFD9
 17625                           status	equ	0xFD8
 17626                           
 17627 ;; *************** function i2_lcdWriteChar *****************
 17628 ;; Defined at:
 17629 ;;		line 43 in file "lcd.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;  n               1    wreg     unsigned char 
 17632 ;; Auto vars:     Size  Location     Type
 17633 ;;  n               1    2[COMRAM] unsigned char 
 17634 ;; Return value:  Size  Location     Type
 17635 ;;		None               void
 17636 ;; Registers used:
 17637 ;;		wreg, status,2, status,0, cstack
 17638 ;; Tracked objects:
 17639 ;;		On entry : 0/0
 17640 ;;		On exit  : 0/0
 17641 ;;		Unchanged: 0/0
 17642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17647 ;;Total ram usage:        1 bytes
 17648 ;; Hardware stack levels used:    1
 17649 ;; Hardware stack levels required when called:    2
 17650 ;; This function calls:
 17651 ;;		i2_writeByte
 17652 ;; This function is called by:
 17653 ;;		_showAccelerometerVal
 17654 ;;		i2_lcdWriteStrC
 17655 ;; This function uses a non-reentrant model
 17656 ;;
 17657                           
 17658                           	psect	text61
 17659  00705A                     __ptext61:
 17660                           	opt stack 0
 17661  00705A                     i2_lcdWriteChar:
 17662                           	opt stack 18
 17663                           
 17664                           ;incstack = 0
 17665                           ;i2lcdWriteChar@n stored from wreg
 17666  00705A  CFE8 F003          	movff	wreg,i2lcdWriteChar@n
 17667                           
 17668                           ;lcd.c: 46: LATEbits.LATE0 = 1;
 17669  00705E  808D               	bsf	3981,0,c	;volatile
 17670                           
 17671                           ;lcd.c: 48: writeByte(n);
 17672  007060  5003               	movf	i2lcdWriteChar@n,w,c
 17673  007062  EC22  F038         	call	i2_writeByte
 17674                           
 17675                           ;lcd.c: 51: _delay((unsigned long)((43)*(12000000/4000000.0)));
 17676  007066  0E2B               	movlw	43
 17677  007068                     i2u746_47:
 17678  007068  2EE8               	decfsz	wreg,f,c
 17679  00706A  D7FE               	goto	i2u746_47
 17680  00706C  0012               	return	
 17681  00706E                     __end_ofi2_lcdWriteChar:
 17682                           	opt stack 0
 17683                           pclatu	equ	0xFFB
 17684                           pclath	equ	0xFFA
 17685                           tblptru	equ	0xFF8
 17686                           tblptrh	equ	0xFF7
 17687                           tblptrl	equ	0xFF6
 17688                           tablat	equ	0xFF5
 17689                           prodh	equ	0xFF4
 17690                           prodl	equ	0xFF3
 17691                           intcon	equ	0xFF2
 17692                           intcon3	equ	0xFF0
 17693                           indf0	equ	0xFEF
 17694                           fsr0h	equ	0xFEA
 17695                           fsr0l	equ	0xFE9
 17696                           wreg	equ	0xFE8
 17697                           fsr1h	equ	0xFE2
 17698                           fsr1l	equ	0xFE1
 17699                           indf2	equ	0xFDF
 17700                           postinc2	equ	0xFDE
 17701                           postdec2	equ	0xFDD
 17702                           fsr2h	equ	0xFDA
 17703                           fsr2l	equ	0xFD9
 17704                           status	equ	0xFD8
 17705                           
 17706 ;; *************** function i2_lcdSetPos *****************
 17707 ;; Defined at:
 17708 ;;		line 115 in file "lcd.c"
 17709 ;; Parameters:    Size  Location     Type
 17710 ;;  x               1    wreg     unsigned char 
 17711 ;;  y               1    6[COMRAM] unsigned char 
 17712 ;; Auto vars:     Size  Location     Type
 17713 ;;  x               1    8[COMRAM] unsigned char 
 17714 ;;  lcdSetPos       1    7[COMRAM] unsigned char 
 17715 ;; Return value:  Size  Location     Type
 17716 ;;		None               void
 17717 ;; Registers used:
 17718 ;;		wreg, status,2, status,0, cstack
 17719 ;; Tracked objects:
 17720 ;;		On entry : 0/0
 17721 ;;		On exit  : 0/0
 17722 ;;		Unchanged: 0/0
 17723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17724 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17727 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17728 ;;Total ram usage:        3 bytes
 17729 ;; Hardware stack levels used:    1
 17730 ;; Hardware stack levels required when called:    3
 17731 ;; This function calls:
 17732 ;;		i2_lcdWriteCmd
 17733 ;; This function is called by:
 17734 ;;		_showAccelerometerVal
 17735 ;; This function uses a non-reentrant model
 17736 ;;
 17737                           
 17738                           	psect	text62
 17739  006C02                     __ptext62:
 17740                           	opt stack 0
 17741  006C02                     i2_lcdSetPos:
 17742                           	opt stack 18
 17743                           
 17744                           ;incstack = 0
 17745                           ;i2lcdSetPos@x stored from wreg
 17746  006C02  CFE8 F009          	movff	wreg,i2lcdSetPos@x
 17747                           
 17748                           ;lcd.c: 117: unsigned char p;
 17749                           ;lcd.c: 119: switch(y)
 17750  006C06  D00D               	goto	i2l7947
 17751  006C08                     i2l7937:
 17752  006C08  C009  F008         	movff	i2lcdSetPos@x,i2lcdSetPos@p
 17753  006C0C  D017               	goto	i2l7949
 17754  006C0E                     i2l7939:
 17755  006C0E  5009               	movf	i2lcdSetPos@x,w,c
 17756  006C10  0F40               	addlw	64
 17757  006C12  D005               	goto	L36
 17758  006C14                     i2l7941:
 17759  006C14  5009               	movf	i2lcdSetPos@x,w,c
 17760  006C16  0F14               	addlw	20
 17761  006C18  D002               	goto	L36
 17762  006C1A                     i2l7943:
 17763  006C1A  5009               	movf	i2lcdSetPos@x,w,c
 17764  006C1C  0F54               	addlw	84
 17765  006C1E                     L36:
 17766  006C1E  6E08               	movwf	i2lcdSetPos@p,c
 17767  006C20  D00D               	goto	i2l7949
 17768  006C22                     i2l7947:
 17769  006C22  5007               	movf	i2lcdSetPos@y,w,c
 17770                           
 17771                           ; Switch size 1, requested type "space"
 17772                           ; Number of cases is 4, Range of values is 0 to 3
 17773                           ; switch strategies available:
 17774                           ; Name         Instructions Cycles
 17775                           ; simple_byte           13     7 (average)
 17776                           ;	Chosen strategy is simple_byte
 17777  006C24  0A00               	xorlw	0	; case 0
 17778  006C26  B4D8               	btfsc	status,2,c
 17779  006C28  D7EF               	goto	i2l7937
 17780  006C2A  0A01               	xorlw	1	; case 1
 17781  006C2C  B4D8               	btfsc	status,2,c
 17782  006C2E  D7EF               	goto	i2l7939
 17783  006C30  0A03               	xorlw	3	; case 2
 17784  006C32  B4D8               	btfsc	status,2,c
 17785  006C34  D7EF               	goto	i2l7941
 17786  006C36  0A01               	xorlw	1	; case 3
 17787  006C38  B4D8               	btfsc	status,2,c
 17788  006C3A  D7EF               	goto	i2l7943
 17789  006C3C                     i2l7949:
 17790                           
 17791                           ;lcd.c: 126: p |= 0x80;
 17792  006C3C  8E08               	bsf	i2lcdSetPos@p,7,c
 17793                           
 17794                           ;lcd.c: 127: lcdWriteCmd(p);
 17795  006C3E  5008               	movf	i2lcdSetPos@p,w,c
 17796  006C40  EC23  F036         	call	i2_lcdWriteCmd
 17797  006C44  0012               	return	
 17798  006C46                     __end_ofi2_lcdSetPos:
 17799                           	opt stack 0
 17800                           pclatu	equ	0xFFB
 17801                           pclath	equ	0xFFA
 17802                           tblptru	equ	0xFF8
 17803                           tblptrh	equ	0xFF7
 17804                           tblptrl	equ	0xFF6
 17805                           tablat	equ	0xFF5
 17806                           prodh	equ	0xFF4
 17807                           prodl	equ	0xFF3
 17808                           intcon	equ	0xFF2
 17809                           intcon3	equ	0xFF0
 17810                           indf0	equ	0xFEF
 17811                           fsr0h	equ	0xFEA
 17812                           fsr0l	equ	0xFE9
 17813                           wreg	equ	0xFE8
 17814                           fsr1h	equ	0xFE2
 17815                           fsr1l	equ	0xFE1
 17816                           indf2	equ	0xFDF
 17817                           postinc2	equ	0xFDE
 17818                           postdec2	equ	0xFDD
 17819                           fsr2h	equ	0xFDA
 17820                           fsr2l	equ	0xFD9
 17821                           status	equ	0xFD8
 17822                           
 17823 ;; *************** function i2_lcdClear *****************
 17824 ;; Defined at:
 17825 ;;		line 110 in file "lcd.c"
 17826 ;; Parameters:    Size  Location     Type
 17827 ;;		None
 17828 ;; Auto vars:     Size  Location     Type
 17829 ;;		None
 17830 ;; Return value:  Size  Location     Type
 17831 ;;		None               void
 17832 ;; Registers used:
 17833 ;;		wreg, status,2, status,0, cstack
 17834 ;; Tracked objects:
 17835 ;;		On entry : 0/0
 17836 ;;		On exit  : 0/0
 17837 ;;		Unchanged: 0/0
 17838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17843 ;;Total ram usage:        0 bytes
 17844 ;; Hardware stack levels used:    1
 17845 ;; Hardware stack levels required when called:    3
 17846 ;; This function calls:
 17847 ;;		i2_lcdWriteCmd
 17848 ;; This function is called by:
 17849 ;;		_showAccelerometerVal
 17850 ;; This function uses a non-reentrant model
 17851 ;;
 17852                           
 17853                           	psect	text63
 17854  007076                     __ptext63:
 17855                           	opt stack 0
 17856  007076                     i2_lcdClear:
 17857                           	opt stack 18
 17858                           
 17859                           ;lcd.c: 112: lcdWriteCmd(0x01);
 17860                           
 17861                           ;incstack = 0
 17862  007076  0E01               	movlw	1
 17863  007078  EC23  F036         	call	i2_lcdWriteCmd
 17864  00707C  0012               	return	
 17865  00707E                     __end_ofi2_lcdClear:
 17866                           	opt stack 0
 17867                           pclatu	equ	0xFFB
 17868                           pclath	equ	0xFFA
 17869                           tblptru	equ	0xFF8
 17870                           tblptrh	equ	0xFF7
 17871                           tblptrl	equ	0xFF6
 17872                           tablat	equ	0xFF5
 17873                           prodh	equ	0xFF4
 17874                           prodl	equ	0xFF3
 17875                           intcon	equ	0xFF2
 17876                           intcon3	equ	0xFF0
 17877                           indf0	equ	0xFEF
 17878                           fsr0h	equ	0xFEA
 17879                           fsr0l	equ	0xFE9
 17880                           wreg	equ	0xFE8
 17881                           fsr1h	equ	0xFE2
 17882                           fsr1l	equ	0xFE1
 17883                           indf2	equ	0xFDF
 17884                           postinc2	equ	0xFDE
 17885                           postdec2	equ	0xFDD
 17886                           fsr2h	equ	0xFDA
 17887                           fsr2l	equ	0xFD9
 17888                           status	equ	0xFD8
 17889                           
 17890 ;; *************** function i2_lcdWriteCmd *****************
 17891 ;; Defined at:
 17892 ;;		line 30 in file "lcd.c"
 17893 ;; Parameters:    Size  Location     Type
 17894 ;;  n               1    wreg     unsigned char 
 17895 ;; Auto vars:     Size  Location     Type
 17896 ;;  n               1    3[COMRAM] unsigned char 
 17897 ;;  lcdWriteCmd     2    4[COMRAM] int 
 17898 ;; Return value:  Size  Location     Type
 17899 ;;		None               void
 17900 ;; Registers used:
 17901 ;;		wreg, status,2, status,0, cstack
 17902 ;; Tracked objects:
 17903 ;;		On entry : 0/0
 17904 ;;		On exit  : 0/0
 17905 ;;		Unchanged: 0/0
 17906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17908 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17910 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17911 ;;Total ram usage:        4 bytes
 17912 ;; Hardware stack levels used:    1
 17913 ;; Hardware stack levels required when called:    2
 17914 ;; This function calls:
 17915 ;;		i2_writeByte
 17916 ;; This function is called by:
 17917 ;;		i2_lcdClear
 17918 ;;		i2_lcdSetPos
 17919 ;; This function uses a non-reentrant model
 17920 ;;
 17921                           
 17922                           	psect	text64
 17923  006C46                     __ptext64:
 17924                           	opt stack 0
 17925  006C46                     i2_lcdWriteCmd:
 17926                           	opt stack 18
 17927                           
 17928                           ;incstack = 0
 17929                           ;i2lcdWriteCmd@n stored from wreg
 17930  006C46  CFE8 F004          	movff	wreg,i2lcdWriteCmd@n
 17931                           
 17932                           ;lcd.c: 33: LATEbits.LATE0 = 0;
 17933  006C4A  908D               	bcf	3981,0,c	;volatile
 17934                           
 17935                           ;lcd.c: 35: writeByte(n);
 17936  006C4C  5004               	movf	i2lcdWriteCmd@n,w,c
 17937  006C4E  EC22  F038         	call	i2_writeByte
 17938                           
 17939                           ;lcd.c: 39: if (!(n & 0xFC)) for(int i = 0; i < 100; i++) _delay((unsigned long)((16)*(1
      +                          2000000/4000000.0)));
 17940  006C52  C004  F003         	movff	i2lcdWriteCmd@n,??i2_lcdWriteCmd
 17941  006C56  0EFC               	movlw	252
 17942  006C58  1603               	andwf	??i2_lcdWriteCmd,f,c
 17943  006C5A  A4D8               	btfss	status,2,c
 17944  006C5C  D012               	goto	i2l7249
 17945  006C5E  0E00               	movlw	0
 17946  006C60  6E06               	movwf	i2lcdWriteCmd@i+1,c
 17947  006C62  0E00               	movlw	0
 17948  006C64  6E05               	movwf	i2lcdWriteCmd@i,c
 17949  006C66  5006               	movf	i2lcdWriteCmd@i+1,w,c
 17950  006C68  0A80               	xorlw	128
 17951  006C6A  0F80               	addlw	-128
 17952  006C6C  0E64               	movlw	100
 17953  006C6E  B4D8               	btfsc	status,2,c
 17954  006C70  5C05               	subwf	i2lcdWriteCmd@i,w,c
 17955  006C72  B0D8               	btfsc	status,0,c
 17956  006C74  0012               	return	
 17957  006C76  0E10               	movlw	16
 17958  006C78                     i2u747_47:
 17959  006C78  2EE8               	decfsz	wreg,f,c
 17960  006C7A  D7FE               	goto	i2u747_47
 17961  006C7C  4A05               	infsnz	i2lcdWriteCmd@i,f,c
 17962  006C7E  2A06               	incf	i2lcdWriteCmd@i+1,f,c
 17963  006C80  D7F2               	goto	L37
 17964  006C82                     i2l7249:
 17965                           
 17966                           ;lcd.c: 40: else _delay((unsigned long)((43)*(12000000/4000000.0)));
 17967  006C82  0E2B               	movlw	43
 17968  006C84                     i2u748_47:
 17969  006C84  2EE8               	decfsz	wreg,f,c
 17970  006C86  D7FE               	goto	i2u748_47
 17971  006C88  0012               	return	
 17972  006C8A                     __end_ofi2_lcdWriteCmd:
 17973                           	opt stack 0
 17974                           pclatu	equ	0xFFB
 17975                           pclath	equ	0xFFA
 17976                           tblptru	equ	0xFF8
 17977                           tblptrh	equ	0xFF7
 17978                           tblptrl	equ	0xFF6
 17979                           tablat	equ	0xFF5
 17980                           prodh	equ	0xFF4
 17981                           prodl	equ	0xFF3
 17982                           intcon	equ	0xFF2
 17983                           intcon3	equ	0xFF0
 17984                           indf0	equ	0xFEF
 17985                           fsr0h	equ	0xFEA
 17986                           fsr0l	equ	0xFE9
 17987                           wreg	equ	0xFE8
 17988                           fsr1h	equ	0xFE2
 17989                           fsr1l	equ	0xFE1
 17990                           indf2	equ	0xFDF
 17991                           postinc2	equ	0xFDE
 17992                           postdec2	equ	0xFDD
 17993                           fsr2h	equ	0xFDA
 17994                           fsr2l	equ	0xFD9
 17995                           status	equ	0xFD8
 17996                           
 17997 ;; *************** function i2_writeByte *****************
 17998 ;; Defined at:
 17999 ;;		line 22 in file "lcd.c"
 18000 ;; Parameters:    Size  Location     Type
 18001 ;;  n               1    wreg     unsigned char 
 18002 ;; Auto vars:     Size  Location     Type
 18003 ;;  n               1    1[COMRAM] unsigned char 
 18004 ;; Return value:  Size  Location     Type
 18005 ;;		None               void
 18006 ;; Registers used:
 18007 ;;		wreg, status,2, status,0, cstack
 18008 ;; Tracked objects:
 18009 ;;		On entry : 0/0
 18010 ;;		On exit  : 0/0
 18011 ;;		Unchanged: 0/0
 18012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18017 ;;Total ram usage:        1 bytes
 18018 ;; Hardware stack levels used:    1
 18019 ;; Hardware stack levels required when called:    1
 18020 ;; This function calls:
 18021 ;;		i2_writeDigit
 18022 ;; This function is called by:
 18023 ;;		i2_lcdWriteCmd
 18024 ;;		i2_lcdWriteChar
 18025 ;; This function uses a non-reentrant model
 18026 ;;
 18027                           
 18028                           	psect	text65
 18029  007044                     __ptext65:
 18030                           	opt stack 0
 18031  007044                     i2_writeByte:
 18032                           	opt stack 18
 18033                           
 18034                           ;incstack = 0
 18035                           ;i2writeByte@n stored from wreg
 18036  007044  CFE8 F002          	movff	wreg,i2writeByte@n
 18037                           
 18038                           ;lcd.c: 25: writeDigit(n >> 4);
 18039  007048  3802               	swapf	i2writeByte@n,w,c
 18040  00704A  0B0F               	andlw	15
 18041  00704C  EC99  F037         	call	i2_writeDigit
 18042                           
 18043                           ;lcd.c: 27: writeDigit(n & 0x0F);
 18044  007050  5002               	movf	i2writeByte@n,w,c
 18045  007052  0B0F               	andlw	15
 18046  007054  EC99  F037         	call	i2_writeDigit
 18047  007058  0012               	return	
 18048  00705A                     __end_ofi2_writeByte:
 18049                           	opt stack 0
 18050                           pclatu	equ	0xFFB
 18051                           pclath	equ	0xFFA
 18052                           tblptru	equ	0xFF8
 18053                           tblptrh	equ	0xFF7
 18054                           tblptrl	equ	0xFF6
 18055                           tablat	equ	0xFF5
 18056                           prodh	equ	0xFF4
 18057                           prodl	equ	0xFF3
 18058                           intcon	equ	0xFF2
 18059                           intcon3	equ	0xFF0
 18060                           indf0	equ	0xFEF
 18061                           fsr0h	equ	0xFEA
 18062                           fsr0l	equ	0xFE9
 18063                           wreg	equ	0xFE8
 18064                           fsr1h	equ	0xFE2
 18065                           fsr1l	equ	0xFE1
 18066                           indf2	equ	0xFDF
 18067                           postinc2	equ	0xFDE
 18068                           postdec2	equ	0xFDD
 18069                           fsr2h	equ	0xFDA
 18070                           fsr2l	equ	0xFD9
 18071                           status	equ	0xFD8
 18072                           
 18073 ;; *************** function i2_writeDigit *****************
 18074 ;; Defined at:
 18075 ;;		line 6 in file "lcd.c"
 18076 ;; Parameters:    Size  Location     Type
 18077 ;;  n               1    wreg     unsigned char 
 18078 ;; Auto vars:     Size  Location     Type
 18079 ;;  n               1    0[COMRAM] unsigned char 
 18080 ;; Return value:  Size  Location     Type
 18081 ;;		None               void
 18082 ;; Registers used:
 18083 ;;		wreg
 18084 ;; Tracked objects:
 18085 ;;		On entry : 0/0
 18086 ;;		On exit  : 0/0
 18087 ;;		Unchanged: 0/0
 18088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18093 ;;Total ram usage:        1 bytes
 18094 ;; Hardware stack levels used:    1
 18095 ;; This function calls:
 18096 ;;		Nothing
 18097 ;; This function is called by:
 18098 ;;		i2_writeByte
 18099 ;; This function uses a non-reentrant model
 18100 ;;
 18101                           
 18102                           	psect	text66
 18103  006F32                     __ptext66:
 18104                           	opt stack 0
 18105  006F32                     i2_writeDigit:
 18106                           	opt stack 18
 18107                           
 18108                           ;incstack = 0
 18109                           ;i2writeDigit@n stored from wreg
 18110  006F32  CFE8 F001          	movff	wreg,i2writeDigit@n
 18111                           
 18112                           ;lcd.c: 9: LATEbits.LATE1 = 1;
 18113  006F36  828D               	bsf	3981,1,c	;volatile
 18114                           
 18115                           ;lcd.c: 12: if (n & 0x01) LATDbits.LATD0 = 1; else LATDbits.LATD0 = 0;
 18116  006F38  A001               	btfss	i2writeDigit@n,0,c
 18117  006F3A  D002               	goto	i2l179
 18118  006F3C  808C               	bsf	3980,0,c	;volatile
 18119  006F3E  D001               	goto	i2l6271
 18120  006F40                     i2l179:
 18121  006F40  908C               	bcf	3980,0,c	;volatile
 18122  006F42                     i2l6271:
 18123                           
 18124                           ;lcd.c: 13: if (n & 0x02) LATDbits.LATD1 = 1; else LATDbits.LATD1 = 0;
 18125  006F42  A201               	btfss	i2writeDigit@n,1,c
 18126  006F44  D002               	goto	i2l181
 18127  006F46  828C               	bsf	3980,1,c	;volatile
 18128  006F48  D001               	goto	i2l6275
 18129  006F4A                     i2l181:
 18130  006F4A  928C               	bcf	3980,1,c	;volatile
 18131  006F4C                     i2l6275:
 18132                           
 18133                           ;lcd.c: 14: if (n & 0x04) LATDbits.LATD2 = 1; else LATDbits.LATD2 = 0;
 18134  006F4C  A401               	btfss	i2writeDigit@n,2,c
 18135  006F4E  D002               	goto	i2l183
 18136  006F50  848C               	bsf	3980,2,c	;volatile
 18137  006F52  D001               	goto	i2l6279
 18138  006F54                     i2l183:
 18139  006F54  948C               	bcf	3980,2,c	;volatile
 18140  006F56                     i2l6279:
 18141                           
 18142                           ;lcd.c: 15: if (n & 0x08) LATDbits.LATD3 = 1; else LATDbits.LATD3 = 0;
 18143  006F56  A601               	btfss	i2writeDigit@n,3,c
 18144  006F58  D002               	goto	i2l185
 18145  006F5A  868C               	bsf	3980,3,c	;volatile
 18146  006F5C  D001               	goto	i2l186
 18147  006F5E                     i2l185:
 18148  006F5E  968C               	bcf	3980,3,c	;volatile
 18149  006F60                     i2l186:
 18150                           
 18151                           ;lcd.c: 19: LATEbits.LATE1 = 0;
 18152  006F60  928D               	bcf	3981,1,c	;volatile
 18153  006F62  0012               	return	
 18154  006F64                     __end_ofi2_writeDigit:
 18155                           	opt stack 0
 18156                           pclatu	equ	0xFFB
 18157                           pclath	equ	0xFFA
 18158                           tblptru	equ	0xFF8
 18159                           tblptrh	equ	0xFF7
 18160                           tblptrl	equ	0xFF6
 18161                           tablat	equ	0xFF5
 18162                           prodh	equ	0xFF4
 18163                           prodl	equ	0xFF3
 18164                           intcon	equ	0xFF2
 18165                           intcon3	equ	0xFF0
 18166                           indf0	equ	0xFEF
 18167                           fsr0h	equ	0xFEA
 18168                           fsr0l	equ	0xFE9
 18169                           wreg	equ	0xFE8
 18170                           fsr1h	equ	0xFE2
 18171                           fsr1l	equ	0xFE1
 18172                           indf2	equ	0xFDF
 18173                           postinc2	equ	0xFDE
 18174                           postdec2	equ	0xFDD
 18175                           fsr2h	equ	0xFDA
 18176                           fsr2l	equ	0xFD9
 18177                           status	equ	0xFD8
 18178                           
 18179 ;; *************** function _single_axis_measure *****************
 18180 ;; Defined at:
 18181 ;;		line 186 in file "functions.c"
 18182 ;; Parameters:    Size  Location     Type
 18183 ;;  axis            2   63[COMRAM] unsigned int 
 18184 ;;  iteration       3   65[COMRAM] const float 
 18185 ;; Auto vars:     Size  Location     Type
 18186 ;;  axis_read       3   68[COMRAM] const float 
 18187 ;;  i               2   74[COMRAM] unsigned int 
 18188 ;;  axis_sum        3   76[COMRAM] float 
 18189 ;;  medium_value    3   71[COMRAM] const float 
 18190 ;; Return value:  Size  Location     Type
 18191 ;;                  3   63[COMRAM] float 
 18192 ;; Registers used:
 18193 ;;		wreg, status,2, status,0, cstack
 18194 ;; Tracked objects:
 18195 ;;		On entry : 0/0
 18196 ;;		On exit  : 0/0
 18197 ;;		Unchanged: 0/0
 18198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18199 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18200 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18202 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18203 ;;Total ram usage:       16 bytes
 18204 ;; Hardware stack levels used:    1
 18205 ;; Hardware stack levels required when called:    4
 18206 ;; This function calls:
 18207 ;;		___lwtoft
 18208 ;;		_read_accelerometer
 18209 ;;		_voltageToG
 18210 ;;		i2___ftadd
 18211 ;;		i2___ftdiv
 18212 ;;		i2___ftge
 18213 ;; This function is called by:
 18214 ;;		_showAccelerometerVal
 18215 ;; This function uses a non-reentrant model
 18216 ;;
 18217                           
 18218                           	psect	text67
 18219  005BD8                     __ptext67:
 18220                           	opt stack 0
 18221  005BD8                     _single_axis_measure:
 18222                           	opt stack 17
 18223                           
 18224                           ;functions.c: 187: float axis_sum = 0.0;
 18225                           
 18226                           ;incstack = 0
 18227  005BD8  0E00               	movlw	0
 18228  005BDA  6E4D               	movwf	single_axis_measure@axis_sum,c
 18229  005BDC  0E00               	movlw	0
 18230  005BDE  6E4E               	movwf	single_axis_measure@axis_sum+1,c
 18231  005BE0  0E00               	movlw	0
 18232  005BE2  6E4F               	movwf	single_axis_measure@axis_sum+2,c
 18233                           
 18234                           ;functions.c: 188: for (unsigned int i = 0; i < iteration; i++) {
 18235  005BE4  0E00               	movlw	0
 18236  005BE6  6E4C               	movwf	single_axis_measure@i+1,c
 18237  005BE8  0E00               	movlw	0
 18238  005BEA  6E4B               	movwf	single_axis_measure@i,c
 18239  005BEC  C04B  F009         	movff	single_axis_measure@i,___lwtoft@c
 18240  005BF0  C04C  F00A         	movff	single_axis_measure@i+1,___lwtoft@c+1
 18241  005BF4  ECC9  F037         	call	___lwtoft	;wreg free
 18242  005BF8  C009  F00E         	movff	?___lwtoft,i2___ftge@ff1
 18243  005BFC  C00A  F00F         	movff	?___lwtoft+1,i2___ftge@ff1+1
 18244  005C00  C00B  F010         	movff	?___lwtoft+2,i2___ftge@ff1+2
 18245  005C04  C042  F011         	movff	single_axis_measure@iteration,i2___ftge@ff2
 18246  005C08  C043  F012         	movff	single_axis_measure@iteration+1,i2___ftge@ff2+1
 18247  005C0C  C044  F013         	movff	single_axis_measure@iteration+2,i2___ftge@ff2+2
 18248  005C10  EC71  F033         	call	i2___ftge	;wreg free
 18249  005C14  B0D8               	btfsc	status,0,c
 18250  005C16  D037               	goto	i2l7907
 18251                           
 18252                           ;functions.c: 189: const float axis_read = read_accelerometer(axis);
 18253  005C18  C040  F03B         	movff	single_axis_measure@axis,read_accelerometer@axis
 18254  005C1C  C041  F03C         	movff	single_axis_measure@axis+1,read_accelerometer@axis+1
 18255  005C20  ECB2  F037         	call	_read_accelerometer	;wreg free
 18256  005C24  C03B  F045         	movff	?_read_accelerometer,single_axis_measure@axis_read
 18257  005C28  C03C  F046         	movff	?_read_accelerometer+1,single_axis_measure@axis_read+1
 18258  005C2C  C03D  F047         	movff	?_read_accelerometer+2,single_axis_measure@axis_read+2
 18259                           
 18260                           ;functions.c: 190: axis_sum = axis_sum + axis_read;
 18261  005C30  C04D  F009         	movff	single_axis_measure@axis_sum,i2___ftadd@f1
 18262  005C34  C04E  F00A         	movff	single_axis_measure@axis_sum+1,i2___ftadd@f1+1
 18263  005C38  C04F  F00B         	movff	single_axis_measure@axis_sum+2,i2___ftadd@f1+2
 18264  005C3C  C045  F00C         	movff	single_axis_measure@axis_read,i2___ftadd@f2
 18265  005C40  C046  F00D         	movff	single_axis_measure@axis_read+1,i2___ftadd@f2+1
 18266  005C44  C047  F00E         	movff	single_axis_measure@axis_read+2,i2___ftadd@f2+2
 18267  005C48  ECB4  F024         	call	i2___ftadd	;wreg free
 18268  005C4C  C009  F04D         	movff	?i2___ftadd,single_axis_measure@axis_sum
 18269  005C50  C00A  F04E         	movff	?i2___ftadd+1,single_axis_measure@axis_sum+1
 18270  005C54  C00B  F04F         	movff	?i2___ftadd+2,single_axis_measure@axis_sum+2
 18271  005C58  4A4B               	infsnz	single_axis_measure@i,f,c
 18272  005C5A  2A4C               	incf	single_axis_measure@i+1,f,c
 18273  005C5C  C04B  F009         	movff	single_axis_measure@i,___lwtoft@c
 18274  005C60  C04C  F00A         	movff	single_axis_measure@i+1,___lwtoft@c+1
 18275  005C64  ECC9  F037         	call	___lwtoft	;wreg free
 18276  005C68  C009  F00E         	movff	?___lwtoft,i2___ftge@ff1
 18277  005C6C  C00A  F00F         	movff	?___lwtoft+1,i2___ftge@ff1+1
 18278  005C70  C00B  F010         	movff	?___lwtoft+2,i2___ftge@ff1+2
 18279  005C74  C042  F011         	movff	single_axis_measure@iteration,i2___ftge@ff2
 18280  005C78  C043  F012         	movff	single_axis_measure@iteration+1,i2___ftge@ff2+1
 18281  005C7C  C044  F013         	movff	single_axis_measure@iteration+2,i2___ftge@ff2+2
 18282  005C80  EC71  F033         	call	i2___ftge	;wreg free
 18283  005C84  D7C7               	goto	L38
 18284  005C86                     i2l7907:
 18285                           
 18286                           ;functions.c: 191: }
 18287                           ;functions.c: 193: const float medium_value = axis_sum / iteration;
 18288  005C86  C04D  F026         	movff	single_axis_measure@axis_sum,i2___ftdiv@f1
 18289  005C8A  C04E  F027         	movff	single_axis_measure@axis_sum+1,i2___ftdiv@f1+1
 18290  005C8E  C04F  F028         	movff	single_axis_measure@axis_sum+2,i2___ftdiv@f1+2
 18291  005C92  C042  F029         	movff	single_axis_measure@iteration,i2___ftdiv@f2
 18292  005C96  C043  F02A         	movff	single_axis_measure@iteration+1,i2___ftdiv@f2+1
 18293  005C9A  C044  F02B         	movff	single_axis_measure@iteration+2,i2___ftdiv@f2+2
 18294  005C9E  ECDD  F02F         	call	i2___ftdiv	;wreg free
 18295  005CA2  C026  F048         	movff	?i2___ftdiv,single_axis_measure@medium_value
 18296  005CA6  C027  F049         	movff	?i2___ftdiv+1,single_axis_measure@medium_value+1
 18297  005CAA  C028  F04A         	movff	?i2___ftdiv+2,single_axis_measure@medium_value+2
 18298                           
 18299                           ;functions.c: 194: axis_sum = 0;
 18300  005CAE  0E00               	movlw	0
 18301  005CB0  6E4D               	movwf	single_axis_measure@axis_sum,c
 18302  005CB2  0E00               	movlw	0
 18303  005CB4  6E4E               	movwf	single_axis_measure@axis_sum+1,c
 18304  005CB6  0E00               	movlw	0
 18305  005CB8  6E4F               	movwf	single_axis_measure@axis_sum+2,c
 18306                           
 18307                           ;functions.c: 195: return voltageToG(medium_value);
 18308  005CBA  C048  F035         	movff	single_axis_measure@medium_value,voltageToG@voltage
 18309  005CBE  C049  F036         	movff	single_axis_measure@medium_value+1,voltageToG@voltage+1
 18310  005CC2  C04A  F037         	movff	single_axis_measure@medium_value+2,voltageToG@voltage+2
 18311  005CC6  ECBC  F035         	call	_voltageToG	;wreg free
 18312  005CCA  C035  F040         	movff	?_voltageToG,?_single_axis_measure
 18313  005CCE  C036  F041         	movff	?_voltageToG+1,?_single_axis_measure+1
 18314  005CD2  C037  F042         	movff	?_voltageToG+2,?_single_axis_measure+2
 18315  005CD6  0012               	return	
 18316  005CD8                     __end_of_single_axis_measure:
 18317                           	opt stack 0
 18318                           pclatu	equ	0xFFB
 18319                           pclath	equ	0xFFA
 18320                           tblptru	equ	0xFF8
 18321                           tblptrh	equ	0xFF7
 18322                           tblptrl	equ	0xFF6
 18323                           tablat	equ	0xFF5
 18324                           prodh	equ	0xFF4
 18325                           prodl	equ	0xFF3
 18326                           intcon	equ	0xFF2
 18327                           intcon3	equ	0xFF0
 18328                           indf0	equ	0xFEF
 18329                           fsr0h	equ	0xFEA
 18330                           fsr0l	equ	0xFE9
 18331                           wreg	equ	0xFE8
 18332                           fsr1h	equ	0xFE2
 18333                           fsr1l	equ	0xFE1
 18334                           indf2	equ	0xFDF
 18335                           postinc2	equ	0xFDE
 18336                           postdec2	equ	0xFDD
 18337                           fsr2h	equ	0xFDA
 18338                           fsr2l	equ	0xFD9
 18339                           status	equ	0xFD8
 18340                           
 18341 ;; *************** function i2___ftge *****************
 18342 ;; Defined at:
 18343 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftge.c"
 18344 ;; Parameters:    Size  Location     Type
 18345 ;;  ff1             3   13[COMRAM] float 
 18346 ;;  ff2             3   16[COMRAM] float 
 18347 ;; Auto vars:     Size  Location     Type
 18348 ;;		None
 18349 ;; Return value:  Size  Location     Type
 18350 ;;		None               void
 18351 ;; Registers used:
 18352 ;;		wreg, status,2, status,0
 18353 ;; Tracked objects:
 18354 ;;		On entry : 0/0
 18355 ;;		On exit  : 0/0
 18356 ;;		Unchanged: 0/0
 18357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18358 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18360 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18361 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18362 ;;Total ram usage:        9 bytes
 18363 ;; Hardware stack levels used:    1
 18364 ;; This function calls:
 18365 ;;		Nothing
 18366 ;; This function is called by:
 18367 ;;		_single_axis_measure
 18368 ;;		i2_sprintf
 18369 ;; This function uses a non-reentrant model
 18370 ;;
 18371                           
 18372                           	psect	text68
 18373  0066E2                     __ptext68:
 18374                           	opt stack 0
 18375  0066E2                     i2___ftge:
 18376                           	opt stack 20
 18377                           
 18378                           ;incstack = 0
 18379  0066E2  AE10               	btfss	i2___ftge@ff1+2,7,c
 18380  0066E4  D016               	goto	i2l7445
 18381  0066E6  C00E  F014         	movff	i2___ftge@ff1,??i2___ftge
 18382  0066EA  C00F  F015         	movff	i2___ftge@ff1+1,??i2___ftge+1
 18383  0066EE  C010  F016         	movff	i2___ftge@ff1+2,??i2___ftge+2
 18384  0066F2  1E14               	comf	??i2___ftge,f,c
 18385  0066F4  1E15               	comf	??i2___ftge+1,f,c
 18386  0066F6  1E16               	comf	??i2___ftge+2,f,c
 18387  0066F8  2A14               	incf	??i2___ftge,f,c
 18388  0066FA  0E00               	movlw	0
 18389  0066FC  2215               	addwfc	??i2___ftge+1,f,c
 18390  0066FE  2216               	addwfc	??i2___ftge+2,f,c
 18391  006700  0E00               	movlw	0
 18392  006702  2414               	addwf	??i2___ftge,w,c
 18393  006704  6E0E               	movwf	i2___ftge@ff1,c
 18394  006706  0E00               	movlw	0
 18395  006708  2015               	addwfc	??i2___ftge+1,w,c
 18396  00670A  6E0F               	movwf	i2___ftge@ff1+1,c
 18397  00670C  0E80               	movlw	128
 18398  00670E  2016               	addwfc	??i2___ftge+2,w,c
 18399  006710  6E10               	movwf	i2___ftge@ff1+2,c
 18400  006712                     i2l7445:
 18401  006712  AE13               	btfss	i2___ftge@ff2+2,7,c
 18402  006714  D016               	goto	i2l7449
 18403  006716  C011  F014         	movff	i2___ftge@ff2,??i2___ftge
 18404  00671A  C012  F015         	movff	i2___ftge@ff2+1,??i2___ftge+1
 18405  00671E  C013  F016         	movff	i2___ftge@ff2+2,??i2___ftge+2
 18406  006722  1E14               	comf	??i2___ftge,f,c
 18407  006724  1E15               	comf	??i2___ftge+1,f,c
 18408  006726  1E16               	comf	??i2___ftge+2,f,c
 18409  006728  2A14               	incf	??i2___ftge,f,c
 18410  00672A  0E00               	movlw	0
 18411  00672C  2215               	addwfc	??i2___ftge+1,f,c
 18412  00672E  2216               	addwfc	??i2___ftge+2,f,c
 18413  006730  0E00               	movlw	0
 18414  006732  2414               	addwf	??i2___ftge,w,c
 18415  006734  6E11               	movwf	i2___ftge@ff2,c
 18416  006736  0E00               	movlw	0
 18417  006738  2015               	addwfc	??i2___ftge+1,w,c
 18418  00673A  6E12               	movwf	i2___ftge@ff2+1,c
 18419  00673C  0E80               	movlw	128
 18420  00673E  2016               	addwfc	??i2___ftge+2,w,c
 18421  006740  6E13               	movwf	i2___ftge@ff2+2,c
 18422  006742                     i2l7449:
 18423  006742  0E00               	movlw	0
 18424  006744  1A0E               	xorwf	i2___ftge@ff1,f,c
 18425  006746  0E00               	movlw	0
 18426  006748  1A0F               	xorwf	i2___ftge@ff1+1,f,c
 18427  00674A  0E80               	movlw	128
 18428  00674C  1A10               	xorwf	i2___ftge@ff1+2,f,c
 18429  00674E  0E00               	movlw	0
 18430  006750  1A11               	xorwf	i2___ftge@ff2,f,c
 18431  006752  0E00               	movlw	0
 18432  006754  1A12               	xorwf	i2___ftge@ff2+1,f,c
 18433  006756  0E80               	movlw	128
 18434  006758  1A13               	xorwf	i2___ftge@ff2+2,f,c
 18435  00675A  5011               	movf	i2___ftge@ff2,w,c
 18436  00675C  5C0E               	subwf	i2___ftge@ff1,w,c
 18437  00675E  5012               	movf	i2___ftge@ff2+1,w,c
 18438  006760  580F               	subwfb	i2___ftge@ff1+1,w,c
 18439  006762  5013               	movf	i2___ftge@ff2+2,w,c
 18440  006764  5810               	subwfb	i2___ftge@ff1+2,w,c
 18441  006766  B0D8               	btfsc	status,0,c
 18442  006768  D002               	goto	i2l7455
 18443  00676A  90D8               	bcf	status,0,c
 18444  00676C  0012               	return	
 18445  00676E                     i2l7455:
 18446  00676E  80D8               	bsf	status,0,c
 18447  006770  0012               	return	
 18448  006772                     __end_ofi2___ftge:
 18449                           	opt stack 0
 18450                           pclatu	equ	0xFFB
 18451                           pclath	equ	0xFFA
 18452                           tblptru	equ	0xFF8
 18453                           tblptrh	equ	0xFF7
 18454                           tblptrl	equ	0xFF6
 18455                           tablat	equ	0xFF5
 18456                           prodh	equ	0xFF4
 18457                           prodl	equ	0xFF3
 18458                           intcon	equ	0xFF2
 18459                           intcon3	equ	0xFF0
 18460                           indf0	equ	0xFEF
 18461                           fsr0h	equ	0xFEA
 18462                           fsr0l	equ	0xFE9
 18463                           wreg	equ	0xFE8
 18464                           fsr1h	equ	0xFE2
 18465                           fsr1l	equ	0xFE1
 18466                           indf2	equ	0xFDF
 18467                           postinc2	equ	0xFDE
 18468                           postdec2	equ	0xFDD
 18469                           fsr2h	equ	0xFDA
 18470                           fsr2l	equ	0xFD9
 18471                           status	equ	0xFD8
 18472                           
 18473 ;; *************** function _voltageToG *****************
 18474 ;; Defined at:
 18475 ;;		line 208 in file "functions.c"
 18476 ;; Parameters:    Size  Location     Type
 18477 ;;  voltage         3   52[COMRAM] const float 
 18478 ;; Auto vars:     Size  Location     Type
 18479 ;;		None
 18480 ;; Return value:  Size  Location     Type
 18481 ;;                  3   52[COMRAM] float 
 18482 ;; Registers used:
 18483 ;;		wreg, status,2, status,0, cstack
 18484 ;; Tracked objects:
 18485 ;;		On entry : 0/0
 18486 ;;		On exit  : 0/0
 18487 ;;		Unchanged: 0/0
 18488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18489 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18493 ;;Total ram usage:        3 bytes
 18494 ;; Hardware stack levels used:    1
 18495 ;; Hardware stack levels required when called:    2
 18496 ;; This function calls:
 18497 ;;		i2___ftadd
 18498 ;;		i2___ftdiv
 18499 ;; This function is called by:
 18500 ;;		_single_axis_measure
 18501 ;; This function uses a non-reentrant model
 18502 ;;
 18503                           
 18504                           	psect	text69
 18505  006B78                     __ptext69:
 18506                           	opt stack 0
 18507  006B78                     _voltageToG:
 18508                           	opt stack 18
 18509                           
 18510                           ;functions.c: 209: return (voltage - 1.65) / 0.300;
 18511                           
 18512                           ;incstack = 0
 18513  006B78  0E33               	movlw	51
 18514  006B7A  6E0C               	movwf	i2___ftadd@f2,c
 18515  006B7C  0ED3               	movlw	211
 18516  006B7E  6E0D               	movwf	i2___ftadd@f2+1,c
 18517  006B80  0EBF               	movlw	191
 18518  006B82  6E0E               	movwf	i2___ftadd@f2+2,c
 18519  006B84  C035  F009         	movff	voltageToG@voltage,i2___ftadd@f1
 18520  006B88  C036  F00A         	movff	voltageToG@voltage+1,i2___ftadd@f1+1
 18521  006B8C  C037  F00B         	movff	voltageToG@voltage+2,i2___ftadd@f1+2
 18522  006B90  ECB4  F024         	call	i2___ftadd	;wreg free
 18523  006B94  C009  F026         	movff	?i2___ftadd,i2___ftdiv@f1
 18524  006B98  C00A  F027         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 18525  006B9C  C00B  F028         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 18526  006BA0  0E9A               	movlw	154
 18527  006BA2  6E29               	movwf	i2___ftdiv@f2,c
 18528  006BA4  0E99               	movlw	153
 18529  006BA6  6E2A               	movwf	i2___ftdiv@f2+1,c
 18530  006BA8  0E3E               	movlw	62
 18531  006BAA  6E2B               	movwf	i2___ftdiv@f2+2,c
 18532  006BAC  ECDD  F02F         	call	i2___ftdiv	;wreg free
 18533  006BB0  C026  F035         	movff	?i2___ftdiv,?_voltageToG
 18534  006BB4  C027  F036         	movff	?i2___ftdiv+1,?_voltageToG+1
 18535  006BB8  C028  F037         	movff	?i2___ftdiv+2,?_voltageToG+2
 18536  006BBC  0012               	return	
 18537  006BBE                     __end_of_voltageToG:
 18538                           	opt stack 0
 18539                           pclatu	equ	0xFFB
 18540                           pclath	equ	0xFFA
 18541                           tblptru	equ	0xFF8
 18542                           tblptrh	equ	0xFF7
 18543                           tblptrl	equ	0xFF6
 18544                           tablat	equ	0xFF5
 18545                           prodh	equ	0xFF4
 18546                           prodl	equ	0xFF3
 18547                           intcon	equ	0xFF2
 18548                           intcon3	equ	0xFF0
 18549                           indf0	equ	0xFEF
 18550                           fsr0h	equ	0xFEA
 18551                           fsr0l	equ	0xFE9
 18552                           wreg	equ	0xFE8
 18553                           fsr1h	equ	0xFE2
 18554                           fsr1l	equ	0xFE1
 18555                           indf2	equ	0xFDF
 18556                           postinc2	equ	0xFDE
 18557                           postdec2	equ	0xFDD
 18558                           fsr2h	equ	0xFDA
 18559                           fsr2l	equ	0xFD9
 18560                           status	equ	0xFD8
 18561                           
 18562 ;; *************** function i2___ftadd *****************
 18563 ;; Defined at:
 18564 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftadd.c"
 18565 ;; Parameters:    Size  Location     Type
 18566 ;;  f1              3    8[COMRAM] float 
 18567 ;;  f2              3   11[COMRAM] float 
 18568 ;; Auto vars:     Size  Location     Type
 18569 ;;  __ftadd         1   19[COMRAM] unsigned char 
 18570 ;;  __ftadd         1   18[COMRAM] unsigned char 
 18571 ;;  __ftadd         1   17[COMRAM] unsigned char 
 18572 ;; Return value:  Size  Location     Type
 18573 ;;                  3    8[COMRAM] float 
 18574 ;; Registers used:
 18575 ;;		wreg, status,2, status,0, cstack
 18576 ;; Tracked objects:
 18577 ;;		On entry : 0/0
 18578 ;;		On exit  : 0/0
 18579 ;;		Unchanged: 0/0
 18580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18581 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18582 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18583 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18584 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18585 ;;Total ram usage:       12 bytes
 18586 ;; Hardware stack levels used:    1
 18587 ;; Hardware stack levels required when called:    1
 18588 ;; This function calls:
 18589 ;;		i2___ftpack
 18590 ;; This function is called by:
 18591 ;;		_single_axis_measure
 18592 ;;		_voltageToG
 18593 ;;		i2___asftadd
 18594 ;;		i2___ftsub
 18595 ;; This function uses a non-reentrant model
 18596 ;;
 18597                           
 18598                           	psect	text70
 18599  004968                     __ptext70:
 18600                           	opt stack 0
 18601  004968                     i2___ftadd:
 18602                           	opt stack 17
 18603                           
 18604                           ;incstack = 0
 18605  004968  C00B  F00F         	movff	i2___ftadd@f1+2,??i2___ftadd
 18606  00496C  6A10               	clrf	(??i2___ftadd+1)& (0+255),c
 18607  00496E  6A11               	clrf	(??i2___ftadd+2)& (0+255),c
 18608  004970  340A               	rlcf	i2___ftadd@f1+1,w,c
 18609  004972  360F               	rlcf	??i2___ftadd& (0+255),f,c
 18610  004974  E301               	bnc	u401_41
 18611  004976  8010               	bsf	(??i2___ftadd+1)& (0+255),0,c
 18612  004978                     u401_41:
 18613  004978  500F               	movf	??i2___ftadd,w,c
 18614  00497A  6E14               	movwf	i2___ftadd@exp1,c
 18615  00497C  C00E  F00F         	movff	i2___ftadd@f2+2,??i2___ftadd
 18616  004980  6A10               	clrf	(??i2___ftadd+1)& (0+255),c
 18617  004982  6A11               	clrf	(??i2___ftadd+2)& (0+255),c
 18618  004984  340D               	rlcf	i2___ftadd@f2+1,w,c
 18619  004986  360F               	rlcf	??i2___ftadd& (0+255),f,c
 18620  004988  E301               	bnc	u402_41
 18621  00498A  8010               	bsf	(??i2___ftadd+1)& (0+255),0,c
 18622  00498C                     u402_41:
 18623  00498C  500F               	movf	??i2___ftadd,w,c
 18624  00498E  6E13               	movwf	i2___ftadd@exp2,c
 18625  004990  5014               	movf	i2___ftadd@exp1,w,c
 18626  004992  B4D8               	btfsc	status,2,c
 18627  004994  D00C               	goto	i2l716
 18628  004996  5013               	movf	i2___ftadd@exp2,w,c
 18629  004998  5C14               	subwf	i2___ftadd@exp1,w,c
 18630  00499A  B0D8               	btfsc	status,0,c
 18631  00499C  D00F               	goto	i2l6291
 18632  00499E  5014               	movf	i2___ftadd@exp1,w,c
 18633  0049A0  0800               	sublw	0
 18634  0049A2  2413               	addwf	i2___ftadd@exp2,w,c
 18635  0049A4  6E0F               	movwf	??i2___ftadd& (0+255),c
 18636  0049A6  0E19               	movlw	25
 18637  0049A8  5C0F               	subwf	??i2___ftadd,w,c
 18638  0049AA  A0D8               	btfss	status,0,c
 18639  0049AC  D007               	goto	i2l6291
 18640  0049AE                     i2l716:
 18641  0049AE  C00C  F009         	movff	i2___ftadd@f2,?i2___ftadd
 18642  0049B2  C00D  F00A         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 18643  0049B6  C00E  F00B         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 18644  0049BA  0012               	return	
 18645  0049BC                     i2l6291:
 18646  0049BC  5013               	movf	i2___ftadd@exp2,w,c
 18647  0049BE  B4D8               	btfsc	status,2,c
 18648  0049C0  D00C               	goto	i2l720
 18649  0049C2  5014               	movf	i2___ftadd@exp1,w,c
 18650  0049C4  5C13               	subwf	i2___ftadd@exp2,w,c
 18651  0049C6  B0D8               	btfsc	status,0,c
 18652  0049C8  D00F               	goto	i2l6297
 18653  0049CA  5013               	movf	i2___ftadd@exp2,w,c
 18654  0049CC  0800               	sublw	0
 18655  0049CE  2414               	addwf	i2___ftadd@exp1,w,c
 18656  0049D0  6E0F               	movwf	??i2___ftadd& (0+255),c
 18657  0049D2  0E19               	movlw	25
 18658  0049D4  5C0F               	subwf	??i2___ftadd,w,c
 18659  0049D6  A0D8               	btfss	status,0,c
 18660  0049D8  D007               	goto	i2l6297
 18661  0049DA                     i2l720:
 18662  0049DA  C009  F009         	movff	i2___ftadd@f1,?i2___ftadd
 18663  0049DE  C00A  F00A         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 18664  0049E2  C00B  F00B         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 18665  0049E6  0012               	return	
 18666  0049E8                     i2l6297:
 18667  0049E8  6E0F               	movwf	??i2___ftadd& (0+255),c
 18668  0049EA  0E06               	movlw	6
 18669  0049EC  6E12               	movwf	i2___ftadd@sign,c
 18670  0049EE  500F               	movf	??i2___ftadd& (0+255),w,c
 18671  0049F0  BE0B               	btfsc	i2___ftadd@f1+2,7,c
 18672  0049F2  8E12               	bsf	i2___ftadd@sign,7,c
 18673  0049F4  BE0E               	btfsc	i2___ftadd@f2+2,7,c
 18674  0049F6  8C12               	bsf	i2___ftadd@sign,6,c
 18675  0049F8  8E0A               	bsf	i2___ftadd@f1+1,7,c
 18676  0049FA  0EFF               	movlw	255
 18677  0049FC  1609               	andwf	i2___ftadd@f1,f,c
 18678  0049FE  0EFF               	movlw	255
 18679  004A00  160A               	andwf	i2___ftadd@f1+1,f,c
 18680  004A02  0E00               	movlw	0
 18681  004A04  160B               	andwf	i2___ftadd@f1+2,f,c
 18682  004A06  8E0D               	bsf	i2___ftadd@f2+1,7,c
 18683  004A08  0EFF               	movlw	255
 18684  004A0A  160C               	andwf	i2___ftadd@f2,f,c
 18685  004A0C  0EFF               	movlw	255
 18686  004A0E  160D               	andwf	i2___ftadd@f2+1,f,c
 18687  004A10  0E00               	movlw	0
 18688  004A12  160E               	andwf	i2___ftadd@f2+2,f,c
 18689  004A14  5013               	movf	i2___ftadd@exp2,w,c
 18690  004A16  5C14               	subwf	i2___ftadd@exp1,w,c
 18691  004A18  B0D8               	btfsc	status,0,c
 18692  004A1A  D01A               	goto	i2l6323
 18693  004A1C                     i2l6313:
 18694  004A1C  90D8               	bcf	status,0,c
 18695  004A1E  360C               	rlcf	i2___ftadd@f2,f,c
 18696  004A20  360D               	rlcf	i2___ftadd@f2+1,f,c
 18697  004A22  360E               	rlcf	i2___ftadd@f2+2,f,c
 18698  004A24  0613               	decf	i2___ftadd@exp2,f,c
 18699  004A26  5013               	movf	i2___ftadd@exp2,w,c
 18700  004A28  1814               	xorwf	i2___ftadd@exp1,w,c
 18701  004A2A  B4D8               	btfsc	status,2,c
 18702  004A2C  D00D               	goto	i2l6321
 18703  004A2E  0612               	decf	i2___ftadd@sign,f,c
 18704  004A30  C012  F00F         	movff	i2___ftadd@sign,??i2___ftadd
 18705  004A34  0E07               	movlw	7
 18706  004A36  160F               	andwf	??i2___ftadd,f,c
 18707  004A38  B4D8               	btfsc	status,2,c
 18708  004A3A  D006               	goto	i2l6321
 18709  004A3C  D7EF               	goto	i2l6313
 18710  004A3E                     i2l6319:
 18711  004A3E  90D8               	bcf	status,0,c
 18712  004A40  320B               	rrcf	i2___ftadd@f1+2,f,c
 18713  004A42  320A               	rrcf	i2___ftadd@f1+1,f,c
 18714  004A44  3209               	rrcf	i2___ftadd@f1,f,c
 18715  004A46  2A14               	incf	i2___ftadd@exp1,f,c
 18716  004A48                     i2l6321:
 18717  004A48  5013               	movf	i2___ftadd@exp2,w,c
 18718  004A4A  6214               	cpfseq	i2___ftadd@exp1,c
 18719  004A4C  D7F8               	goto	i2l6319
 18720  004A4E  D01D               	goto	i2l731
 18721  004A50                     i2l6323:
 18722  004A50  5014               	movf	i2___ftadd@exp1,w,c
 18723  004A52  5C13               	subwf	i2___ftadd@exp2,w,c
 18724  004A54  B0D8               	btfsc	status,0,c
 18725  004A56  D019               	goto	i2l731
 18726  004A58                     i2l6325:
 18727  004A58  90D8               	bcf	status,0,c
 18728  004A5A  3609               	rlcf	i2___ftadd@f1,f,c
 18729  004A5C  360A               	rlcf	i2___ftadd@f1+1,f,c
 18730  004A5E  360B               	rlcf	i2___ftadd@f1+2,f,c
 18731  004A60  0614               	decf	i2___ftadd@exp1,f,c
 18732  004A62  5013               	movf	i2___ftadd@exp2,w,c
 18733  004A64  1814               	xorwf	i2___ftadd@exp1,w,c
 18734  004A66  B4D8               	btfsc	status,2,c
 18735  004A68  D00D               	goto	i2l6333
 18736  004A6A  0612               	decf	i2___ftadd@sign,f,c
 18737  004A6C  C012  F00F         	movff	i2___ftadd@sign,??i2___ftadd
 18738  004A70  0E07               	movlw	7
 18739  004A72  160F               	andwf	??i2___ftadd,f,c
 18740  004A74  B4D8               	btfsc	status,2,c
 18741  004A76  D006               	goto	i2l6333
 18742  004A78  D7EF               	goto	i2l6325
 18743  004A7A                     i2l6331:
 18744  004A7A  90D8               	bcf	status,0,c
 18745  004A7C  320E               	rrcf	i2___ftadd@f2+2,f,c
 18746  004A7E  320D               	rrcf	i2___ftadd@f2+1,f,c
 18747  004A80  320C               	rrcf	i2___ftadd@f2,f,c
 18748  004A82  2A13               	incf	i2___ftadd@exp2,f,c
 18749  004A84                     i2l6333:
 18750  004A84  5013               	movf	i2___ftadd@exp2,w,c
 18751  004A86  6214               	cpfseq	i2___ftadd@exp1,c
 18752  004A88  D7F8               	goto	i2l6331
 18753  004A8A                     i2l731:
 18754  004A8A  AE12               	btfss	i2___ftadd@sign,7,c
 18755  004A8C  D00C               	goto	i2l740
 18756  004A8E  0EFF               	movlw	255
 18757  004A90  1A09               	xorwf	i2___ftadd@f1,f,c
 18758  004A92  0EFF               	movlw	255
 18759  004A94  1A0A               	xorwf	i2___ftadd@f1+1,f,c
 18760  004A96  0EFF               	movlw	255
 18761  004A98  1A0B               	xorwf	i2___ftadd@f1+2,f,c
 18762  004A9A  0E01               	movlw	1
 18763  004A9C  2609               	addwf	i2___ftadd@f1,f,c
 18764  004A9E  0E00               	movlw	0
 18765  004AA0  220A               	addwfc	i2___ftadd@f1+1,f,c
 18766  004AA2  0E00               	movlw	0
 18767  004AA4  220B               	addwfc	i2___ftadd@f1+2,f,c
 18768  004AA6                     i2l740:
 18769  004AA6  AC12               	btfss	i2___ftadd@sign,6,c
 18770  004AA8  D00C               	goto	i2l6339
 18771  004AAA  0EFF               	movlw	255
 18772  004AAC  1A0C               	xorwf	i2___ftadd@f2,f,c
 18773  004AAE  0EFF               	movlw	255
 18774  004AB0  1A0D               	xorwf	i2___ftadd@f2+1,f,c
 18775  004AB2  0EFF               	movlw	255
 18776  004AB4  1A0E               	xorwf	i2___ftadd@f2+2,f,c
 18777  004AB6  0E01               	movlw	1
 18778  004AB8  260C               	addwf	i2___ftadd@f2,f,c
 18779  004ABA  0E00               	movlw	0
 18780  004ABC  220D               	addwfc	i2___ftadd@f2+1,f,c
 18781  004ABE  0E00               	movlw	0
 18782  004AC0  220E               	addwfc	i2___ftadd@f2+2,f,c
 18783  004AC2                     i2l6339:
 18784  004AC2  6E0F               	movwf	??i2___ftadd& (0+255),c
 18785  004AC4  0E00               	movlw	0
 18786  004AC6  6E12               	movwf	i2___ftadd@sign,c
 18787  004AC8  500F               	movf	??i2___ftadd& (0+255),w,c
 18788  004ACA  5009               	movf	i2___ftadd@f1,w,c
 18789  004ACC  260C               	addwf	i2___ftadd@f2,f,c
 18790  004ACE  500A               	movf	i2___ftadd@f1+1,w,c
 18791  004AD0  220D               	addwfc	i2___ftadd@f2+1,f,c
 18792  004AD2  500B               	movf	i2___ftadd@f1+2,w,c
 18793  004AD4  220E               	addwfc	i2___ftadd@f2+2,f,c
 18794  004AD6  AE0E               	btfss	i2___ftadd@f2+2,7,c
 18795  004AD8  D010               	goto	i2l6349
 18796  004ADA  0EFF               	movlw	255
 18797  004ADC  1A0C               	xorwf	i2___ftadd@f2,f,c
 18798  004ADE  0EFF               	movlw	255
 18799  004AE0  1A0D               	xorwf	i2___ftadd@f2+1,f,c
 18800  004AE2  0EFF               	movlw	255
 18801  004AE4  1A0E               	xorwf	i2___ftadd@f2+2,f,c
 18802  004AE6  0E01               	movlw	1
 18803  004AE8  260C               	addwf	i2___ftadd@f2,f,c
 18804  004AEA  0E00               	movlw	0
 18805  004AEC  220D               	addwfc	i2___ftadd@f2+1,f,c
 18806  004AEE  0E00               	movlw	0
 18807  004AF0  220E               	addwfc	i2___ftadd@f2+2,f,c
 18808  004AF2  6E0F               	movwf	??i2___ftadd& (0+255),c
 18809  004AF4  0E01               	movlw	1
 18810  004AF6  6E12               	movwf	i2___ftadd@sign,c
 18811  004AF8  500F               	movf	??i2___ftadd& (0+255),w,c
 18812  004AFA                     i2l6349:
 18813  004AFA  C00C  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 18814  004AFE  C00D  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 18815  004B02  C00E  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 18816  004B06  C014  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 18817  004B0A  C012  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 18818  004B0E  ECEA  F031         	call	i2___ftpack	;wreg free
 18819  004B12  C001  F009         	movff	?i2___ftpack,?i2___ftadd
 18820  004B16  C002  F00A         	movff	?i2___ftpack+1,?i2___ftadd+1
 18821  004B1A  C003  F00B         	movff	?i2___ftpack+2,?i2___ftadd+2
 18822  004B1E  0012               	return	
 18823  004B20                     __end_ofi2___ftadd:
 18824                           	opt stack 0
 18825                           pclatu	equ	0xFFB
 18826                           pclath	equ	0xFFA
 18827                           tblptru	equ	0xFF8
 18828                           tblptrh	equ	0xFF7
 18829                           tblptrl	equ	0xFF6
 18830                           tablat	equ	0xFF5
 18831                           prodh	equ	0xFF4
 18832                           prodl	equ	0xFF3
 18833                           intcon	equ	0xFF2
 18834                           intcon3	equ	0xFF0
 18835                           indf0	equ	0xFEF
 18836                           fsr0h	equ	0xFEA
 18837                           fsr0l	equ	0xFE9
 18838                           wreg	equ	0xFE8
 18839                           fsr1h	equ	0xFE2
 18840                           fsr1l	equ	0xFE1
 18841                           indf2	equ	0xFDF
 18842                           postinc2	equ	0xFDE
 18843                           postdec2	equ	0xFDD
 18844                           fsr2h	equ	0xFDA
 18845                           fsr2l	equ	0xFD9
 18846                           status	equ	0xFD8
 18847                           
 18848 ;; *************** function _read_accelerometer *****************
 18849 ;; Defined at:
 18850 ;;		line 198 in file "functions.c"
 18851 ;; Parameters:    Size  Location     Type
 18852 ;;  axis            2   58[COMRAM] const unsigned int 
 18853 ;; Auto vars:     Size  Location     Type
 18854 ;;  axis_point      2   61[COMRAM] const unsigned int 
 18855 ;; Return value:  Size  Location     Type
 18856 ;;                  3   58[COMRAM] float 
 18857 ;; Registers used:
 18858 ;;		wreg, status,2, status,0, cstack
 18859 ;; Tracked objects:
 18860 ;;		On entry : 0/0
 18861 ;;		On exit  : 0/0
 18862 ;;		Unchanged: 0/0
 18863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18864 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18867 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18868 ;;Total ram usage:        5 bytes
 18869 ;; Hardware stack levels used:    1
 18870 ;; Hardware stack levels required when called:    3
 18871 ;; This function calls:
 18872 ;;		_pointToVoltage
 18873 ;;		i2_read
 18874 ;; This function is called by:
 18875 ;;		_single_axis_measure
 18876 ;; This function uses a non-reentrant model
 18877 ;;
 18878                           
 18879                           	psect	text71
 18880  006F64                     __ptext71:
 18881                           	opt stack 0
 18882  006F64                     _read_accelerometer:
 18883                           	opt stack 17
 18884                           
 18885                           ;functions.c: 199: const unsigned int axis_point = read(axis);
 18886                           
 18887                           ;incstack = 0
 18888  006F64  C03B  F001         	movff	read_accelerometer@axis,i2read@channel
 18889  006F68  C03C  F002         	movff	read_accelerometer@axis+1,i2read@channel+1
 18890  006F6C  EC2D  F031         	call	i2_read	;wreg free
 18891  006F70  C001  F03E         	movff	?i2_read,read_accelerometer@axis_point
 18892  006F74  C002  F03F         	movff	?i2_read+1,read_accelerometer@axis_point+1
 18893                           
 18894                           ;functions.c: 200: return pointToVoltage(axis_point);
 18895  006F78  C03E  F035         	movff	read_accelerometer@axis_point,pointToVoltage@point
 18896  006F7C  C03F  F036         	movff	read_accelerometer@axis_point+1,pointToVoltage@point+1
 18897  006F80  EC36  F035         	call	_pointToVoltage	;wreg free
 18898  006F84  C035  F03B         	movff	?_pointToVoltage,?_read_accelerometer
 18899  006F88  C036  F03C         	movff	?_pointToVoltage+1,?_read_accelerometer+1
 18900  006F8C  C037  F03D         	movff	?_pointToVoltage+2,?_read_accelerometer+2
 18901  006F90  0012               	return	
 18902  006F92                     __end_of_read_accelerometer:
 18903                           	opt stack 0
 18904                           pclatu	equ	0xFFB
 18905                           pclath	equ	0xFFA
 18906                           tblptru	equ	0xFF8
 18907                           tblptrh	equ	0xFF7
 18908                           tblptrl	equ	0xFF6
 18909                           tablat	equ	0xFF5
 18910                           prodh	equ	0xFF4
 18911                           prodl	equ	0xFF3
 18912                           intcon	equ	0xFF2
 18913                           intcon3	equ	0xFF0
 18914                           indf0	equ	0xFEF
 18915                           fsr0h	equ	0xFEA
 18916                           fsr0l	equ	0xFE9
 18917                           wreg	equ	0xFE8
 18918                           fsr1h	equ	0xFE2
 18919                           fsr1l	equ	0xFE1
 18920                           indf2	equ	0xFDF
 18921                           postinc2	equ	0xFDE
 18922                           postdec2	equ	0xFDD
 18923                           fsr2h	equ	0xFDA
 18924                           fsr2l	equ	0xFD9
 18925                           status	equ	0xFD8
 18926                           
 18927 ;; *************** function i2_read *****************
 18928 ;; Defined at:
 18929 ;;		line 17 in file "functions.c"
 18930 ;; Parameters:    Size  Location     Type
 18931 ;;  channel         2    0[COMRAM] int 
 18932 ;; Auto vars:     Size  Location     Type
 18933 ;;  read            2    4[COMRAM] int 
 18934 ;; Return value:  Size  Location     Type
 18935 ;;                  2    0[COMRAM] int 
 18936 ;; Registers used:
 18937 ;;		wreg, status,2, status,0
 18938 ;; Tracked objects:
 18939 ;;		On entry : 0/0
 18940 ;;		On exit  : 0/0
 18941 ;;		Unchanged: 0/0
 18942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18946 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18947 ;;Total ram usage:        6 bytes
 18948 ;; Hardware stack levels used:    1
 18949 ;; This function calls:
 18950 ;;		Nothing
 18951 ;; This function is called by:
 18952 ;;		_read_accelerometer
 18953 ;; This function uses a non-reentrant model
 18954 ;;
 18955                           
 18956                           	psect	text72
 18957  00625A                     __ptext72:
 18958                           	opt stack 0
 18959  00625A                     i2_read:
 18960                           	opt stack 19
 18961                           
 18962                           ;functions.c: 18: int value = 0;
 18963                           
 18964                           ;incstack = 0
 18965  00625A  0E00               	movlw	0
 18966  00625C  6E06               	movwf	i2read@value+1,c
 18967  00625E  0E00               	movlw	0
 18968  006260  6E05               	movwf	i2read@value,c
 18969                           
 18970                           ;functions.c: 19: switch (channel) {
 18971  006262  D02C               	goto	i2l6735
 18972  006264                     i2l109:
 18973                           
 18974                           ;functions.c: 21: ADCON0bits.CHS0 = 0;
 18975  006264  94C2               	bcf	4034,2,c	;volatile
 18976                           
 18977                           ;functions.c: 22: ADCON0bits.CHS1 = 0;
 18978  006266  96C2               	bcf	4034,3,c	;volatile
 18979                           
 18980                           ;functions.c: 23: ADCON0bits.CHS2 = 0;
 18981  006268  98C2               	bcf	4034,4,c	;volatile
 18982                           
 18983                           ;functions.c: 24: ADCON0bits.CHS3 = 0;
 18984  00626A  9AC2               	bcf	4034,5,c	;volatile
 18985                           
 18986                           ;functions.c: 26: ANCON0 &= 0b11111110;
 18987  00626C  010F               	movlb	15	; () banked
 18988  00626E  010F               	movlb	15	; () banked
 18989  006270  9148               	bcf	72,0,b	;volatile
 18990  006272  D01F               	goto	L43
 18991  006274                     i2l111:
 18992                           
 18993                           ;functions.c: 31: ADCON0bits.CHS0 = 1;
 18994  006274  84C2               	bsf	4034,2,c	;volatile
 18995                           
 18996                           ;functions.c: 32: ADCON0bits.CHS1 = 0;
 18997  006276  96C2               	bcf	4034,3,c	;volatile
 18998                           
 18999                           ;functions.c: 33: ADCON0bits.CHS2 = 0;
 19000  006278  98C2               	bcf	4034,4,c	;volatile
 19001                           
 19002                           ;functions.c: 34: ADCON0bits.CHS3 = 0;
 19003  00627A  9AC2               	bcf	4034,5,c	;volatile
 19004                           
 19005                           ;functions.c: 36: ANCON0 &= 0b11111101;
 19006  00627C  010F               	movlb	15	; () banked
 19007  00627E  010F               	movlb	15	; () banked
 19008  006280  9348               	bcf	72,1,b	;volatile
 19009  006282  D017               	goto	L43
 19010  006284                     i2l112:
 19011                           
 19012                           ;functions.c: 41: ADCON0bits.CHS0 = 0;
 19013  006284  94C2               	bcf	4034,2,c	;volatile
 19014                           
 19015                           ;functions.c: 42: ADCON0bits.CHS1 = 1;
 19016  006286  86C2               	bsf	4034,3,c	;volatile
 19017                           
 19018                           ;functions.c: 43: ADCON0bits.CHS2 = 0;
 19019  006288  98C2               	bcf	4034,4,c	;volatile
 19020                           
 19021                           ;functions.c: 44: ADCON0bits.CHS3 = 0;
 19022  00628A  9AC2               	bcf	4034,5,c	;volatile
 19023                           
 19024                           ;functions.c: 46: ANCON0 &= 0b11111011;
 19025  00628C  010F               	movlb	15	; () banked
 19026  00628E  010F               	movlb	15	; () banked
 19027  006290  9548               	bcf	72,2,b	;volatile
 19028  006292  D00F               	goto	L43
 19029  006294                     i2l113:
 19030                           
 19031                           ;functions.c: 50: ADCON0bits.CHS0 = 1;
 19032  006294  84C2               	bsf	4034,2,c	;volatile
 19033                           
 19034                           ;functions.c: 51: ADCON0bits.CHS1 = 1;
 19035  006296  86C2               	bsf	4034,3,c	;volatile
 19036                           
 19037                           ;functions.c: 52: ADCON0bits.CHS2 = 0;
 19038  006298  98C2               	bcf	4034,4,c	;volatile
 19039                           
 19040                           ;functions.c: 53: ADCON0bits.CHS3 = 0;
 19041  00629A  9AC2               	bcf	4034,5,c	;volatile
 19042                           
 19043                           ;functions.c: 55: ANCON0 &= 0b11110111;
 19044  00629C  010F               	movlb	15	; () banked
 19045  00629E  010F               	movlb	15	; () banked
 19046  0062A0  9748               	bcf	72,3,b	;volatile
 19047  0062A2  D007               	goto	L43
 19048  0062A4                     i2l114:
 19049                           
 19050                           ;functions.c: 59: ADCON0bits.CHS0 = 1;
 19051  0062A4  84C2               	bsf	4034,2,c	;volatile
 19052                           
 19053                           ;functions.c: 60: ADCON0bits.CHS1 = 1;
 19054  0062A6  86C2               	bsf	4034,3,c	;volatile
 19055                           
 19056                           ;functions.c: 61: ADCON0bits.CHS2 = 1;
 19057  0062A8  88C2               	bsf	4034,4,c	;volatile
 19058                           
 19059                           ;functions.c: 62: ADCON0bits.CHS3 = 0;
 19060  0062AA  9AC2               	bcf	4034,5,c	;volatile
 19061                           
 19062                           ;functions.c: 64: ANCON0 &= 0b01111111;
 19063  0062AC  010F               	movlb	15	; () banked
 19064  0062AE  010F               	movlb	15	; () banked
 19065  0062B0  9F48               	bcf	72,7,b	;volatile
 19066  0062B2                     L43:
 19067                           
 19068                           ; BSR set to: 15
 19069                           ;functions.c: 65: ANCON1 |= 0b00001111;
 19070  0062B2  0E0F               	movlw	15
 19071  0062B4  010F               	movlb	15	; () banked
 19072  0062B6  010F               	movlb	15	; () banked
 19073  0062B8  1349               	iorwf	73,f,b	;volatile
 19074                           
 19075                           ;functions.c: 66: break;
 19076  0062BA  D018               	goto	i2l110
 19077  0062BC                     i2l6735:
 19078  0062BC  C001  F003         	movff	i2read@channel,??i2_read
 19079  0062C0  C002  F004         	movff	i2read@channel+1,??i2_read+1
 19080                           
 19081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19082                           ; Switch size 1, requested type "space"
 19083                           ; Number of cases is 1, Range of values is 0 to 0
 19084                           ; switch strategies available:
 19085                           ; Name         Instructions Cycles
 19086                           ; simple_byte            4     3 (average)
 19087                           ;	Chosen strategy is simple_byte
 19088  0062C4  5004               	movf	??i2_read+1,w,c
 19089  0062C6  0A00               	xorlw	0	; case 0
 19090  0062C8  A4D8               	btfss	status,2,c
 19091  0062CA  D010               	goto	i2l110
 19092                           
 19093                           ; Switch size 1, requested type "space"
 19094                           ; Number of cases is 5, Range of values is 0 to 4
 19095                           ; switch strategies available:
 19096                           ; Name         Instructions Cycles
 19097                           ; simple_byte           16     9 (average)
 19098                           ;	Chosen strategy is simple_byte
 19099  0062CC  5003               	movf	??i2_read,w,c
 19100  0062CE  0A00               	xorlw	0	; case 0
 19101  0062D0  B4D8               	btfsc	status,2,c
 19102  0062D2  D7C8               	goto	i2l109
 19103  0062D4  0A01               	xorlw	1	; case 1
 19104  0062D6  B4D8               	btfsc	status,2,c
 19105  0062D8  D7CD               	goto	i2l111
 19106  0062DA  0A03               	xorlw	3	; case 2
 19107  0062DC  B4D8               	btfsc	status,2,c
 19108  0062DE  D7D2               	goto	i2l112
 19109  0062E0  0A01               	xorlw	1	; case 3
 19110  0062E2  B4D8               	btfsc	status,2,c
 19111  0062E4  D7D7               	goto	i2l113
 19112  0062E6  0A07               	xorlw	7	; case 4
 19113  0062E8  B4D8               	btfsc	status,2,c
 19114  0062EA  D7DC               	goto	i2l114
 19115  0062EC                     i2l110:
 19116                           
 19117                           ;functions.c: 69: ADCON0bits.VCFG0 = 0;
 19118  0062EC  9CC2               	bcf	4034,6,c	;volatile
 19119                           
 19120                           ;functions.c: 70: ADCON0bits.VCFG1 = 0;
 19121  0062EE  9EC2               	bcf	4034,7,c	;volatile
 19122                           
 19123                           ;functions.c: 72: ADCON1bits.ADFM = 1;
 19124  0062F0  8EC1               	bsf	4033,7,c	;volatile
 19125                           
 19126                           ;functions.c: 74: ADCON1bits.ACQT0 = 0;
 19127  0062F2  96C1               	bcf	4033,3,c	;volatile
 19128                           
 19129                           ;functions.c: 75: ADCON1bits.ACQT1 = 1;
 19130  0062F4  88C1               	bsf	4033,4,c	;volatile
 19131                           
 19132                           ;functions.c: 76: ADCON1bits.ACQT2 = 1;
 19133  0062F6  8AC1               	bsf	4033,5,c	;volatile
 19134                           
 19135                           ;functions.c: 78: ADCON1bits.ADCS0 = 0;
 19136  0062F8  90C1               	bcf	4033,0,c	;volatile
 19137                           
 19138                           ;functions.c: 79: ADCON1bits.ADCS1 = 0;
 19139  0062FA  92C1               	bcf	4033,1,c	;volatile
 19140                           
 19141                           ;functions.c: 80: ADCON1bits.ADCS2 = 0;
 19142  0062FC  94C1               	bcf	4033,2,c	;volatile
 19143                           
 19144                           ;functions.c: 82: ADCON0bits.ADON = 1;
 19145  0062FE  80C2               	bsf	4034,0,c	;volatile
 19146                           
 19147                           ;functions.c: 83: GO_DONE = 1;
 19148  006300  82C2               	bsf	4034,1,c	;volatile
 19149  006302                     i2l115:
 19150  006302  B2C2               	btfsc	4034,1,c	;volatile
 19151  006304  D7FE               	goto	i2l115
 19152                           
 19153                           ;functions.c: 85: value = ((ADRESH << 8) + ADRESL);
 19154  006306  50C4               	movf	4036,w,c	;volatile
 19155  006308  6E04               	movwf	(??i2_read+1)& (0+255),c
 19156  00630A  6A03               	clrf	??i2_read& (0+255),c
 19157  00630C  50C3               	movf	4035,w,c	;volatile
 19158  00630E  2403               	addwf	??i2_read,w,c
 19159  006310  6E05               	movwf	i2read@value,c
 19160  006312  0E00               	movlw	0
 19161  006314  2004               	addwfc	??i2_read+1,w,c
 19162  006316  6E06               	movwf	i2read@value+1,c
 19163                           
 19164                           ;functions.c: 87: ADCON0bits.ADON = 0;
 19165  006318  90C2               	bcf	4034,0,c	;volatile
 19166                           
 19167                           ;functions.c: 89: return value;
 19168  00631A  C005  F001         	movff	i2read@value,?i2_read
 19169  00631E  C006  F002         	movff	i2read@value+1,?i2_read+1
 19170  006322  0012               	return	
 19171  006324                     __end_ofi2_read:
 19172                           	opt stack 0
 19173                           pclatu	equ	0xFFB
 19174                           pclath	equ	0xFFA
 19175                           tblptru	equ	0xFF8
 19176                           tblptrh	equ	0xFF7
 19177                           tblptrl	equ	0xFF6
 19178                           tablat	equ	0xFF5
 19179                           prodh	equ	0xFF4
 19180                           prodl	equ	0xFF3
 19181                           intcon	equ	0xFF2
 19182                           intcon3	equ	0xFF0
 19183                           indf0	equ	0xFEF
 19184                           fsr0h	equ	0xFEA
 19185                           fsr0l	equ	0xFE9
 19186                           wreg	equ	0xFE8
 19187                           fsr1h	equ	0xFE2
 19188                           fsr1l	equ	0xFE1
 19189                           indf2	equ	0xFDF
 19190                           postinc2	equ	0xFDE
 19191                           postdec2	equ	0xFDD
 19192                           fsr2h	equ	0xFDA
 19193                           fsr2l	equ	0xFD9
 19194                           status	equ	0xFD8
 19195                           
 19196 ;; *************** function _pointToVoltage *****************
 19197 ;; Defined at:
 19198 ;;		line 203 in file "functions.c"
 19199 ;; Parameters:    Size  Location     Type
 19200 ;;  point           2   52[COMRAM] const unsigned int 
 19201 ;; Auto vars:     Size  Location     Type
 19202 ;;  fPoint          3   55[COMRAM] const float 
 19203 ;; Return value:  Size  Location     Type
 19204 ;;                  3   52[COMRAM] float 
 19205 ;; Registers used:
 19206 ;;		wreg, status,2, status,0, cstack
 19207 ;; Tracked objects:
 19208 ;;		On entry : 0/0
 19209 ;;		On exit  : 0/0
 19210 ;;		Unchanged: 0/0
 19211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19212 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19213 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19216 ;;Total ram usage:        6 bytes
 19217 ;; Hardware stack levels used:    1
 19218 ;; Hardware stack levels required when called:    2
 19219 ;; This function calls:
 19220 ;;		___lwtoft
 19221 ;;		i2___ftdiv
 19222 ;;		i2___ftmul
 19223 ;; This function is called by:
 19224 ;;		_read_accelerometer
 19225 ;; This function uses a non-reentrant model
 19226 ;;
 19227                           
 19228                           	psect	text73
 19229  006A6C                     __ptext73:
 19230                           	opt stack 0
 19231  006A6C                     _pointToVoltage:
 19232                           	opt stack 17
 19233                           
 19234                           ;functions.c: 204: const float fPoint = (float) point;
 19235                           
 19236                           ;incstack = 0
 19237  006A6C  C035  F009         	movff	pointToVoltage@point,___lwtoft@c
 19238  006A70  C036  F00A         	movff	pointToVoltage@point+1,___lwtoft@c+1
 19239  006A74  ECC9  F037         	call	___lwtoft	;wreg free
 19240  006A78  C009  F038         	movff	?___lwtoft,pointToVoltage@fPoint
 19241  006A7C  C00A  F039         	movff	?___lwtoft+1,pointToVoltage@fPoint+1
 19242  006A80  C00B  F03A         	movff	?___lwtoft+2,pointToVoltage@fPoint+2
 19243                           
 19244                           ;functions.c: 205: return (3.3 * fPoint) / 4096;
 19245  006A84  0E33               	movlw	51
 19246  006A86  6E1A               	movwf	i2___ftmul@f2,c
 19247  006A88  0E53               	movlw	83
 19248  006A8A  6E1B               	movwf	i2___ftmul@f2+1,c
 19249  006A8C  0E40               	movlw	64
 19250  006A8E  6E1C               	movwf	i2___ftmul@f2+2,c
 19251  006A90  C038  F017         	movff	pointToVoltage@fPoint,i2___ftmul@f1
 19252  006A94  C039  F018         	movff	pointToVoltage@fPoint+1,i2___ftmul@f1+1
 19253  006A98  C03A  F019         	movff	pointToVoltage@fPoint+2,i2___ftmul@f1+2
 19254  006A9C  EC6C  F02E         	call	i2___ftmul	;wreg free
 19255  006AA0  C017  F026         	movff	?i2___ftmul,i2___ftdiv@f1
 19256  006AA4  C018  F027         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
 19257  006AA8  C019  F028         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
 19258  006AAC  0E00               	movlw	0
 19259  006AAE  6E29               	movwf	i2___ftdiv@f2,c
 19260  006AB0  0E80               	movlw	128
 19261  006AB2  6E2A               	movwf	i2___ftdiv@f2+1,c
 19262  006AB4  0E45               	movlw	69
 19263  006AB6  6E2B               	movwf	i2___ftdiv@f2+2,c
 19264  006AB8  ECDD  F02F         	call	i2___ftdiv	;wreg free
 19265  006ABC  C026  F035         	movff	?i2___ftdiv,?_pointToVoltage
 19266  006AC0  C027  F036         	movff	?i2___ftdiv+1,?_pointToVoltage+1
 19267  006AC4  C028  F037         	movff	?i2___ftdiv+2,?_pointToVoltage+2
 19268  006AC8  0012               	return	
 19269  006ACA                     __end_of_pointToVoltage:
 19270                           	opt stack 0
 19271                           pclatu	equ	0xFFB
 19272                           pclath	equ	0xFFA
 19273                           tblptru	equ	0xFF8
 19274                           tblptrh	equ	0xFF7
 19275                           tblptrl	equ	0xFF6
 19276                           tablat	equ	0xFF5
 19277                           prodh	equ	0xFF4
 19278                           prodl	equ	0xFF3
 19279                           intcon	equ	0xFF2
 19280                           intcon3	equ	0xFF0
 19281                           indf0	equ	0xFEF
 19282                           fsr0h	equ	0xFEA
 19283                           fsr0l	equ	0xFE9
 19284                           wreg	equ	0xFE8
 19285                           fsr1h	equ	0xFE2
 19286                           fsr1l	equ	0xFE1
 19287                           indf2	equ	0xFDF
 19288                           postinc2	equ	0xFDE
 19289                           postdec2	equ	0xFDD
 19290                           fsr2h	equ	0xFDA
 19291                           fsr2l	equ	0xFD9
 19292                           status	equ	0xFD8
 19293                           
 19294 ;; *************** function i2___ftmul *****************
 19295 ;; Defined at:
 19296 ;;		line 51 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftmul.c"
 19297 ;; Parameters:    Size  Location     Type
 19298 ;;  f1              3   22[COMRAM] float 
 19299 ;;  f2              3   25[COMRAM] float 
 19300 ;; Auto vars:     Size  Location     Type
 19301 ;;  __ftmul         3   32[COMRAM] unsigned um
 19302 ;;  __ftmul         1   36[COMRAM] unsigned char 
 19303 ;;  __ftmul         1   35[COMRAM] unsigned char 
 19304 ;;  __ftmul         1   31[COMRAM] unsigned char 
 19305 ;; Return value:  Size  Location     Type
 19306 ;;                  3   22[COMRAM] float 
 19307 ;; Registers used:
 19308 ;;		wreg, status,2, status,0, cstack
 19309 ;; Tracked objects:
 19310 ;;		On entry : 0/0
 19311 ;;		On exit  : 0/0
 19312 ;;		Unchanged: 0/0
 19313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19314 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19315 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19316 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19317 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19318 ;;Total ram usage:       15 bytes
 19319 ;; Hardware stack levels used:    1
 19320 ;; Hardware stack levels required when called:    1
 19321 ;; This function calls:
 19322 ;;		i2___ftpack
 19323 ;; This function is called by:
 19324 ;;		_pointToVoltage
 19325 ;;		i2_fround
 19326 ;;		i2_scale
 19327 ;;		i2_sprintf
 19328 ;;		i2___asftmul
 19329 ;; This function uses a non-reentrant model
 19330 ;;
 19331                           
 19332                           	psect	text74
 19333  005CD8                     __ptext74:
 19334                           	opt stack 0
 19335  005CD8                     i2___ftmul:
 19336                           	opt stack 18
 19337                           
 19338                           ;incstack = 0
 19339  005CD8  C019  F01D         	movff	i2___ftmul@f1+2,??i2___ftmul
 19340  005CDC  6A1E               	clrf	(??i2___ftmul+1)& (0+255),c
 19341  005CDE  6A1F               	clrf	(??i2___ftmul+2)& (0+255),c
 19342  005CE0  3418               	rlcf	i2___ftmul@f1+1,w,c
 19343  005CE2  361D               	rlcf	??i2___ftmul& (0+255),f,c
 19344  005CE4  E301               	bnc	u427_41
 19345  005CE6  801E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 19346  005CE8                     u427_41:
 19347  005CE8  501D               	movf	??i2___ftmul,w,c
 19348  005CEA  6E20               	movwf	i2___ftmul@exp,c
 19349  005CEC  6620               	tstfsz	i2___ftmul@exp& (0+255),c
 19350  005CEE  D007               	goto	i2l6403
 19351  005CF0  0E00               	movlw	0
 19352  005CF2  6E17               	movwf	?i2___ftmul,c
 19353  005CF4  0E00               	movlw	0
 19354  005CF6  6E18               	movwf	?i2___ftmul+1,c
 19355  005CF8  0E00               	movlw	0
 19356  005CFA  6E19               	movwf	?i2___ftmul+2,c
 19357  005CFC  0012               	return	
 19358  005CFE                     i2l6403:
 19359  005CFE  C01C  F01D         	movff	i2___ftmul@f2+2,??i2___ftmul
 19360  005D02  6A1E               	clrf	(??i2___ftmul+1)& (0+255),c
 19361  005D04  6A1F               	clrf	(??i2___ftmul+2)& (0+255),c
 19362  005D06  341B               	rlcf	i2___ftmul@f2+1,w,c
 19363  005D08  361D               	rlcf	??i2___ftmul& (0+255),f,c
 19364  005D0A  E301               	bnc	u429_41
 19365  005D0C  801E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 19366  005D0E                     u429_41:
 19367  005D0E  501D               	movf	??i2___ftmul,w,c
 19368  005D10  6E25               	movwf	i2___ftmul@sign,c
 19369  005D12  6625               	tstfsz	i2___ftmul@sign& (0+255),c
 19370  005D14  D007               	goto	i2l6409
 19371  005D16  0E00               	movlw	0
 19372  005D18  6E17               	movwf	?i2___ftmul,c
 19373  005D1A  0E00               	movlw	0
 19374  005D1C  6E18               	movwf	?i2___ftmul+1,c
 19375  005D1E  0E00               	movlw	0
 19376  005D20  6E19               	movwf	?i2___ftmul+2,c
 19377  005D22  0012               	return	
 19378  005D24                     i2l6409:
 19379  005D24  5025               	movf	i2___ftmul@sign,w,c
 19380  005D26  0F7B               	addlw	123
 19381  005D28  2620               	addwf	i2___ftmul@exp,f,c
 19382  005D2A  C019  F025         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 19383  005D2E  501C               	movf	i2___ftmul@f2+2,w,c
 19384  005D30  1A25               	xorwf	i2___ftmul@sign,f,c
 19385  005D32  0E80               	movlw	128
 19386  005D34  1625               	andwf	i2___ftmul@sign,f,c
 19387  005D36  8E18               	bsf	i2___ftmul@f1+1,7,c
 19388  005D38  8E1B               	bsf	i2___ftmul@f2+1,7,c
 19389  005D3A  0EFF               	movlw	255
 19390  005D3C  161A               	andwf	i2___ftmul@f2,f,c
 19391  005D3E  0EFF               	movlw	255
 19392  005D40  161B               	andwf	i2___ftmul@f2+1,f,c
 19393  005D42  0E00               	movlw	0
 19394  005D44  161C               	andwf	i2___ftmul@f2+2,f,c
 19395  005D46  0E00               	movlw	0
 19396  005D48  6E21               	movwf	i2___ftmul@f3_as_product,c
 19397  005D4A  0E00               	movlw	0
 19398  005D4C  6E22               	movwf	i2___ftmul@f3_as_product+1,c
 19399  005D4E  0E00               	movlw	0
 19400  005D50  6E23               	movwf	i2___ftmul@f3_as_product+2,c
 19401  005D52  6E1D               	movwf	??i2___ftmul& (0+255),c
 19402  005D54  0E07               	movlw	7
 19403  005D56  6E24               	movwf	i2___ftmul@cntr,c
 19404  005D58  501D               	movf	??i2___ftmul& (0+255),w,c
 19405  005D5A                     i2l6423:
 19406  005D5A  A017               	btfss	i2___ftmul@f1,0,c
 19407  005D5C  D006               	goto	i2l6427
 19408  005D5E  501A               	movf	i2___ftmul@f2,w,c
 19409  005D60  2621               	addwf	i2___ftmul@f3_as_product,f,c
 19410  005D62  501B               	movf	i2___ftmul@f2+1,w,c
 19411  005D64  2222               	addwfc	i2___ftmul@f3_as_product+1,f,c
 19412  005D66  501C               	movf	i2___ftmul@f2+2,w,c
 19413  005D68  2223               	addwfc	i2___ftmul@f3_as_product+2,f,c
 19414  005D6A                     i2l6427:
 19415  005D6A  90D8               	bcf	status,0,c
 19416  005D6C  3219               	rrcf	i2___ftmul@f1+2,f,c
 19417  005D6E  3218               	rrcf	i2___ftmul@f1+1,f,c
 19418  005D70  3217               	rrcf	i2___ftmul@f1,f,c
 19419  005D72  90D8               	bcf	status,0,c
 19420  005D74  361A               	rlcf	i2___ftmul@f2,f,c
 19421  005D76  361B               	rlcf	i2___ftmul@f2+1,f,c
 19422  005D78  361C               	rlcf	i2___ftmul@f2+2,f,c
 19423  005D7A  2E24               	decfsz	i2___ftmul@cntr,f,c
 19424  005D7C  D7EE               	goto	i2l6423
 19425  005D7E  6E1D               	movwf	??i2___ftmul& (0+255),c
 19426  005D80  0E09               	movlw	9
 19427  005D82  6E24               	movwf	i2___ftmul@cntr,c
 19428  005D84  501D               	movf	??i2___ftmul& (0+255),w,c
 19429  005D86                     i2l6433:
 19430  005D86  A017               	btfss	i2___ftmul@f1,0,c
 19431  005D88  D006               	goto	i2l6437
 19432  005D8A  501A               	movf	i2___ftmul@f2,w,c
 19433  005D8C  2621               	addwf	i2___ftmul@f3_as_product,f,c
 19434  005D8E  501B               	movf	i2___ftmul@f2+1,w,c
 19435  005D90  2222               	addwfc	i2___ftmul@f3_as_product+1,f,c
 19436  005D92  501C               	movf	i2___ftmul@f2+2,w,c
 19437  005D94  2223               	addwfc	i2___ftmul@f3_as_product+2,f,c
 19438  005D96                     i2l6437:
 19439  005D96  90D8               	bcf	status,0,c
 19440  005D98  3219               	rrcf	i2___ftmul@f1+2,f,c
 19441  005D9A  3218               	rrcf	i2___ftmul@f1+1,f,c
 19442  005D9C  3217               	rrcf	i2___ftmul@f1,f,c
 19443  005D9E  90D8               	bcf	status,0,c
 19444  005DA0  3223               	rrcf	i2___ftmul@f3_as_product+2,f,c
 19445  005DA2  3222               	rrcf	i2___ftmul@f3_as_product+1,f,c
 19446  005DA4  3221               	rrcf	i2___ftmul@f3_as_product,f,c
 19447  005DA6  2E24               	decfsz	i2___ftmul@cntr,f,c
 19448  005DA8  D7EE               	goto	i2l6433
 19449  005DAA  C021  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 19450  005DAE  C022  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 19451  005DB2  C023  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 19452  005DB6  C020  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 19453  005DBA  C025  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 19454  005DBE  ECEA  F031         	call	i2___ftpack	;wreg free
 19455  005DC2  C001  F017         	movff	?i2___ftpack,?i2___ftmul
 19456  005DC6  C002  F018         	movff	?i2___ftpack+1,?i2___ftmul+1
 19457  005DCA  C003  F019         	movff	?i2___ftpack+2,?i2___ftmul+2
 19458  005DCE  0012               	return	
 19459  005DD0                     __end_ofi2___ftmul:
 19460                           	opt stack 0
 19461                           pclatu	equ	0xFFB
 19462                           pclath	equ	0xFFA
 19463                           tblptru	equ	0xFF8
 19464                           tblptrh	equ	0xFF7
 19465                           tblptrl	equ	0xFF6
 19466                           tablat	equ	0xFF5
 19467                           prodh	equ	0xFF4
 19468                           prodl	equ	0xFF3
 19469                           intcon	equ	0xFF2
 19470                           intcon3	equ	0xFF0
 19471                           indf0	equ	0xFEF
 19472                           fsr0h	equ	0xFEA
 19473                           fsr0l	equ	0xFE9
 19474                           wreg	equ	0xFE8
 19475                           fsr1h	equ	0xFE2
 19476                           fsr1l	equ	0xFE1
 19477                           indf2	equ	0xFDF
 19478                           postinc2	equ	0xFDE
 19479                           postdec2	equ	0xFDD
 19480                           fsr2h	equ	0xFDA
 19481                           fsr2l	equ	0xFD9
 19482                           status	equ	0xFD8
 19483                           
 19484 ;; *************** function i2___ftdiv *****************
 19485 ;; Defined at:
 19486 ;;		line 49 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\ftdiv.c"
 19487 ;; Parameters:    Size  Location     Type
 19488 ;;  f1              3   37[COMRAM] float 
 19489 ;;  f2              3   40[COMRAM] float 
 19490 ;; Auto vars:     Size  Location     Type
 19491 ;;  __ftdiv         3   47[COMRAM] float 
 19492 ;;  __ftdiv         1   51[COMRAM] unsigned char 
 19493 ;;  __ftdiv         1   50[COMRAM] unsigned char 
 19494 ;;  __ftdiv         1   46[COMRAM] unsigned char 
 19495 ;; Return value:  Size  Location     Type
 19496 ;;                  3   37[COMRAM] float 
 19497 ;; Registers used:
 19498 ;;		wreg, status,2, status,0, cstack
 19499 ;; Tracked objects:
 19500 ;;		On entry : 0/0
 19501 ;;		On exit  : 0/0
 19502 ;;		Unchanged: 0/0
 19503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19504 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19505 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19506 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19507 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19508 ;;Total ram usage:       15 bytes
 19509 ;; Hardware stack levels used:    1
 19510 ;; Hardware stack levels required when called:    1
 19511 ;; This function calls:
 19512 ;;		i2___ftpack
 19513 ;; This function is called by:
 19514 ;;		_single_axis_measure
 19515 ;;		_pointToVoltage
 19516 ;;		_voltageToG
 19517 ;; This function uses a non-reentrant model
 19518 ;;
 19519                           
 19520                           	psect	text75
 19521  005FBA                     __ptext75:
 19522                           	opt stack 0
 19523  005FBA                     i2___ftdiv:
 19524                           	opt stack 19
 19525                           
 19526                           ;incstack = 0
 19527  005FBA  C028  F02C         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 19528  005FBE  6A2D               	clrf	(??i2___ftdiv+1)& (0+255),c
 19529  005FC0  6A2E               	clrf	(??i2___ftdiv+2)& (0+255),c
 19530  005FC2  3427               	rlcf	i2___ftdiv@f1+1,w,c
 19531  005FC4  362C               	rlcf	??i2___ftdiv& (0+255),f,c
 19532  005FC6  E301               	bnc	u422_41
 19533  005FC8  802D               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 19534  005FCA                     u422_41:
 19535  005FCA  502C               	movf	??i2___ftdiv,w,c
 19536  005FCC  6E33               	movwf	i2___ftdiv@exp,c
 19537  005FCE  6633               	tstfsz	i2___ftdiv@exp& (0+255),c
 19538  005FD0  D007               	goto	i2l6359
 19539  005FD2  0E00               	movlw	0
 19540  005FD4  6E26               	movwf	?i2___ftdiv,c
 19541  005FD6  0E00               	movlw	0
 19542  005FD8  6E27               	movwf	?i2___ftdiv+1,c
 19543  005FDA  0E00               	movlw	0
 19544  005FDC  6E28               	movwf	?i2___ftdiv+2,c
 19545  005FDE  0012               	return	
 19546  005FE0                     i2l6359:
 19547  005FE0  C02B  F02C         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 19548  005FE4  6A2D               	clrf	(??i2___ftdiv+1)& (0+255),c
 19549  005FE6  6A2E               	clrf	(??i2___ftdiv+2)& (0+255),c
 19550  005FE8  342A               	rlcf	i2___ftdiv@f2+1,w,c
 19551  005FEA  362C               	rlcf	??i2___ftdiv& (0+255),f,c
 19552  005FEC  E301               	bnc	u424_41
 19553  005FEE  802D               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 19554  005FF0                     u424_41:
 19555  005FF0  502C               	movf	??i2___ftdiv,w,c
 19556  005FF2  6E34               	movwf	i2___ftdiv@sign,c
 19557  005FF4  6634               	tstfsz	i2___ftdiv@sign& (0+255),c
 19558  005FF6  D007               	goto	i2l6365
 19559  005FF8  0E00               	movlw	0
 19560  005FFA  6E26               	movwf	?i2___ftdiv,c
 19561  005FFC  0E00               	movlw	0
 19562  005FFE  6E27               	movwf	?i2___ftdiv+1,c
 19563  006000  0E00               	movlw	0
 19564  006002  6E28               	movwf	?i2___ftdiv+2,c
 19565  006004  0012               	return	
 19566  006006                     i2l6365:
 19567  006006  0E00               	movlw	0
 19568  006008  6E30               	movwf	i2___ftdiv@f3,c
 19569  00600A  0E00               	movlw	0
 19570  00600C  6E31               	movwf	i2___ftdiv@f3+1,c
 19571  00600E  0E00               	movlw	0
 19572  006010  6E32               	movwf	i2___ftdiv@f3+2,c
 19573  006012  5034               	movf	i2___ftdiv@sign,w,c
 19574  006014  0F89               	addlw	137
 19575  006016  5E33               	subwf	i2___ftdiv@exp,f,c
 19576  006018  C028  F034         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 19577  00601C  502B               	movf	i2___ftdiv@f2+2,w,c
 19578  00601E  1A34               	xorwf	i2___ftdiv@sign,f,c
 19579  006020  0E80               	movlw	128
 19580  006022  1634               	andwf	i2___ftdiv@sign,f,c
 19581  006024  8E27               	bsf	i2___ftdiv@f1+1,7,c
 19582  006026  0EFF               	movlw	255
 19583  006028  1626               	andwf	i2___ftdiv@f1,f,c
 19584  00602A  0EFF               	movlw	255
 19585  00602C  1627               	andwf	i2___ftdiv@f1+1,f,c
 19586  00602E  0E00               	movlw	0
 19587  006030  1628               	andwf	i2___ftdiv@f1+2,f,c
 19588  006032  8E2A               	bsf	i2___ftdiv@f2+1,7,c
 19589  006034  0EFF               	movlw	255
 19590  006036  1629               	andwf	i2___ftdiv@f2,f,c
 19591  006038  0EFF               	movlw	255
 19592  00603A  162A               	andwf	i2___ftdiv@f2+1,f,c
 19593  00603C  0E00               	movlw	0
 19594  00603E  162B               	andwf	i2___ftdiv@f2+2,f,c
 19595  006040  6E2C               	movwf	??i2___ftdiv& (0+255),c
 19596  006042  0E18               	movlw	24
 19597  006044  6E2F               	movwf	i2___ftdiv@cntr,c
 19598  006046  502C               	movf	??i2___ftdiv& (0+255),w,c
 19599  006048                     i2l750:
 19600  006048  90D8               	bcf	status,0,c
 19601  00604A  3630               	rlcf	i2___ftdiv@f3,f,c
 19602  00604C  3631               	rlcf	i2___ftdiv@f3+1,f,c
 19603  00604E  3632               	rlcf	i2___ftdiv@f3+2,f,c
 19604  006050  5029               	movf	i2___ftdiv@f2,w,c
 19605  006052  5C26               	subwf	i2___ftdiv@f1,w,c
 19606  006054  502A               	movf	i2___ftdiv@f2+1,w,c
 19607  006056  5827               	subwfb	i2___ftdiv@f1+1,w,c
 19608  006058  502B               	movf	i2___ftdiv@f2+2,w,c
 19609  00605A  5828               	subwfb	i2___ftdiv@f1+2,w,c
 19610  00605C  A0D8               	btfss	status,0,c
 19611  00605E  D007               	goto	i2l751
 19612  006060  5029               	movf	i2___ftdiv@f2,w,c
 19613  006062  5E26               	subwf	i2___ftdiv@f1,f,c
 19614  006064  502A               	movf	i2___ftdiv@f2+1,w,c
 19615  006066  5A27               	subwfb	i2___ftdiv@f1+1,f,c
 19616  006068  502B               	movf	i2___ftdiv@f2+2,w,c
 19617  00606A  5A28               	subwfb	i2___ftdiv@f1+2,f,c
 19618  00606C  8030               	bsf	i2___ftdiv@f3,0,c
 19619  00606E                     i2l751:
 19620  00606E  90D8               	bcf	status,0,c
 19621  006070  3626               	rlcf	i2___ftdiv@f1,f,c
 19622  006072  3627               	rlcf	i2___ftdiv@f1+1,f,c
 19623  006074  3628               	rlcf	i2___ftdiv@f1+2,f,c
 19624  006076  2E2F               	decfsz	i2___ftdiv@cntr,f,c
 19625  006078  D7E7               	goto	i2l750
 19626  00607A  C030  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 19627  00607E  C031  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 19628  006082  C032  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 19629  006086  C033  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 19630  00608A  C034  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 19631  00608E  ECEA  F031         	call	i2___ftpack	;wreg free
 19632  006092  C001  F026         	movff	?i2___ftpack,?i2___ftdiv
 19633  006096  C002  F027         	movff	?i2___ftpack+1,?i2___ftdiv+1
 19634  00609A  C003  F028         	movff	?i2___ftpack+2,?i2___ftdiv+2
 19635  00609E  0012               	return	
 19636  0060A0                     __end_ofi2___ftdiv:
 19637                           	opt stack 0
 19638                           pclatu	equ	0xFFB
 19639                           pclath	equ	0xFFA
 19640                           tblptru	equ	0xFF8
 19641                           tblptrh	equ	0xFF7
 19642                           tblptrl	equ	0xFF6
 19643                           tablat	equ	0xFF5
 19644                           prodh	equ	0xFF4
 19645                           prodl	equ	0xFF3
 19646                           intcon	equ	0xFF2
 19647                           intcon3	equ	0xFF0
 19648                           indf0	equ	0xFEF
 19649                           fsr0h	equ	0xFEA
 19650                           fsr0l	equ	0xFE9
 19651                           wreg	equ	0xFE8
 19652                           fsr1h	equ	0xFE2
 19653                           fsr1l	equ	0xFE1
 19654                           indf2	equ	0xFDF
 19655                           postinc2	equ	0xFDE
 19656                           postdec2	equ	0xFDD
 19657                           fsr2h	equ	0xFDA
 19658                           fsr2l	equ	0xFD9
 19659                           status	equ	0xFD8
 19660                           
 19661 ;; *************** function ___lwtoft *****************
 19662 ;; Defined at:
 19663 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\lwtoft.c"
 19664 ;; Parameters:    Size  Location     Type
 19665 ;;  c               2    8[COMRAM] unsigned int 
 19666 ;; Auto vars:     Size  Location     Type
 19667 ;;		None
 19668 ;; Return value:  Size  Location     Type
 19669 ;;                  3    8[COMRAM] float 
 19670 ;; Registers used:
 19671 ;;		wreg, status,2, status,0, cstack
 19672 ;; Tracked objects:
 19673 ;;		On entry : 0/0
 19674 ;;		On exit  : 0/0
 19675 ;;		Unchanged: 0/0
 19676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19677 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19680 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19681 ;;Total ram usage:        5 bytes
 19682 ;; Hardware stack levels used:    1
 19683 ;; Hardware stack levels required when called:    1
 19684 ;; This function calls:
 19685 ;;		i2___ftpack
 19686 ;; This function is called by:
 19687 ;;		_single_axis_measure
 19688 ;;		_pointToVoltage
 19689 ;; This function uses a non-reentrant model
 19690 ;;
 19691                           
 19692                           	psect	text76
 19693  006F92                     __ptext76:
 19694                           	opt stack 0
 19695  006F92                     ___lwtoft:
 19696                           	opt stack 17
 19697                           
 19698                           ;incstack = 0
 19699  006F92  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 19700  006F96  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 19701  006F9A  6A03               	clrf	i2___ftpack@arg+2,c
 19702  006F9C  6E0C               	movwf	??___lwtoft& (0+255),c
 19703  006F9E  0E8E               	movlw	142
 19704  006FA0  6E04               	movwf	i2___ftpack@exp,c
 19705  006FA2  500C               	movf	??___lwtoft& (0+255),w,c
 19706  006FA4  6E0D               	movwf	(??___lwtoft+1)& (0+255),c
 19707  006FA6  0E00               	movlw	0
 19708  006FA8  6E05               	movwf	i2___ftpack@sign,c
 19709  006FAA  500D               	movf	(??___lwtoft+1)& (0+255),w,c
 19710  006FAC  ECEA  F031         	call	i2___ftpack	;wreg free
 19711  006FB0  C001  F009         	movff	?i2___ftpack,?___lwtoft
 19712  006FB4  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 19713  006FB8  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 19714  006FBC  0012               	return	
 19715  006FBE                     __end_of___lwtoft:
 19716                           	opt stack 0
 19717                           pclatu	equ	0xFFB
 19718                           pclath	equ	0xFFA
 19719                           tblptru	equ	0xFF8
 19720                           tblptrh	equ	0xFF7
 19721                           tblptrl	equ	0xFF6
 19722                           tablat	equ	0xFF5
 19723                           prodh	equ	0xFF4
 19724                           prodl	equ	0xFF3
 19725                           intcon	equ	0xFF2
 19726                           intcon3	equ	0xFF0
 19727                           indf0	equ	0xFEF
 19728                           fsr0h	equ	0xFEA
 19729                           fsr0l	equ	0xFE9
 19730                           wreg	equ	0xFE8
 19731                           fsr1h	equ	0xFE2
 19732                           fsr1l	equ	0xFE1
 19733                           indf2	equ	0xFDF
 19734                           postinc2	equ	0xFDE
 19735                           postdec2	equ	0xFDD
 19736                           fsr2h	equ	0xFDA
 19737                           fsr2l	equ	0xFD9
 19738                           status	equ	0xFD8
 19739                           
 19740 ;; *************** function i2___ftpack *****************
 19741 ;; Defined at:
 19742 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.31\sources\common\float.c"
 19743 ;; Parameters:    Size  Location     Type
 19744 ;;  arg             3    0[COMRAM] unsigned um
 19745 ;;  exp             1    3[COMRAM] unsigned char 
 19746 ;;  sign            1    4[COMRAM] unsigned char 
 19747 ;; Auto vars:     Size  Location     Type
 19748 ;;		None
 19749 ;; Return value:  Size  Location     Type
 19750 ;;                  3    0[COMRAM] float 
 19751 ;; Registers used:
 19752 ;;		wreg, status,2, status,0
 19753 ;; Tracked objects:
 19754 ;;		On entry : 0/0
 19755 ;;		On exit  : 0/0
 19756 ;;		Unchanged: 0/0
 19757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19758 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19760 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19761 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19762 ;;Total ram usage:        8 bytes
 19763 ;; Hardware stack levels used:    1
 19764 ;; This function calls:
 19765 ;;		Nothing
 19766 ;; This function is called by:
 19767 ;;		___lwtoft
 19768 ;;		i2___ftadd
 19769 ;;		i2___ftdiv
 19770 ;;		i2___ftmul
 19771 ;;		i2___lltoft
 19772 ;; This function uses a non-reentrant model
 19773 ;;
 19774                           
 19775                           	psect	text77
 19776  0063D4                     __ptext77:
 19777                           	opt stack 0
 19778  0063D4                     i2___ftpack:
 19779                           	opt stack 18
 19780                           
 19781                           ;incstack = 0
 19782  0063D4  5004               	movf	i2___ftpack@exp,w,c
 19783  0063D6  B4D8               	btfsc	status,2,c
 19784  0063D8  D005               	goto	i2l6143
 19785  0063DA  5001               	movf	i2___ftpack@arg,w,c
 19786  0063DC  1002               	iorwf	i2___ftpack@arg+1,w,c
 19787  0063DE  1003               	iorwf	i2___ftpack@arg+2,w,c
 19788  0063E0  A4D8               	btfss	status,2,c
 19789  0063E2  D00C               	goto	i2l6149
 19790  0063E4                     i2l6143:
 19791  0063E4  0E00               	movlw	0
 19792  0063E6  6E01               	movwf	?i2___ftpack,c
 19793  0063E8  0E00               	movlw	0
 19794  0063EA  6E02               	movwf	?i2___ftpack+1,c
 19795  0063EC  0E00               	movlw	0
 19796  0063EE  6E03               	movwf	?i2___ftpack+2,c
 19797  0063F0  0012               	return	
 19798  0063F2                     i2l6147:
 19799  0063F2  2A04               	incf	i2___ftpack@exp,f,c
 19800  0063F4  90D8               	bcf	status,0,c
 19801  0063F6  3203               	rrcf	i2___ftpack@arg+2,f,c
 19802  0063F8  3202               	rrcf	i2___ftpack@arg+1,f,c
 19803  0063FA  3201               	rrcf	i2___ftpack@arg,f,c
 19804  0063FC                     i2l6149:
 19805  0063FC  0E00               	movlw	0
 19806  0063FE  1401               	andwf	i2___ftpack@arg,w,c
 19807  006400  6E06               	movwf	??i2___ftpack& (0+255),c
 19808  006402  0E00               	movlw	0
 19809  006404  1402               	andwf	i2___ftpack@arg+1,w,c
 19810  006406  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 19811  006408  0EFE               	movlw	254
 19812  00640A  1403               	andwf	i2___ftpack@arg+2,w,c
 19813  00640C  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 19814  00640E  5006               	movf	??i2___ftpack,w,c
 19815  006410  1007               	iorwf	??i2___ftpack+1,w,c
 19816  006412  1008               	iorwf	??i2___ftpack+2,w,c
 19817  006414  B4D8               	btfsc	status,2,c
 19818  006416  D00C               	goto	i2l6155
 19819  006418  D7EC               	goto	i2l6147
 19820  00641A                     i2l6151:
 19821  00641A  2A04               	incf	i2___ftpack@exp,f,c
 19822  00641C  0E01               	movlw	1
 19823  00641E  2601               	addwf	i2___ftpack@arg,f,c
 19824  006420  0E00               	movlw	0
 19825  006422  2202               	addwfc	i2___ftpack@arg+1,f,c
 19826  006424  0E00               	movlw	0
 19827  006426  2203               	addwfc	i2___ftpack@arg+2,f,c
 19828  006428  90D8               	bcf	status,0,c
 19829  00642A  3203               	rrcf	i2___ftpack@arg+2,f,c
 19830  00642C  3202               	rrcf	i2___ftpack@arg+1,f,c
 19831  00642E  3201               	rrcf	i2___ftpack@arg,f,c
 19832  006430                     i2l6155:
 19833  006430  0E00               	movlw	0
 19834  006432  1401               	andwf	i2___ftpack@arg,w,c
 19835  006434  6E06               	movwf	??i2___ftpack& (0+255),c
 19836  006436  0E00               	movlw	0
 19837  006438  1402               	andwf	i2___ftpack@arg+1,w,c
 19838  00643A  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 19839  00643C  0EFF               	movlw	255
 19840  00643E  1403               	andwf	i2___ftpack@arg+2,w,c
 19841  006440  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 19842  006442  5006               	movf	??i2___ftpack,w,c
 19843  006444  1007               	iorwf	??i2___ftpack+1,w,c
 19844  006446  1008               	iorwf	??i2___ftpack+2,w,c
 19845  006448  B4D8               	btfsc	status,2,c
 19846  00644A  D006               	goto	i2l6159
 19847  00644C  D7E6               	goto	i2l6151
 19848  00644E                     i2l6157:
 19849  00644E  0604               	decf	i2___ftpack@exp,f,c
 19850  006450  90D8               	bcf	status,0,c
 19851  006452  3601               	rlcf	i2___ftpack@arg,f,c
 19852  006454  3602               	rlcf	i2___ftpack@arg+1,f,c
 19853  006456  3603               	rlcf	i2___ftpack@arg+2,f,c
 19854  006458                     i2l6159:
 19855  006458  AE02               	btfss	i2___ftpack@arg+1,7,c
 19856  00645A  D7F9               	goto	i2l6157
 19857  00645C  A004               	btfss	i2___ftpack@exp,0,c
 19858  00645E  9E02               	bcf	i2___ftpack@arg+1,7,c
 19859  006460  90D8               	bcf	status,0,c
 19860  006462  3204               	rrcf	i2___ftpack@exp,f,c
 19861  006464  5004               	movf	i2___ftpack@exp,w,c
 19862  006466  1203               	iorwf	i2___ftpack@arg+2,f,c
 19863  006468  5005               	movf	i2___ftpack@sign,w,c
 19864  00646A  A4D8               	btfss	status,2,c
 19865  00646C  8E03               	bsf	i2___ftpack@arg+2,7,c
 19866  00646E  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 19867  006472  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 19868  006476  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 19869  00647A  0012               	return	
 19870  00647C                     __end_ofi2___ftpack:
 19871                           	opt stack 0
 19872                           pclatu	equ	0xFFB
 19873                           pclath	equ	0xFFA
 19874                           tblptru	equ	0xFF8
 19875                           tblptrh	equ	0xFF7
 19876                           tblptrl	equ	0xFF6
 19877                           tablat	equ	0xFF5
 19878                           prodh	equ	0xFF4
 19879                           prodl	equ	0xFF3
 19880                           intcon	equ	0xFF2
 19881                           intcon3	equ	0xFF0
 19882                           indf0	equ	0xFEF
 19883                           fsr0h	equ	0xFEA
 19884                           fsr0l	equ	0xFE9
 19885                           wreg	equ	0xFE8
 19886                           fsr1h	equ	0xFE2
 19887                           fsr1l	equ	0xFE1
 19888                           indf2	equ	0xFDF
 19889                           postinc2	equ	0xFDE
 19890                           postdec2	equ	0xFDD
 19891                           fsr2h	equ	0xFDA
 19892                           fsr2l	equ	0xFD9
 19893                           status	equ	0xFD8
 19894                           pclatu	equ	0xFFB
 19895                           pclath	equ	0xFFA
 19896                           tblptru	equ	0xFF8
 19897                           tblptrh	equ	0xFF7
 19898                           tblptrl	equ	0xFF6
 19899                           tablat	equ	0xFF5
 19900                           prodh	equ	0xFF4
 19901                           prodl	equ	0xFF3
 19902                           intcon	equ	0xFF2
 19903                           intcon3	equ	0xFF0
 19904                           indf0	equ	0xFEF
 19905                           fsr0h	equ	0xFEA
 19906                           fsr0l	equ	0xFE9
 19907                           wreg	equ	0xFE8
 19908                           fsr1h	equ	0xFE2
 19909                           fsr1l	equ	0xFE1
 19910                           indf2	equ	0xFDF
 19911                           postinc2	equ	0xFDE
 19912                           postdec2	equ	0xFDD
 19913                           fsr2h	equ	0xFDA
 19914                           fsr2l	equ	0xFD9
 19915                           status	equ	0xFD8
 19916                           
 19917                           	psect	rparam
 19918  0000                     pclatu	equ	0xFFB
 19919                           pclath	equ	0xFFA
 19920                           tblptru	equ	0xFF8
 19921                           tblptrh	equ	0xFF7
 19922                           tblptrl	equ	0xFF6
 19923                           tablat	equ	0xFF5
 19924                           prodh	equ	0xFF4
 19925                           prodl	equ	0xFF3
 19926                           intcon	equ	0xFF2
 19927                           intcon3	equ	0xFF0
 19928                           indf0	equ	0xFEF
 19929                           fsr0h	equ	0xFEA
 19930                           fsr0l	equ	0xFE9
 19931                           wreg	equ	0xFE8
 19932                           fsr1h	equ	0xFE2
 19933                           fsr1l	equ	0xFE1
 19934                           indf2	equ	0xFDF
 19935                           postinc2	equ	0xFDE
 19936                           postdec2	equ	0xFDD
 19937                           fsr2h	equ	0xFDA
 19938                           fsr2l	equ	0xFD9
 19939                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    118
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      93
    BANK0           160     99      99
    BANK1           256    125     125
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@integ(BANK1[3]), 

    __asftadd@f1p	PTR float  size(2) Largest target is 3
		 -> sprintf@fval(BANK1[3]), readDistance@a(BANK1[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_4(CODE[10]), 
		 -> STR_3(CODE[12]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> showAccelerometerVal@buffer(BANK0[10]), showTempLight@buffer(COMRAM[10]), showDistance@buffer(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_sprintf(COMRAM[2]), ?_sprintf(BANK1[2]), 

    S1043$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    lcdWriteStrC@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_10(CODE[14]), STR_9(CODE[9]), showAccelerometerVal@buffer(BANK0[10]), STR_5(CODE[15]), 
		 -> showTempLight@buffer(COMRAM[10]), showDistance@buffer(BANK1[10]), STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_showAccelerometerVal
    _showAccelerometerVal->i2_sprintf
    i2_sprintf->_single_axis_measure
    i2_scale->i2___ftmul
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2_scale
    i2___asftsub->i2___ftsub
    i2___ftsub->i2___ftadd
    i2___asftmul->i2___ftmul
    i2___asftadd->i2_fround
    i2_lcdWriteStrC->i2_lcdWriteChar
    i2_lcdWriteChar->i2_writeByte
    i2_lcdSetPos->i2_lcdWriteCmd
    i2_lcdClear->i2_lcdWriteCmd
    i2_lcdWriteCmd->i2_writeByte
    i2_writeByte->i2_writeDigit
    _single_axis_measure->_read_accelerometer
    i2___ftge->___lwtoft
    _voltageToG->i2___ftdiv
    i2___ftadd->i2___ftpack
    _read_accelerometer->_pointToVoltage
    _pointToVoltage->i2___ftdiv
    i2___ftmul->i2___wmul
    i2___ftdiv->i2___ftmul
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_showDistance
    _sprintf->___ftmul
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___asftmul->___ftmul
    _readDistance->___ftmul
    _readTempF->___ftmul
    ___ftmul->___wmul
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___ftadd->___ftmul
    _lcdInit->_intro
    _intro->_lcdClean
    _lcdWriteStrC->_lcdWriteChar
    _lcdClean->_lcdSetPos
    _lcdWriteChar->_writeByte
    _lcdSetPos->_lcdWriteCmd
    _lcdClear->_lcdWriteCmd
    _lcdWriteCmd->_writeByte
    _writeByte->_writeDigit

Critical Paths under _ISR in BANK0

    _ISR->_showAccelerometerVal
    _showAccelerometerVal->i2_sprintf

Critical Paths under _main in BANK1

    _main->_showDistance
    _showDistance->_sprintf
    _sprintf->_readDistance
    ___fttol->_scale
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    _readDistance->_readTempF
    _readTempF->___ftdiv
    ___ftdiv->___ftadd
    ___asftadd->___ftadd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     3      5   79406
                                            117 BANK1      8     3      5
                            _lcdInit
                           _setServo
                       _showDistance
 ---------------------------------------------------------------------------------
 (1) _showDistance                                        11    11      0   75335
                                             98 BANK0      1     1      0
                                            107 BANK1     10    10      0
                           _lcdClear
                          _lcdSetPos
                       _lcdWriteStrC
                       _readDistance
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             54    47      7   45595
                                             57 BANK1     50    43      7
                          ___asftadd
                          ___asftmul
                          ___asftsub
                            ___awdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                       _readDistance (ARG)
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3    9353
                                              0 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             61 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3    9155
                                              0 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2069
                                             77 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1250
                                             61 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1360
                                             68 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     409
                                             61 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          16    10      6     569
                                             61 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    1807
                                             69 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     583
                                             75 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     480
                                             61 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     411
                                              7 BANK1     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                             61 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     562
                                             61 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___asftsub                                            5     0      5    3486
                                             18 BANK1      5     0      5
                            ___ftsub
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    3314
                                             12 BANK1      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___asftmul                                            5     0      5    4357
                                              0 BANK1      5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _readDistance                                        19    16      3   27881
                                             38 BANK1     19    16      3
                          ___asftadd
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                          _readTempF
 ---------------------------------------------------------------------------------
 (3) _readTempF                                           11     8      3   12307
                                             27 BANK1     11     8      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                               _read
 ---------------------------------------------------------------------------------
 (4) _read                                                 6     4      2     179
                                             61 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4185
                                             83 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    2737
                                             12 BANK1     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             5     2      3    1882
                                             69 BANK0      5     2      3
                           ___ftpack
                               _read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___asftadd                                            5     0      5    3441
                                             12 BANK1      5     0      5
                            ___ftadd
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    3163
                                              0 BANK1     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                               _read (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1685
                                             61 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _setServo                                            15    13      2     336
                                             61 BANK0     15    13      2
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              9     9      0    3599
                                             76 BANK0      9     9      0
                              _intro
                        _lcdWriteCmd
                         _writeDigit
 ---------------------------------------------------------------------------------
 (2) _intro                                                3     3      0    3105
                                             73 BANK0      3     3      0
                           _lcdClean
                          _lcdSetPos
                       _lcdWriteStrC
 ---------------------------------------------------------------------------------
 (2) _lcdWriteStrC                                         2     0      2     625
                                             64 BANK0      2     0      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (3) _lcdClean                                             3     3      0    1518
                                             70 BANK0      3     3      0
                           _lcdClear
                          _lcdSetPos
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (3) _lcdWriteChar                                         1     1      0     154
                                             63 BANK0      1     1      0
                          _writeByte
 ---------------------------------------------------------------------------------
 (2) _lcdSetPos                                            3     2      1     916
                                             67 BANK0      3     2      1
                        _lcdWriteCmd
 ---------------------------------------------------------------------------------
 (2) _lcdClear                                             0     0      0     222
                        _lcdWriteCmd
 ---------------------------------------------------------------------------------
 (3) _lcdWriteCmd                                          4     4      0     222
                                             63 BANK0      4     4      0
                          _writeByte
 ---------------------------------------------------------------------------------
 (4) _writeByte                                            1     1      0     132
                                             62 BANK0      1     1      0
                         _writeDigit
 ---------------------------------------------------------------------------------
 (5) _writeDigit                                           1     1      0      88
                                             61 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                 14    14      0   36746
                                             47 BANK0     14    14      0
               _showAccelerometerVal
 ---------------------------------------------------------------------------------
 (9) _showAccelerometerVal                                11    11      0   36746
                                             92 COMRAM     1     1      0
                                             37 BANK0     10    10      0
                _single_axis_measure
                         i2_lcdClear
                        i2_lcdSetPos
                     i2_lcdWriteChar
                     i2_lcdWriteStrC
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (10) i2_sprintf                                          57    50      7   24550
                                             79 COMRAM    13     6      7
                                              0 BANK0     37    37      0
                _single_axis_measure (ARG)
                        i2___asftadd
                        i2___asftmul
                        i2___asftsub
                          i2___awdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_scale
 ---------------------------------------------------------------------------------
 (11) i2_scale                                            16    13      3    4871
                                             37 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (11) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) i2_fround                                           22    19      3    4673
                                             37 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (12) i2___wmul                                            6     2      4    1093
                                             16 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___awmod                                           7     3      4     764
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           9     5      4     820
                                              7 COMRAM     9     5      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (11) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (11) i2__div_to_l_                                       16    10      6     481
                                              0 COMRAM    16    10      6
 ---------------------------------------------------------------------------------
 (11) i2___lltoft                                          9     5      4     694
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (11) i2___llmod                                          10     2      8     367
                                             14 COMRAM    10     2      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___lldiv                                          14     6      8     318
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (11) i2___fttol                                          15    11      4     330
                                             44 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (11) i2___asftsub                                         5     0      5    1862
                                             26 COMRAM     5     0      5
                          i2___ftsub
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___ftsub                                           6     0      6    1744
                                             20 COMRAM     6     0      6
                          i2___ftadd
 ---------------------------------------------------------------------------------
 (11) i2___asftmul                                         5     0      5    1823
                                             37 COMRAM     5     0      5
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (11) i2___asftadd                                         5     0      5    1765
                                             47 COMRAM     5     0      5
                          i2___ftadd
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (10) i2_lcdWriteStrC                                      2     0      2     303
                                              3 COMRAM     2     0      2
                     i2_lcdWriteChar
 ---------------------------------------------------------------------------------
 (11) i2_lcdWriteChar                                      1     1      0     154
                                              2 COMRAM     1     1      0
                        i2_writeByte
 ---------------------------------------------------------------------------------
 (10) i2_lcdSetPos                                         3     2      1     385
                                              6 COMRAM     3     2      1
                      i2_lcdWriteCmd
 ---------------------------------------------------------------------------------
 (10) i2_lcdClear                                          0     0      0     222
                      i2_lcdWriteCmd
 ---------------------------------------------------------------------------------
 (11) i2_lcdWriteCmd                                       4     4      0     222
                                              2 COMRAM     4     4      0
                        i2_writeByte
 ---------------------------------------------------------------------------------
 (12) i2_writeByte                                         1     1      0     132
                                              1 COMRAM     1     1      0
                       i2_writeDigit
 ---------------------------------------------------------------------------------
 (13) i2_writeDigit                                        1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _single_axis_measure                                16    11      5   10948
                                             63 COMRAM    16    11      5
                           ___lwtoft
                 _read_accelerometer
                         _voltageToG
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
 ---------------------------------------------------------------------------------
 (11) i2___ftge                                            9     3      6     396
                                             13 COMRAM     9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) _voltageToG                                          3     0      3    2757
                                             52 COMRAM     3     0      3
                          i2___ftadd
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (13) i2___ftadd                                          12     6      6    1647
                                              8 COMRAM    12     6      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (11) _read_accelerometer                                  5     2      3    3788
                                             58 COMRAM     5     2      3
                     _pointToVoltage
                             i2_read
 ---------------------------------------------------------------------------------
 (12) i2_read                                              6     4      2      72
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (12) _pointToVoltage                                      6     3      3    3618
                                             52 COMRAM     6     3      3
                           ___lwtoft
                          i2___ftdiv
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (12) i2___ftmul                                          15     9      6    1705
                                             22 COMRAM    15     9      6
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftdiv                                          15     9      6    1035
                                             37 COMRAM    15     9      6
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) ___lwtoft                                            5     2      3     780
                                              8 COMRAM     5     2      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) i2___ftpack                                          8     3      5     599
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdInit
     _intro
       _lcdClean
         _lcdClear
           _lcdWriteCmd
             _writeByte
               _writeDigit
         _lcdSetPos
           _lcdWriteCmd
             _writeByte
               _writeDigit
         _lcdWriteChar
           _writeByte
             _writeDigit
       _lcdSetPos
         _lcdWriteCmd
           _writeByte
             _writeDigit
       _lcdWriteStrC
         _lcdWriteChar
           _writeByte
             _writeDigit
     _lcdWriteCmd
       _writeByte
         _writeDigit
     _writeDigit
   _setServo
   _showDistance
     _lcdClear
       _lcdWriteCmd
         _writeByte
           _writeDigit
     _lcdSetPos
       _lcdWriteCmd
         _writeByte
           _writeDigit
     _lcdWriteStrC
       _lcdWriteChar
         _writeByte
           _writeDigit
     _readDistance
       ___asftadd
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _read (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _read (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___awtoft
         ___ftpack
         _read (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
           _read (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         _read (ARG)
       ___ftdiv
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _read (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _read (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _readTempF
         ___awtoft
           ___ftpack
           _read (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _read (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _read (ARG)
         ___ftdiv
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _read (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _read (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _read
     _sprintf
       ___asftadd
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _read (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _read (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___asftmul
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___asftsub
         ___ftsub
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
               _read (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _read (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___awdiv
         ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _readDistance (ARG)
         ___asftadd
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
               _read (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _read (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___awtoft
           ___ftpack
           _read (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
             _read (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           _read (ARG)
         ___ftdiv
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
               _read (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _read (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _readTempF
           ___awtoft
             ___ftpack
             _read (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
               _read (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             _read (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _read (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               _read (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _read
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _ISR (ROOT)
   _showAccelerometerVal
     _single_axis_measure
       ___lwtoft
         i2___ftpack
       _read_accelerometer
         _pointToVoltage
           ___lwtoft
             i2___ftpack
           i2___ftdiv
             i2___ftadd (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2_read
       _voltageToG
         i2___ftadd
           i2___ftpack
         i2___ftdiv
           i2___ftadd (ARG)
             i2___ftpack
           i2___ftmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2___ftadd
         i2___ftpack
       i2___ftdiv
         i2___ftadd (ARG)
           i2___ftpack
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftge
         ___lwtoft (ARG)
           i2___ftpack
     i2_lcdClear
       i2_lcdWriteCmd
         i2_writeByte
           i2_writeDigit
     i2_lcdSetPos
       i2_lcdWriteCmd
         i2_writeByte
           i2_writeDigit
     i2_lcdWriteChar
       i2_writeByte
         i2_writeDigit
     i2_lcdWriteStrC
       i2_lcdWriteChar
         i2_writeByte
           i2_writeDigit
     i2_sprintf
       _single_axis_measure (ARG)
         ___lwtoft
           i2___ftpack
         _read_accelerometer
           _pointToVoltage
             ___lwtoft
               i2___ftpack
             i2___ftdiv
               i2___ftadd (ARG)
                 i2___ftpack
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2_read
         _voltageToG
           i2___ftadd
             i2___ftpack
           i2___ftdiv
             i2___ftadd (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         i2___ftadd
           i2___ftpack
         i2___ftdiv
           i2___ftadd (ARG)
             i2___ftpack
           i2___ftmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftge
           ___lwtoft (ARG)
             i2___ftpack
       i2___asftadd (ARG)
         i2___ftadd
           i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___asftmul (ARG)
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___asftsub (ARG)
         i2___ftsub
           i2___ftadd
             i2___ftpack
         i2___lltoft (ARG)
           i2___ftpack
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___ftge (ARG)
         ___lwtoft (ARG)
           i2___ftpack
       i2___ftmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg (ARG)
       i2___fttol (ARG)
         i2___ftmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv (ARG)
       i2___llmod (ARG)
         i2___lldiv (ARG)
       i2___lltoft (ARG)
         i2___ftpack
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_ (ARG)
       i2__tdiv_to_l_ (ARG)
       i2_fround (ARG)
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit (ARG)
       i2_scale (ARG)
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     5D      5D       1       97.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     63      63       5       61.9%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     7D      7D       8       48.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BIGRAM             EAF      0       0      35        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Fri Oct 10 11:27:40 2014

           ??_read_accelerometer 003E                     ___asftadd@f2 010E  
                  ___asftadd@f1p 010C                     ___awdiv@sign 00AA  
            ___wmul@multiplicand 00AF                     ___asftmul@f2 0102  
                     i2___ftpack 63D4                     __CFG_CP0$OFF 000000  
                   ___asftsub@f2 0114                     lcdWriteCmd@i 00A1  
                   lcdWriteCmd@n 00A0                      __CFG_OSC$HS 000000  
                   ___ftadd@exp1 010B                     ___ftadd@exp2 010A  
                     i2___lltoft 68E4                     ___ftadd@sign 0109  
                            l110 6140                              l111 60C0  
                            l112 60D0                              l113 60E0  
                            l114 60F0                              l115 6156  
                            l125 5460                              l109 60B0  
                            l128 54A6                              l136 438E  
                            l139 4394                              l181 6DB2  
                            l183 6DC0                              l185 6DCE  
                            l337 1858                              l186 6DD0  
                            l179 6DA4                              l720 39DA  
                            l640 3D74                              l722 3A14  
                            l731 3B32                              l740 3B6A  
                            l716 3996                              l750 4C32  
                            l751 4C94                              l647 3EB0  
                            l844 5BC6                              l765 4362  
                            l790 6EB4                              l854 6248  
                            l759 42A8                              _RB2 007C0A  
                            _ISR 0008                      i2___asftadd 6E4C  
                   ___awmod@sign 00A3                      i2___asftmul 6E10  
                    i2___asftsub 6DD4                 ??i2_lcdWriteChar 0003  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
               ??i2_lcdWriteStrC 0006                    ___asftmul@f1p 0100  
                     i2_lcdClear 7076                    ___asftsub@f1p 0112  
                 ??_lcdWriteChar 009F                    lcdWriteChar@n 009F  
                 ??_lcdWriteStrC 00A2             _showAccelerometerVal 58B0  
                           ?_ISR 0001                     ___ftdiv@cntr 0115  
                   ___ftdiv@sign 011A                             l6121 535E  
                           l6113 52E8                             l6123 5390  
                           l6115 52FE                             l6211 3A06  
                           l6125 53A6                             l6117 5330  
                           l6109 52CE                             l6221 3A60  
                           l6205 39E8                             l7101 3E8E  
                           l7005 41C6                             l6135 53DE  
                           l6231 3AC2                             l7103 3EA8  
                           l6129 53BC                             l6241 3B24  
                           l6233 3AD2                             l7121 5F10  
                           l6091 6DA6                             l6227 3A9C  
                           l7131 5FB6                             l7203 5BAA  
                           l7211 61A6                             l7035 42FC  
                           l7019 4242                             l6229 3AB2  
                           l7125 5F5A                             l7213 61C0  
                           l7061 3CF4                             l7045 4340  
                           l6095 6DB4                             l6247 3BA2  
                           l6239 3B0E                             l7215 61C8  
                           l7055 3C9C                             l7047 435A  
                           l7039 431A                             l6257 3C1E  
                           l6521 4B64                             l7145 4D18  
                           l7225 648E                             l7081 3DF2  
                           l6099 6DC2                             l6451 6A18  
                           l7163 4DD8                             l7219 622C  
                           l7227 64A8                             l7091 3E4A  
                           l6189 6B1A                             l6453 6A22  
                           l6461 6A5A                             l8301 585A  
                           l6701 683E                             l7181 4E68  
                           l7173 4E1C                             l6621 556A  
                           l6455 6A2C                             l6199 39A4  
                           l6527 4BA8                             l7175 4E36  
                           l7167 4DF6                             l7191 5B0A  
                           l7095 3E68               __CFG_WPFP$PAGE_127 000000  
                           l6449 6A12                             l8313 5892  
                           l7177 4E3E                             l7193 5B24  
                           l6633 55C4                             l6459 6A3C  
                           l6571 4818                             l7195 5B2C  
                           l6635 55D6                             l6627 5598  
                           l7611 1056                             l8403 45A4  
                           l6565 47D4                             l6653 5650  
                           l6645 5624                             l6637 55DE  
                           l7701 150A                             l7605 1010  
                           l8351 5498                             l8343 5442  
                           l6495 6108                             l7631 119A  
                           l6905 524E                             l8345 5452  
                           l6585 488A                             l6649 5638  
                           l6681 5A98                             l6673 5A4A  
                           l6665 5A06                             l7801 1A0C  
                           l7713 1584                             l7641 1206  
                           l7625 1120                             l6595 48EE  
                           l6675 5A5C                             l6931 3782  
                           l7635 11B0                             l7619 10E8  
                           l6845 69AC                             l8277 57EA  
                           l8365 551A                             l6589 48B6  
                           l6677 5A64                             l6685 5AAC  
                           l6669 5A2C                             l7741 16D2  
                           l7733 164E                             l7629 117C  
                           l6919 52AC                             l6599 491A  
                           l6863 4F08                             l7807 1A2A  
                           l7719 15EA                             l7647 122A  
                           l7639 11B8                             l8439 46AC  
                           l6849 69DE                             l8289 5822  
                           l6689 5AC4                             l6953 2CC8  
                           l7825 1ADE                             l7737 16AE  
                           l7681 13F0                             l7673 137C  
                           l7657 1294                             l7809 1A38  
                           l6891 51CC                             l7931 6646  
                           l6939 38BC                             l6971 2FEE  
                           l6963 2E16                             l7843 1B70  
                           l7819 1ABA                             l7771 181A  
                           l7755 1736                             l7763 17EC  
                           l7747 16F0                             l7861 1C40  
                           l7853 1BE8                             l7765 17FC  
                           l7685 1424                             l6959 2DE2  
                           l7847 1BB0                             l7839 1B42  
                           l7599 0FEA                             l6977 3108  
                           l7881 1CF6                             l7865 1C84  
                           l7785 1894                             l7777 185C  
                           l7697 14D8                             l7689 146A  
                           l7875 1CC6                             l7867 1C92  
                           l7859 1C32                             l7891 1E06  
                           l6989 6BF8                             l7869 1C9E  
                           l7789 18E8                             l6999 4180  
                           l7887 1DBA                             l7799 19FC  
                           l7889 1DD0            __size_ofi2__div_to_l_ 016C  
                           STR_1 0F77                             STR_2 0FCB  
                           STR_3 0FA6                             STR_4 0FB2  
                           STR_5 0F89                             STR_6 0FC5  
                           STR_7 0FC5                             STR_8 0FC5  
                           STR_9 0FBC                             u5000 3C6C  
                           u5020 3CC4                             u5005 3C60  
                           u5025 3CB8                             u4411 47EE  
                           u5131 4CEC                             u4341 4B3A  
                           u5150 4D44                             u4361 4B7E  
                           u5155 4D3A                             u6115 1A8E  
                           u4710 69D2                             u4391 47AA  
                           u4720 6A04                             u3761 3932  
                           u3771 3956                             u7107 45C2  
                           u4717 69C8                             u7117 4602  
                           u4727 69FA                             u4911 4154  
                           u7207 46E6                             u7127 4614  
                           u7217 46F8                             u7137 4626  
                           u7307 5434                             u4931 419A  
                           u7227 470A                             u7147 4638  
                           u7317 5454                             u7237 471C  
                           u7157 464A                             i2l62 0056  
                           u7407 51B8                             u7327 549A  
                           u7247 472E                             u7167 465C  
                           i2l57 004C                             u7417 523A  
                           u7337 550C                             u7257 4740  
                           u7177 466E                             u7097 45B0  
                           u7427 5298                             u7347 57A8  
                           u7267 4752                             u7187 4680  
                           u7437 703E                             u7357 57DC  
                           u7277 4764                             u7197 4692  
                           u7447 6B0C                             u7367 5814  
                           u7287 4776                             u5880 12E8  
                           u7457 6B1C                             u7377 584C  
                           u7297 4388                             u5865 126C  
                           u7387 5884                             u7397 6632  
                           u5885 12DC                    lcdWriteStrC@s 00A0  
                  __CFG_FCMEN$ON 000000                 i2sprintf@vd_1056 006B  
                           _main 4586                     ___ftpack@arg 009D  
                           _read 60A0                     ___ftpack@exp 00A0  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
            __end_ofi2_writeByte 705A                     i2___ftadd@f1 0009  
                   i2___ftadd@f2 000C                             pclat 000FFA  
                   i2___ftge@ff1 000E                     i2___ftge@ff2 0011  
                           prodh 000FF4                             prodl 000FF3  
                           start 0090                     i2___ftdiv@f1 0026  
                   i2___ftdiv@f2 0029                     i2___ftdiv@f3 0030  
                __end_ofi2_scale 358E                     i2___ftneg@f1 0001  
                   _sprintf$1054 0149                     _sprintf$1693 0146  
    __end_of_single_axis_measure 5CD8                     ___ftmul@cntr 00C0  
                   i2___ftmul@f1 0017                     i2___ftmul@f2 001A  
                   ___ftmul@sign 00C1                     i2___ftsub@f1 0015  
                   i2___ftsub@f2 0018                     i2___fttol@f1 002D  
                 setServo@degree 009D                            ??_ISR 008F  
                   ___fttol@exp1 0115                      i2_lcdSetPos 6C02  
                   i2___lltoft@c 0009                     ___fttol@lval 0111  
                  __CFG_PLLDIV$1 000000                            ?_main 0175  
                          ?_read 009D                  __end_of___awdiv 565A  
                __end_of___ftadd 3C44                            STR_10 0F98  
                __end_of___awmod 5ACE                  __end_of___ftdiv 4CD2  
                __end_of___ftneg 6EC2                  __end_of___lldiv 5BD8  
                __end_of___ftmul 4968                  ___awdiv@divisor 00A6  
                __end_of___llmod 625A                  __end_of___ftsub 6D0E  
                __end_of___fttol 4E7A                            i2l110 62EC  
                          i2l111 6274                            i2l112 6284  
                          i2l113 6294                            i2l114 62A4  
                          i2l115 6302                            i2l109 6264  
                          i2l181 6F4A                            i2l183 6F54  
                          i2l185 6F5E                            i2l337 2594  
                          i2l186 6F60                            i2l179 6F40  
                          i2l720 49DA                            i2l640 50C0  
                          i2l731 4A8A                            i2l740 4AA6  
                          i2l716 49AE                            i2l750 6048  
                          i2l751 606E                            i2l647 515C  
                          i2l844 67E6                            i2l765 577E  
                          i2l790 7000                            i2l854 68D2  
                          i2l759 5714                  ___awdiv@counter 00A9  
                          _TMR1H 000FCF                            _TMR1L 000FCE  
                   i2__div_to_l_ 5002                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISD 000F95  
                   ___lltoft@exp 00AD                  __end_of_lcdInit 58B0  
          ?_showAccelerometerVal 0001                       i2isdigit@c 0003  
                  ___awtoft@sign 00A9                  __end_of_dpowers 0F29  
                     i2scale@scl 002C                            _scale 2ADE  
                __end_of_isdigit 6C02                            _intro 65B4  
                  ___ftpack@sign 00A1             __end_ofi2_writeDigit 6F64  
                          main@i 017B                            tablat 000FF5  
               __end_ofi2___ftge 6772                 __end_ofi2___wmul 6EFC  
                          status 000FD8                  __end_of_sprintf 1E14  
               __end_ofi2_fround 413A                    i2___ftdiv@exp 0033  
             __size_ofi2___awdiv 00B0               __size_ofi2___ftadd 01B8  
             __size_ofi2___awmod 009C               __size_ofi2___ftdiv 00E6  
             __size_ofi2___ftneg 0026               __size_ofi2___lldiv 0086  
             __size_ofi2___ftmul 00F8               __size_ofi2___llmod 006A  
             __size_ofi2___ftsub 0036               __size_ofi2___fttol 00F6  
        __CFG_DSWDTOSC$INTOSCREF 000000                  __initialization 707E  
             showDistance@buffer 016B                i2___lldiv@divisor 0005  
                   __end_of_main 4790                     __end_of_read 6184  
              i2___lldiv@counter 000E                    i2___ftmul@exp 0020  
             __size_ofi2_isdigit 002A                      ?i2___ftpack 0001  
                  ?_readDistance 0126                      ?i2___lltoft 0009  
                         ??_main 017A                    ___fttol@sign1 0110  
                         ??_read 009F                    __activetblptr 000003  
                     i2sprintf@c 0084                       i2sprintf@f 0052  
             __size_ofi2_sprintf 0CCA             __size_of__tdiv_to_l_ 023A  
                    read@channel 009D                      ?i2_lcdClear 0001  
                    i2_writeByte 7044                 ___llmod@dividend 00AB  
                         ?_scale 0100                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           ?_intro 0001  
                         _ANCON0 000F48                           _ANCON1 000F49  
               ___awdiv@dividend 00A4                 __end_of___awtoft 687A  
               __end_of___ftpack 53EC             single_axis_measure@i 004B  
               __end_of___lltoft 6518                   __CFG_WDTEN$OFF 000000  
                         i2l6151 641A                           i2l6143 63E4  
                         i2l6321 4A48                           i2l6313 4A1C  
                         i2l6155 6430                           i2l6147 63F2  
                         i2l6403 5CFE                           i2l6331 4A7A  
                         i2l6323 4A50                           i2l8011 2002  
                         i2l8003 1FA0                           i2l6157 644E  
                         i2l6149 63FC                           i2l6333 4A84  
                         i2l6325 4A58                           i2l8101 2418  
                         i2l8021 206C                           i2l8005 1FE0  
                         i2l6159 6458                           i2l6423 5D5A  
                         i2l6319 4A3E                           i2l6271 6F42  
                         i2l8111 2450                           i2l6433 5D86  
                         i2l6409 5D24                           i2l7313 3564  
                         i2l8105 2436                           i2l6427 5D6A  
                         i2l6339 4AC2                           i2l6291 49BC  
                         i2l6275 6F4C                           i2l7411 56EC  
                         i2l7307 34A8                           i2l8211 28BC  
                         i2l8203 2854                           i2l6365 6006  
                         i2l6437 5D96                           i2l6349 4AFA  
                         u401_41 4978                           i2l7501 5E9E  
                         i2l7341 507A                           i2l8141 2598  
                         i2l8061 2268                           i2l8053 21FC  
                         i2l8045 2196                           i2l8037 2136  
                         i2l6359 5FE0                           i2l6279 6F56  
                         i2l7335 503E                           i2l7431 5756  
                         i2l8231 2992                           i2l8223 2934  
                         i2l8207 2880                           i2l8135 255A  
                         i2l8119 2490                           i2l8127 2530  
                         i2l6297 49E8                           i2l7249 6C82  
                         i2l7505 5EB4                           i2l7361 50F0  
                         i2l8233 299E                           i2l8225 2942  
                         i2l8217 28EE                           i2l8153 2620  
                         i2l8129 2540                           i2l8065 228E  
                         i2l8049 21BE                           i2l7531 67A8  
                         i2l7371 5124                           i2l7427 5746  
                         i2l6811 6572                           i2l6803 6544  
                         i2l7275 40F4                           i2l7267 401C  
                         i2l8251 2A92                           i2l8171 2740  
                         i2l8163 2716                           i2l8083 2366  
                         u402_41 498C                           i2l7445 6712  
                         i2l7381 514C                           i2l7437 576E  
                         i2l6813 657A                           i2l7517 6FE0  
                         i2l8245 29EC                           i2l8229 2984  
                         i2l8165 2726                           i2l8149 25CC  
                         i2l8077 2308                           i2l8173 274E  
                         i2l8253 2AA8                           i2l6735 62BC  
                         i2l7455 676E                           i2l7527 6798  
                         i2l7551 68A0                           i2l7383 5158  
                         i2l7375 5134                           i2l7439 577A  
                         i2l7391 5684                           i2l6815 657E  
                         i2l6823 659C                           i2l6807 6560  
                         i2l7295 3340                           i2l8239 29C2  
                         i2l8183 27D0                           i2l8255 2AD0  
                         i2l7449 6742                           i2l7529 67A4  
                         i2l7561 68EE                           i2l7289 3284  
                         i2l8097 23C6                           i2l7491 5E76  
                         i2l7539 67D8                           i2l7555 68C4  
                         i2l7547 6890                           i2l7563 68FA  
                         i2l6771 638A                           i2l6827 65AA  
                         i2l6819 6592                           i2l7299 336A  
                         i2l7469 5DFA                           i2l7549 689C  
                         i2l7397 56AE                           i2l6773 6392  
                         i2l6765 6370                           i2l8189 27F4  
                         i2l7487 5E66                           i2l6791 63CA  
                         i2l6783 63B2                           i2l6775 6396  
                         i2l6759 6350                           i2l7497 5E8E  
                         i2l7907 5C86                           i2l7499 5E9A  
                         i2l6787 63BC                           i2l7941 6C14  
                         i2l7943 6C1A                           i2l7937 6C08  
                         i2l7939 6C0E                           i2l7947 6C22  
                         i2l7955 6B24                           i2l7963 1E28  
                         i2l7949 6C3C                           i2l7959 6B4E  
                         i2l7975 1E8C                           i2l7983 1EF8  
                         i2l7993 1F68                           i2l7969 1E4A  
                         i2l7995 1F82                           u422_41 5FCA  
                         i2l7989 1F28                           i2l7999 1F98  
                         u424_41 5FF0                        ??i2_scale 0029  
               __end_of___lwtoft 6FBE                           u427_41 5CE8  
                         u429_41 5D0E                           u560_41 5DE0  
                         u547_41 566A                           u549_41 5694  
                 __CFG_WPCFG$OFF 000000                           i2_read 625A  
         __size_ofi2__tdiv_to_l_ 0136                   __CFG_WPDIS$OFF 000000  
               __end_of_lcdClean 52B2                 __end_of_lcdClear 7076  
           __size_of_lcdWriteCmd 0058                      i2read@value 0005  
                 __CFG_XINST$OFF 000000                     i2_scale$2285 0029  
               __end_of__powers_ 0F77                           ___ftge 5EC6  
                         ___wmul 6948                        ??___awdiv 00A8  
           __end_of_lcdWriteChar 7044                        ??___ftadd 0106  
                      ??___awmod 00A1                        ??___ftdiv 0112  
                      ??___ftneg 00A0                        ??___lldiv 00A5  
                      ??___ftmul 00B9                        ??___llmod 00B3  
                      ??___ftsub 00C2                        ??___fttol 010B  
           __end_of_lcdWriteStrC 6A0C                   i2___asftadd@f2 0032  
                 ??_readDistance 0129                           _fround 358E  
                __CFG_CLKOEC$OFF 000000                 ___awdiv@quotient 00AB  
                 sprintf@vd_1056 0151                  ___awmod@divisor 009F  
                      ??_lcdInit 00AC                  ___awmod@counter 00A2  
                 i2___awdiv@sign 000E              pointToVoltage@point 0035  
          ___ftmul@f3_as_product 00BD                 __end_of_setServo 5524  
                 i2___asftmul@f2 0028                        ??_isdigit 009D  
         __size_ofi2_lcdWriteCmd 0044                   i2___asftsub@f2 001D  
              __end_ofi2___awdiv 63D4                   i2lcdWriteCmd@i 0005  
                         intro@i 00AA                   i2lcdWriteCmd@n 0004  
              __end_ofi2___ftadd 4B20                __end_ofi2___awmod 65B4  
              __end_ofi2___ftdiv 60A0                   i2___ftadd@exp1 0014  
                 i2___ftadd@exp2 0013                __end_ofi2___ftneg 700E  
              __end_ofi2___lldiv 67F8                __end_ofi2___ftmul 5DD0  
              __end_ofi2___llmod 68E4                __end_ofi2___ftsub 6F32  
              __end_ofi2___fttol 5EC6                   i2___ftadd@sign 0012  
                   __mediumconst 0000           ??_showAccelerometerVal 005D  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                   i2___awmod@sign 0007  
                      ??_sprintf 0140                  __CFG_DSBOREN$ON 000000  
             __size_of___asftadd 0042               __size_of___asftmul 0042  
             __size_of___asftsub 0042             __CFG_LS48MHZ$SYS48X8 000000  
              __end_ofi2_isdigit 6FE8                   i2___ftdiv@cntr 002F  
                     __accesstop 0060          __end_of__initialization 707E  
                 i2___ftdiv@sign 0034                       ___ftadd@f1 0100  
                     ___ftadd@f2 0103              __size_ofi2___ftpack 00A8  
                     ___ftge@ff1 009D                       ___ftge@ff2 00A0  
                  i2sprintf@_val 0078                    i2sprintf@flag 0074  
            __size_ofi2___lltoft 0064                    i2sprintf@fval 007F  
                  i2sprintf@prec 0082                       ___ftdiv@f1 010C  
                     ___ftdiv@f2 010F                       ___ftdiv@f3 0116  
              __end_ofi2_sprintf 2ADE                       ___ftneg@f1 009D  
                     ___awtoft@c 00A5                   i2___ftpack@arg 0001  
             i2__tdiv_to_l_@exp1 000F                i2___llmod@divisor 0013  
                 i2___ftpack@exp 0004               i2__tdiv_to_l_@cntr 000E  
           __CFG_WPEND$PAGE_WPFP 000000                i2___llmod@counter 0018  
             i2__tdiv_to_l_@quot 000A                       ___ftmul@f1 00B3  
                     ___ftmul@f2 00B6                       ___ftsub@f1 010C  
                     ___ftsub@f2 010F                       ___fttol@f1 0107  
                 __pcstackCOMRAM 0001               i2___lldiv@dividend 0001  
            __size_ofi2_lcdClear 0008                   i2_sprintf$1054 0063  
                 i2_sprintf$2286 0060                       ___lltoft@c 00A5  
                 i2___ftmul@cntr 0024                    __end_of_scale 313C  
                  __end_of_intro 664C                   i2___ftmul@sign 0025  
   read_accelerometer@axis_point 003E                  __CFG_DSWDTPS$G2 000000  
                   i2lcdSetPos@p 0008                     i2lcdSetPos@x 0009  
                   i2lcdSetPos@y 0007                   i2___fttol@exp1 003B  
                     ___lwtoft@c 0009                   i2___fttol@lval 0037  
                      ?i2___ftge 000E                        ?i2___wmul 0011  
                  i2__tdiv_to_l_ 565A                       __div_to_l_ 3C44  
                   ?i2___asftadd 0030               __size_of_lcdSetPos 0060  
                   ?i2___asftmul 0026                     ?i2___asftsub 001B  
          __size_ofi2_writeDigit 0032                        ?i2_fround 0026  
                __div_to_l_@exp1 00AC                  __div_to_l_@cntr 00AB  
                   sprintf@integ 0157                          ??_scale 00C2  
                        ??_intro 00A9                   i2___lltoft@exp 0011  
                __div_to_l_@quot 00A7                     sprintf@width 015C  
             i2___lldiv@quotient 000A       showAccelerometerVal@buffer 0085  
                    i2sprintf@ap 006F                      i2sprintf@vd 0067  
                    i2sprintf@sp 0050                 i2__tdiv_to_l_@f1 0001  
               i2__tdiv_to_l_@f2 0004               __size_of_readTempF 0188  
                        ?i2_read 0001                    __div_to_l_@f1 009D  
                  __div_to_l_@f2 00A0                    i2_lcdWriteCmd 6C46  
                        ?___ftge 009D                    i2writeDigit@n 0001  
    __size_of_read_accelerometer 002E                          ?___wmul 00AD  
                   ?i2_lcdSetPos 0007                     i2_writeDigit 6F32  
              __end_of___asftadd 6D92                          ?_fround 0100  
              __end_of___asftmul 6D50                __end_of___asftsub 6CCC  
                      ?___awtoft 00A5                        ?___ftpack 009D  
                      ?___lltoft 00A5                   ?i2__tdiv_to_l_ 0001  
                     ??i2___ftge 0014                        ?___lwtoft 0009  
                     ??i2___wmul 0015                          _GO_DONE 007E11  
                     ??i2_fround 0029                        ?_lcdClean 0001  
                      ?_lcdClear 0001                          i2_scale 313C  
           __end_of_readDistance 4586                   ?i2_lcdWriteCmd 0001  
             __size_of_writeByte 001E            __size_of_lcdWriteChar 0018  
                __size_ofi2_read 00CA                __end_of_lcdSetPos 6A6C  
          __size_of_lcdWriteStrC 0062                __end_of__npowers_ 0F50  
                        __Hparam 0000                        ?_setServo 009D  
                     _scale$1692 0103                          __Lparam 0000  
   single_axis_measure@axis_read 0045      single_axis_measure@axis_sum 004D  
                __size_of___ftge 00F4                          ___awdiv 5524  
                        ___ftadd 3918                          ___awmod 59C0  
                        ___ftdiv 4B20                          ___ftneg 6E88  
                        ___lldiv 5ACE                  __size_of___wmul 0062  
                        ___ftmul 4790                          ___llmod 6184  
                        ___ftsub 6CCC                          ___fttol 4CD2  
        __size_of_pointToVoltage 005E                     __psmallconst 0F00  
                __CFG_STVREN$OFF 000000                voltageToG@voltage 0035  
                        __pcinit 707E                     ??i2___ftpack 0006  
                     ??___awtoft 00A8                       ??___ftpack 00A2  
                __size_of_fround 038A          i2___ftmul@f3_as_product 0021  
                        __ramtop 0F00                          _lcdInit 5790  
                   ??i2___lltoft 000D                       ??___lltoft 00A9  
   __size_of_single_axis_measure 0100                          __ptext0 4586  
                        __ptext1 664C                          __ptext2 0FD2  
                        __ptext3 2ADE                          __ptext4 6BBE  
                        __ptext5 358E                          __ptext6 6948  
                        __ptext7 59C0                          __ptext8 5524  
                        __ptext9 413A                       ??___lwtoft 000C  
   single_axis_measure@iteration 0042                    i2_fround$2283 002C  
                  i2_fround$2284 0029                     __size_of_ISR 0088  
                      _T1CONbits 000FCD                      ?__div_to_l_ 009D  
                        _dpowers 0F01                __end_of_readTempF 5002  
                   i2fround@prec 002F                  i2___asftadd@f1p 0030  
                        _isdigit 6BBE                 ___awmod@dividend 009D  
        single_axis_measure@axis 0040             pointToVoltage@fPoint 0038  
                   ??i2_lcdClear 0007                       ??_lcdClean 00A6  
                     ??_lcdClear 00A3                    ?_showDistance 0001  
                   ?i2_writeByte 0001                          _sprintf 0FD2  
                   _lcdWriteChar 702C             end_of_initialization 707E  
                   _lcdWriteStrC 69AA                  i2___asftmul@f1p 0026  
            i2___wmul@multiplier 0011          __size_ofi2_lcdWriteChar 0014  
                i2___asftsub@f1p 001B                  i2lcdWriteChar@n 0003  
        __size_ofi2_lcdWriteStrC 0056               __end_ofi2___ftpack 647C  
             __end_ofi2___lltoft 6948                  ___lldiv@divisor 00A1  
                     ??_setServo 009F                  ___lldiv@counter 00AA  
                i2lcdWriteStrC@s 0004                          postdec2 000FDD  
                        postinc2 000FDE               __end_ofi2_lcdClear 707E  
                 __tdiv_to_l_@f1 009D                   __tdiv_to_l_@f2 00A0  
                ??i2__tdiv_to_l_ 0007                       lcdSetPos@p 00A4  
                  ??__tdiv_to_l_ 00A3                       lcdSetPos@x 00A5  
                     lcdSetPos@y 00A3                        _PORTBbits 000F81  
              __end_of_writeByte 702C                 __CFG_CPUDIV$OSC1 000000  
                 ??_showDistance 00C2                        _TRISDbits 000F95  
                      _TRISEbits 000F96             __size_ofi2___asftadd 003C  
           __size_ofi2___asftmul 003C             __size_ofi2___asftsub 003C  
                      i2___awdiv 6324                        i2___ftadd 4968  
                      i2___awmod 6518                        i2___ftdiv 5FBA  
                      i2___ftneg 6FE8                        i2___lldiv 6772  
                      i2___ftmul 5CD8                        i2___llmod 687A  
                      i2___ftsub 6EFC                __CFG_SOSCSEL$HIGH 000000  
                      i2___fttol 5DD0                  ??i2_lcdWriteCmd 0003  
                 i2sprintf@integ 0071                   i2sprintf@width 0076  
                  ??_lcdWriteCmd 009F                      ___ftdiv@exp 0119  
             i2___llmod@dividend 000F                 __CFG_IOL1WAY$OFF 000000  
             i2___awdiv@dividend 0008                  i2___ftpack@sign 0005  
                      i2_isdigit 6FBE              __size_of__div_to_l_ 027E  
                  setServo@i_722 00A2                    setServo@i_723 00A4  
                  setServo@i_724 00AA                   __end_ofi2_read 6324  
                     _voltageToG 6B78              __CFG_MSSP7B_EN$MSK7 000000  
                    ___ftmul@exp 00BC                        i2_sprintf 1E14  
                     _writeDigit 6D92                   __end_of___ftge 5FBA  
                 __end_of___wmul 69AA             __size_ofi2_lcdSetPos 0044  
                 __end_of_fround 3918                 __CFG_DSWDTEN$OFF 000000  
               i2___wmul@product 0015              start_initialization 707E  
              __size_ofi2___ftge 0090               i2___awdiv@quotient 000F  
                    __end_of_ISR 0090                __size_ofi2___wmul 003A  
            __end_of__tdiv_to_l_ 4374            __size_of_readDistance 0212  
                i2___fttol@sign1 0036    __size_of_showAccelerometerVal 0110  
              __size_ofi2_fround 0278                       ?i2___awdiv 0008  
                     ?i2___ftadd 0009                       ?i2___awmod 0001  
                     ?i2___ftdiv 0026                       ?i2___ftneg 0001  
                     ?i2___lldiv 0001                       ?i2___ftmul 0017  
                     ?i2___llmod 000F                       ?i2___ftsub 0015  
                     ?i2___fttol 002D                  ___llmod@divisor 00AF  
                ___llmod@counter 00B4                         ??i2_read 0003  
                     ?i2_isdigit 0001                       readTempF@i 0121  
                     readTempF@j 0123              __end_of_lcdWriteCmd 6B22  
                       ??___ftge 00A3                         ??___wmul 00B1  
                     ?i2_sprintf 0050                   _pointToVoltage 6A6C  
              __CFG_ADCSEL$BIT12 000000                         ??_fround 00C2  
                   _readDistance 4374                       fround@prec 0109  
                  ?i2__div_to_l_ 0001                __size_of___awtoft 0082  
              __size_of___ftpack 013A                        ___asftadd 6D50  
                      ___asftmul 6D0E                        ___asftsub 6C8A  
              __size_of___lltoft 009C                     i2sprintf@exp 007D  
              __size_of___lwtoft 002C                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100              __end_of__stringdata 0FD1  
                   _isdigit$1329 009E                __size_of_lcdClean 0144  
              __size_of_lcdClear 0008             __size_ofi2_writeByte 0016  
                       ?i2_scale 0026                   i2_lcdWriteChar 705A  
                    sprintf@_val 015E                      sprintf@flag 015A  
            _single_axis_measure 5BD8                      sprintf@fval 0165  
                    sprintf@prec 0168                   i2_lcdWriteStrC 6B22  
     __end_of_read_accelerometer 6F92                      ?_voltageToG 0035  
         __end_of_pointToVoltage 6ACA             __end_of_showDistance 66E2  
                      __pintcode 0008                     i2writeByte@n 0002  
              __size_of_setServo 0138                         ?___awdiv 00A4  
                       ?___ftadd 0100                         ?___awmod 009D  
                       ?___ftdiv 010C                      ?_writeDigit 0001  
                       ?___ftneg 009D                        _lcdSetPos 6A0C  
                       ?___lldiv 009D                         ?___ftmul 00B3  
                       ?___llmod 00AB                         ?___ftsub 010C  
                      __npowers_ 0F29                         ?___fttol 0107  
           ?_single_axis_measure 0040                         ?_lcdInit 0001  
                    __tdiv_to_l_ 413A                   ??i2__div_to_l_ 0007  
                   ??__div_to_l_ 00A3                      __smallconst 0F00  
                     ?___asftadd 010C                         ?_isdigit 0001  
                     ?___asftmul 0100                       ?___asftsub 0112  
           __CFG_RTCOSC$T1OSCREF 000000                        _readTempF 4E7A  
                    ??i2___awdiv 000C                      ??i2___ftadd 000F  
                    ??i2___awmod 0005                         ?_sprintf 0139  
                    ??i2___ftdiv 002C                      ??i2___ftneg 0004  
                    ??i2___lldiv 0009                      ??i2___ftmul 001D  
                 __size_of_scale 065E                      ??i2___llmod 0017  
                    ??i2___ftsub 001B                      ??i2___fttol 0031  
                 __size_of_intro 0098           __end_ofi2_lcdWriteChar 706E  
         __end_ofi2_lcdWriteStrC 6B78                   ___wmul@product 00B1  
                       _LATBbits 000F8A                      _lcdWriteCmd 6ACA  
                       _LATDbits 000F8C                         _LATEbits 000F8D  
                      lcdClean@i 00A7                      ??i2_isdigit 0001  
             __end_of__div_to_l_ 3EC2                         i2u540_40 505C  
                       i2u540_45 5052                         i2u633_40 6B46  
                       i2u633_47 6B3C                         i2u634_40 6B70  
                       i2u562_40 5E18                         i2u538_40 5020  
                       i2u562_45 5E10                         i2u538_45 5016  
                       i2u634_47 6B66                         i2u643_45 2044  
                    writeDigit@n 009D                         i2u645_40 20BC  
                       i2u645_45 20B2                         i2u746_47 7068  
                ?_pointToVoltage 0035                         i2u747_47 6C78  
                       i2u668_45 27A4                         i2u748_47 6C84  
               __CFG_WDTPS$32768 000000                      ??i2_sprintf 0057  
                     ?_lcdSetPos 00A3                  i2__div_to_l_@f1 0001  
                i2__div_to_l_@f2 0004                    readDistance@a 0136  
          ??_single_axis_measure 0045                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                      __stringdata 0F77  
              ___wmul@multiplier 00AD                         i2___ftge 66E2  
                       i2___wmul 6EC2                i2___awdiv@divisor 000A  
                       i2_fround 3EC2                __CFG_CFGPLLEN$OFF 000000  
              i2___awdiv@counter 000D                    i2read@channel 0001  
            __size_of_voltageToG 0046                       ?_readTempF 011B  
                      _writeByte 700E                      _INTCON3bits 000FF0  
                ?i2_lcdWriteChar 0001               i2___awmod@dividend 0001  
            __size_of_writeDigit 0042                _readDistance$1687 012D  
              _readDistance$1688 0130                _readDistance$1689 0133  
                ?i2_lcdWriteStrC 0004  single_axis_measure@medium_value 0048  
               __size_ofi2_scale 0452                        read@value 00A1  
                       __Hrparam 0000                         __Lrparam 0000  
               __size_of___awdiv 0136                 __size_of___ftadd 032C  
               __size_of___awmod 010E                 __size_of___ftdiv 01B2  
               __size_of___ftneg 003A            i2___wmul@multiplicand 0013  
               __size_of___lldiv 010A                 __size_of___ftmul 01D8  
               __size_of___llmod 00D6                 __size_of___ftsub 0042  
               __size_of___fttol 01A8                         ___awtoft 67F8  
                       ___ftpack 52B2                      _fround$1690 0106  
                    _fround$1691 0103                         ___lltoft 647C  
          __end_ofi2__tdiv_to_l_ 5790                         ___lwtoft 6F92  
               __size_of_lcdInit 0120                    readTempF@temp 011E  
                  ??i2___asftadd 0035                      ??___asftadd 00C2  
                  ??i2___asftmul 002B                    ??i2___asftsub 0020  
                     sprintf@exp 0163                      ??___asftmul 00C2  
                    ??___asftsub 00C2                 __size_of_isdigit 0044  
                       _lcdClean 516E                         _lcdClear 706E  
                       __ptext10 3C44                         __ptext11 647C  
                       __ptext20 4374                         __ptext12 6184  
                       __ptext21 4E7A                         __ptext13 5ACE  
                       __ptext30 5790                         __ptext22 60A0  
                       __ptext14 4CD2                         __ptext31 65B4  
                       __ptext23 4790                         __ptext15 6E88  
                       __ptext32 69AA                         __ptext24 4B20  
                       __ptext16 5EC6                         __ptext41 58B0  
                       __ptext33 516E                         __ptext25 67F8  
                       __ptext17 6C8A                         __ptext50 5002  
                       __ptext42 1E14                         __ptext34 702C  
                       __ptext26 6D50                         __ptext18 6CCC  
                       __ptext51 68E4                         __ptext43 313C  
                       __ptext35 6A0C                         __ptext27 3918  
                       __ptext19 6D0E                         __ptext60 6B22  
                       __ptext52 687A                         __ptext44 6FBE  
                       __ptext36 706E                         __ptext28 52B2  
                       __ptext61 705A                         __ptext53 6772  
                       __ptext45 3EC2                         __ptext37 6ACA  
                       __ptext29 53EC                         __ptext70 4968  
                       __ptext62 6C02                         __ptext54 5DD0  
                       __ptext46 6EC2                         __ptext38 700E  
                       __ptext71 6F64                         __ptext63 7076  
                       __ptext55 6FE8                         __ptext47 6518  
                       __ptext39 6D92                         __ptext72 625A  
                       __ptext64 6C46                         __ptext56 6DD4  
                       __ptext48 6324                         __ptext73 6A6C  
                       __ptext65 7044                         __ptext57 6EFC  
                       __ptext49 565A                         __ptext74 5CD8  
                       __ptext66 6F32                         __ptext58 6E10  
                       __ptext75 5FBA                         __ptext67 5BD8  
                       __ptext59 6E4C                         __ptext76 6F92  
                       __ptext68 66E2                         __ptext77 63D4  
                       __ptext69 6B78           read_accelerometer@axis 003B  
                     ?_writeByte 0001                         __powers_ 0F50  
               __size_of_sprintf 0E42                        setServo@i 00A8  
                      setServo@j 00A6                   i2_isdigit$1329 0002  
          __size_of_showDistance 0096                    __size_of_main 020A  
                  __size_of_read 00E4            __end_ofi2_lcdWriteCmd 6C8A  
           __end_ofi2__div_to_l_ 516E                         _setServo 53EC  
                       lcdInit@i 00AD                     lcdInit@i_980 00B1  
                   lcdInit@i_981 00B3                     lcdInit@i_979 00AF  
   __end_of_showAccelerometerVal 59C0                       writeByte@n 009E  
                  ??i2_lcdSetPos 0008                      ??_lcdSetPos 00A4  
                  ?i2_writeDigit 0001                         main@argc 0175  
                       main@argv 0177                i2___awmod@divisor 0003  
              i2___awmod@counter 0006                       _INTCONbits 000FF2  
                   _showDistance 664C                         isdigit@c 009F  
                    ??_readTempF 00C2                         scale@scl 0106  
            __end_ofi2___asftadd 6E88              __end_ofi2___asftmul 6E4C  
            __end_ofi2___asftsub 6E10                         intlevel2 0000  
                      sprintf@ap 0155                 __tdiv_to_l_@exp1 00AB  
                      sprintf@vd 014D                 __tdiv_to_l_@cntr 00AA  
                      sprintf@sp 0139                 __tdiv_to_l_@quot 00A6  
               ___lldiv@dividend 009D                     ??_voltageToG 0038  
                 ??i2_writeDigit 0001                     ??_writeDigit 009D  
                   ?__tdiv_to_l_ 009D               _read_accelerometer 6F64  
                       sprintf@c 016A                         sprintf@f 013B  
            __end_ofi2_lcdSetPos 6C46                 ___lldiv@quotient 00A6  
                  ??i2_writeByte 0002              ?_read_accelerometer 003B  
                    ??_writeByte 009E               __end_of_voltageToG 6BBE  
                  ?_lcdWriteChar 0001                    ?_lcdWriteStrC 00A0  
              i2__div_to_l_@exp1 0010                i2__div_to_l_@cntr 000F  
             __end_of_writeDigit 6DD4                i2__div_to_l_@quot 000B  
               ??_pointToVoltage 0038                     ?_lcdWriteCmd 0001  
