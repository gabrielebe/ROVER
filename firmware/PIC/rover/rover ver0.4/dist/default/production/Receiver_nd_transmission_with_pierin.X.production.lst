

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Wed Nov 26 11:17:32 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _INTCONbits	set	4082
    19  0000                     _PIE1bits	set	3997
    20  0000                     _PIR1bits	set	3998
    21  0000                     _RCREG1	set	4015
    22  0000                     _RCSTA1bits	set	4012
    23  0000                     _SPBRG1	set	4016
    24  0000                     _TRISCbits	set	3988
    25  0000                     _TXREG1	set	4014
    26  0000                     _TXSTA1bits	set	4013
    27                           
    28                           	psect	smallconst
    29  000F00                     __psmallconst:
    30                           	opt stack 0
    31  000F00  00                 	db	0
    32  000F01                     __stringdata:
    33                           	opt stack 0
    34  000F01                     STR_1:
    35  000F01  43                 	db	67	;'C'
    36  000F02  6F                 	db	111	;'o'
    37  000F03  6D                 	db	109	;'m'
    38  000F04  75                 	db	117	;'u'
    39  000F05  6E                 	db	110	;'n'
    40  000F06  69                 	db	105	;'i'
    41  000F07  63                 	db	99	;'c'
    42  000F08  61                 	db	97	;'a'
    43  000F09  74                 	db	116	;'t'
    44  000F0A  69                 	db	105	;'i'
    45  000F0B  6F                 	db	111	;'o'
    46  000F0C  6E                 	db	110	;'n'
    47  000F0D  20                 	db	32
    48  000F0E  69                 	db	105	;'i'
    49  000F0F  73                 	db	115	;'s'
    50  000F10  20                 	db	32
    51  000F11  6F                 	db	111	;'o'
    52  000F12  6B                 	db	107	;'k'
    53  000F13  0A                 	db	10
    54  000F14  00                 	db	0
    55  000F15                     __end_of__stringdata:
    56                           	opt stack 0
    57                           
    58                           ; #config settings
    59  000F15  00                 	db	0	; dummy byte at the end
    60  0000                     
    61                           	psect	cinit
    62  000FF4                     __pcinit:
    63                           	opt stack 0
    64  000FF4                     start_initialization:
    65                           	opt stack 0
    66  000FF4                     __initialization:
    67                           	opt stack 0
    68                           
    69                           ; Clear objects allocated to COMRAM (22 bytes)
    70  000FF4  EE00  F01D         	lfsr	0,__pbssCOMRAM
    71  000FF8  0E16               	movlw	22
    72  000FFA                     clear_0:
    73  000FFA  6AEE               	clrf	postinc0,c
    74  000FFC  06E8               	decf	wreg,f,c
    75  000FFE  E1FD               	bnz	clear_0
    76  001000                     end_of_initialization:
    77                           	opt stack 0
    78  001000                     __end_of__initialization:
    79                           	opt stack 0
    80  001000  0E00               	movlw	low (__Lmediumconst shr (0+16))
    81  001002  6EF8               	movwf	tblptru,c
    82  001004  0100               	movlb	0
    83  001006  EFE7  F007         	goto	_main	;jump to C main() function
    84                           tblptru	equ	0xFF8
    85                           postinc0	equ	0xFEE
    86                           wreg	equ	0xFE8
    87                           
    88                           	psect	bssCOMRAM
    89  00001D                     __pbssCOMRAM:
    90                           	opt stack 0
    91  00001D                     _rcindex:
    92                           	opt stack 0
    93  00001D                     	ds	1
    94  00001E                     _t:
    95                           	opt stack 0
    96  00001E                     	ds	1
    97  00001F                     _rcbuf:
    98                           	opt stack 0
    99  00001F                     	ds	20
   100                           tblptru	equ	0xFF8
   101                           postinc0	equ	0xFEE
   102                           wreg	equ	0xFE8
   103                           
   104                           	psect	cstackCOMRAM
   105  000001                     __pcstackCOMRAM:
   106                           	opt stack 0
   107  000001                     i2sendByte@Byte:
   108                           	opt stack 0
   109                           
   110                           ; 1 bytes @ 0x0
   111  000001                     	ds	1
   112  000002                     i2sendString@s:
   113                           	opt stack 0
   114                           
   115                           ; 2 bytes @ 0x1
   116  000002                     	ds	2
   117  000004                     ??_ISR:
   118  000004                     
   119                           ; 0 bytes @ 0x3
   120  000004                     	ds	14
   121  000012                     ISR@i:
   122                           	opt stack 0
   123                           
   124                           ; 2 bytes @ 0x11
   125  000012                     	ds	2
   126  000014                     sendByte@Byte:
   127                           	opt stack 0
   128                           
   129                           ; 1 bytes @ 0x13
   130  000014                     	ds	1
   131  000015                     sendString@s:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x14
   135  000015                     	ds	2
   136  000017                     
   137                           ; 2 bytes @ 0x16
   138  000017                     	ds	2
   139  000019                     
   140                           ; 3 bytes @ 0x18
   141  000019                     	ds	3
   142  00001C                     ??_main:
   143                           
   144                           ; 0 bytes @ 0x1B
   145  00001C                     	ds	1
   146                           tblptru	equ	0xFF8
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 76 in file "Main.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;  argc            2   22[COMRAM] int 
   158 ;;  argv            3   24[COMRAM] PTR PTR unsigned char 
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;                  2   22[COMRAM] int 
   163 ;; Registers used:
   164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   170 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   174 ;;Total ram usage:        6 bytes
   175 ;; Hardware stack levels required when called:    5
   176 ;; This function calls:
   177 ;;		_USART_init
   178 ;;		_sendString
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text0
   185  000FCE                     __ptext0:
   186                           	opt stack 0
   187  000FCE                     _main:
   188                           	opt stack 26
   189                           
   190                           ;Main.c: 77: USART_init();
   191                           
   192                           ;incstack = 0
   193  000FCE  EC05  F008         	call	_USART_init	;wreg free
   194                           
   195                           ;Main.c: 78: _delay((unsigned long)((50)*(12000000/4000.0)));
   196  000FD2  0EC3               	movlw	195
   197  000FD4  6E1C               	movwf	??_main& (0+255),c
   198  000FD6  0ECD               	movlw	205
   199  000FD8                     u237:
   200  000FD8  2EE8               	decfsz	wreg,f,c
   201  000FDA  D7FE               	goto	u237
   202  000FDC  2E1C               	decfsz	??_main& (0+255),f,c
   203  000FDE  D7FC               	goto	u237
   204  000FE0  F000               	nop	
   205                           
   206                           ;Main.c: 79: sendString("Comunication is ok\n");
   207  000FE2  0E0F               	movlw	high STR_1
   208  000FE4  6E16               	movwf	sendString@s+1,c
   209  000FE6  0E01               	movlw	low STR_1
   210  000FE8  6E15               	movwf	sendString@s,c
   211  000FEA  EC8B  F007         	call	_sendString	;wreg free
   212                           
   213                           ;Main.c: 81: INTCONbits.PEIE = 1;
   214  000FEE  8CF2               	bsf	intcon,6,c	;volatile
   215                           
   216                           ;Main.c: 82: INTCONbits.GIE = 1;
   217  000FF0  8EF2               	bsf	intcon,7,c	;volatile
   218  000FF2                     l33:
   219  000FF2  D7FF               	goto	l33
   220  000FF4                     __end_of_main:
   221                           	opt stack 0
   222                           tblptru	equ	0xFF8
   223                           intcon	equ	0xFF2
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227 ;; *************** function _sendString *****************
   228 ;; Defined at:
   229 ;;		line 113 in file "Main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;  s               2   20[COMRAM] PTR unsigned char 
   232 ;;		 -> rcbuf(20), STR_1(20), 
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;		None               void
   237 ;; Registers used:
   238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   248 ;;Total ram usage:        2 bytes
   249 ;; Hardware stack levels used:    1
   250 ;; Hardware stack levels required when called:    4
   251 ;; This function calls:
   252 ;;		_sendByte
   253 ;; This function is called by:
   254 ;;		_main
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	text1
   259  000F16                     __ptext1:
   260                           	opt stack 0
   261  000F16                     _sendString:
   262                           	opt stack 26
   263                           
   264                           ;Main.c: 114: while (*s) {
   265                           
   266                           ;incstack = 0
   267  000F16  D018               	goto	l667
   268  000F18                     l661:
   269                           
   270                           ;Main.c: 115: sendByte(*s);
   271  000F18  C015  FFF6         	movff	sendString@s,tblptrl
   272  000F1C  C016  FFF7         	movff	sendString@s+1,tblptrh
   273  000F20  0E00               	movlw	low (__smallconst shr (0+16))
   274  000F22  6EF8               	movwf	tblptru,c
   275  000F24  0E0E               	movlw	(high __ramtop+-1)
   276  000F26  64F7               	cpfsgt	tblptrh,c
   277  000F28  D003               	bra	u37
   278  000F2A  0008               	tblrd		*
   279  000F2C  50F5               	movf	tablat,w,c
   280  000F2E  D005               	bra	u30
   281  000F30                     u37:
   282  000F30  CFF6 FFE9          	movff	tblptrl,fsr0l
   283  000F34  CFF7 FFEA          	movff	tblptrh,fsr0h
   284  000F38  50EF               	movf	indf0,w,c
   285  000F3A                     u30:
   286  000F3A  EC10  F008         	call	_sendByte
   287                           
   288                           ;Main.c: 116: _delay((unsigned long)((10)*(12000000/4000000.0)));
   289  000F3E  0E0A               	movlw	10
   290  000F40                     u247:
   291  000F40  2EE8               	decfsz	wreg,f,c
   292  000F42  D7FE               	goto	u247
   293                           
   294                           ;Main.c: 117: s++;
   295  000F44  4A15               	infsnz	sendString@s,f,c
   296  000F46  2A16               	incf	sendString@s+1,f,c
   297  000F48                     l667:
   298  000F48  C015  FFF6         	movff	sendString@s,tblptrl
   299  000F4C  C016  FFF7         	movff	sendString@s+1,tblptrh
   300  000F50  0E00               	movlw	low (__smallconst shr (0+16))
   301  000F52  6EF8               	movwf	tblptru,c
   302  000F54  0E0E               	movlw	(high __ramtop+-1)
   303  000F56  64F7               	cpfsgt	tblptrh,c
   304  000F58  D003               	bra	u47
   305  000F5A  0008               	tblrd		*
   306  000F5C  50F5               	movf	tablat,w,c
   307  000F5E  D005               	bra	u40
   308  000F60                     u47:
   309  000F60  CFF6 FFE9          	movff	tblptrl,fsr0l
   310  000F64  CFF7 FFEA          	movff	tblptrh,fsr0h
   311  000F68  50EF               	movf	indf0,w,c
   312  000F6A                     u40:
   313  000F6A  0900               	iorlw	0
   314  000F6C  B4D8               	btfsc	status,2,c
   315  000F6E  0012               	return	
   316  000F70  D7D3               	goto	l661
   317  000F72                     __end_of_sendString:
   318                           	opt stack 0
   319                           tblptru	equ	0xFF8
   320                           tblptrh	equ	0xFF7
   321                           tblptrl	equ	0xFF6
   322                           tablat	equ	0xFF5
   323                           intcon	equ	0xFF2
   324                           indf0	equ	0xFEF
   325                           postinc0	equ	0xFEE
   326                           fsr0h	equ	0xFEA
   327                           fsr0l	equ	0xFE9
   328                           wreg	equ	0xFE8
   329                           status	equ	0xFD8
   330                           
   331 ;; *************** function _sendByte *****************
   332 ;; Defined at:
   333 ;;		line 108 in file "Main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;  Byte            1    wreg     unsigned char 
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  Byte            1   19[COMRAM] unsigned char 
   338 ;; Return value:  Size  Location     Type
   339 ;;		None               void
   340 ;; Registers used:
   341 ;;		wreg
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   351 ;;Total ram usage:        1 bytes
   352 ;; Hardware stack levels used:    1
   353 ;; Hardware stack levels required when called:    3
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_sendString
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text2
   362  001020                     __ptext2:
   363                           	opt stack 0
   364  001020                     _sendByte:
   365                           	opt stack 26
   366                           
   367                           ;incstack = 0
   368                           ;sendByte@Byte stored from wreg
   369  001020  CFE8 F014          	movff	wreg,sendByte@Byte
   370  001024                     l42:
   371  001024  A2AD               	btfss	4013,1,c	;volatile
   372  001026  D7FE               	goto	l42
   373                           
   374                           ;Main.c: 110: TXREG1 = Byte;
   375  001028  C014  FFAE         	movff	sendByte@Byte,4014	;volatile
   376  00102C  0012               	return	
   377  00102E                     __end_of_sendByte:
   378                           	opt stack 0
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           intcon	equ	0xFF2
   384                           indf0	equ	0xFEF
   385                           postinc0	equ	0xFEE
   386                           fsr0h	equ	0xFEA
   387                           fsr0l	equ	0xFE9
   388                           wreg	equ	0xFE8
   389                           status	equ	0xFD8
   390                           
   391 ;; *************** function _USART_init *****************
   392 ;; Defined at:
   393 ;;		line 90 in file "Main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;		None               void
   400 ;; Registers used:
   401 ;;		wreg, status,2
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels used:    1
   413 ;; Hardware stack levels required when called:    3
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text3
   422  00100A                     __ptext3:
   423                           	opt stack 0
   424  00100A                     _USART_init:
   425                           	opt stack 27
   426                           
   427                           ;Main.c: 91: TXSTA1bits.TXEN = 1;
   428                           
   429                           ;incstack = 0
   430  00100A  8AAD               	bsf	4013,5,c	;volatile
   431                           
   432                           ;Main.c: 92: TXSTA1bits.BRGH = 1;
   433  00100C  84AD               	bsf	4013,2,c	;volatile
   434                           
   435                           ;Main.c: 93: RCSTA1bits.CREN = 1;
   436  00100E  88AC               	bsf	4012,4,c	;volatile
   437                           
   438                           ;Main.c: 94: TXSTA1bits.SYNC = 0;
   439  001010  98AD               	bcf	4013,4,c	;volatile
   440                           
   441                           ;Main.c: 97: TRISCbits.TRISC6 = 1;
   442  001012  8C94               	bsf	3988,6,c	;volatile
   443                           
   444                           ;Main.c: 98: TRISCbits.TRISC7 = 1;
   445  001014  8E94               	bsf	3988,7,c	;volatile
   446                           
   447                           ;Main.c: 100: SPBRG1 = 77;
   448  001016  0E4D               	movlw	77
   449  001018  6EB0               	movwf	4016,c	;volatile
   450                           
   451                           ;Main.c: 103: RCSTA1bits.SPEN = 1;
   452  00101A  8EAC               	bsf	4012,7,c	;volatile
   453                           
   454                           ;Main.c: 104: PIE1bits.RC1IE = 1;
   455  00101C  8A9D               	bsf	3997,5,c	;volatile
   456  00101E  0012               	return	
   457  001020                     __end_of_USART_init:
   458                           	opt stack 0
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           intcon	equ	0xFF2
   464                           indf0	equ	0xFEF
   465                           postinc0	equ	0xFEE
   466                           fsr0h	equ	0xFEA
   467                           fsr0l	equ	0xFE9
   468                           wreg	equ	0xFE8
   469                           status	equ	0xFD8
   470                           
   471 ;; *************** function _ISR *****************
   472 ;; Defined at:
   473 ;;		line 121 in file "Main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  i               2   17[COMRAM] int 
   478 ;; Return value:  Size  Location     Type
   479 ;;		None               void
   480 ;; Registers used:
   481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   489 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   490 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   491 ;;Total ram usage:       16 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    2
   494 ;; This function calls:
   495 ;;		i2_sendByte
   496 ;;		i2_sendString
   497 ;; This function is called by:
   498 ;;		Interrupt level 2
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	intcode
   503  000008                     __pintcode:
   504                           	opt stack 0
   505  000008                     _ISR:
   506                           	opt stack 26
   507                           
   508                           ;incstack = 0
   509  000008  CFFA F004          	movff	pclath,??_ISR
   510  00000C  CFFB F005          	movff	pclatu,??_ISR+1
   511  000010  CFE9 F006          	movff	fsr0l,??_ISR+2
   512  000014  CFEA F007          	movff	fsr0h,??_ISR+3
   513  000018  CFE1 F008          	movff	fsr1l,??_ISR+4
   514  00001C  CFE2 F009          	movff	fsr1h,??_ISR+5
   515  000020  CFD9 F00A          	movff	fsr2l,??_ISR+6
   516  000024  CFDA F00B          	movff	fsr2h,??_ISR+7
   517  000028  CFF3 F00C          	movff	prodl,??_ISR+8
   518  00002C  CFF4 F00D          	movff	prodh,??_ISR+9
   519  000030  CFF6 F00E          	movff	tblptrl,??_ISR+10
   520  000034  CFF7 F00F          	movff	tblptrh,??_ISR+11
   521  000038  CFF8 F010          	movff	tblptru,??_ISR+12
   522  00003C  CFF5 F011          	movff	tablat,??_ISR+13
   523                           
   524                           ;Main.c: 122: if (PIR1bits.RC1IF)
   525  000040  AA9E               	btfss	3998,5,c	;volatile
   526  000042  D039               	goto	i2l59
   527                           
   528                           ;Main.c: 123: {
   529                           ;Main.c: 124: t = RCREG1;
   530  000044  CFAF F01E          	movff	4015,_t	;volatile
   531                           
   532                           ;Main.c: 128: if ((t != '\n') && (rcindex < 20)) {
   533  000048  501E               	movf	_t,w,c	;volatile
   534  00004A  0A0A               	xorlw	10
   535  00004C  B4D8               	btfsc	status,2,c
   536  00004E  D010               	goto	i2l745
   537  000050  0E14               	movlw	20
   538  000052  5C1D               	subwf	_rcindex,w,c	;volatile
   539  000054  B0D8               	btfsc	status,0,c
   540  000056  D00C               	goto	i2l745
   541                           
   542                           ;Main.c: 129: rcbuf[rcindex] = t;
   543  000058  501D               	movf	_rcindex,w,c	;volatile
   544  00005A  0D01               	mullw	1
   545  00005C  0E1F               	movlw	low _rcbuf	;volatile
   546  00005E  24F3               	addwf	prodl,w,c
   547  000060  6ED9               	movwf	fsr2l,c
   548  000062  0E00               	movlw	high _rcbuf	;volatile
   549  000064  20F4               	addwfc	prodh,w,c
   550  000066  6EDA               	movwf	fsr2h,c
   551  000068  C01E  FFDF         	movff	_t,indf2	;volatile
   552                           
   553                           ;Main.c: 130: rcindex++;
   554  00006C  2A1D               	incf	_rcindex,f,c	;volatile
   555                           
   556                           ;Main.c: 131: }
   557  00006E  D022               	goto	i2l56
   558  000070                     i2l745:
   559                           
   560                           ;Main.c: 132: else {
   561                           ;Main.c: 133: rcindex = 0;
   562  000070  0E00               	movlw	0
   563  000072  6E1D               	movwf	_rcindex,c	;volatile
   564                           
   565                           ;Main.c: 134: sendString(rcbuf);
   566  000074  0E00               	movlw	high _rcbuf	;volatile
   567  000076  6E03               	movwf	i2sendString@s+1,c
   568  000078  0E1F               	movlw	low _rcbuf	;volatile
   569  00007A  6E02               	movwf	i2sendString@s,c
   570  00007C  ECB9  F007         	call	i2_sendString	;wreg free
   571                           
   572                           ;Main.c: 135: sendByte('\n');
   573  000080  0E0A               	movlw	10
   574  000082  EC17  F008         	call	i2_sendByte
   575                           
   576                           ;Main.c: 136: for(int i = 0; i < 20; i++)
   577  000086  0E00               	movlw	0
   578  000088  6E13               	movwf	ISR@i+1,c
   579  00008A  0E00               	movlw	0
   580  00008C  6E12               	movwf	ISR@i,c
   581  00008E  5013               	movf	ISR@i+1,w,c
   582  000090  0A80               	xorlw	128
   583  000092  0F80               	addlw	-128
   584  000094  0E14               	movlw	20
   585  000096  B4D8               	btfsc	status,2,c
   586  000098  5C12               	subwf	ISR@i,w,c
   587  00009A  B0D8               	btfsc	status,0,c
   588  00009C  D00B               	goto	i2l56
   589                           
   590                           ;Main.c: 137: rcbuf[i] = 0;
   591  00009E  0E1F               	movlw	low _rcbuf	;volatile
   592  0000A0  2412               	addwf	ISR@i,w,c
   593  0000A2  6ED9               	movwf	fsr2l,c
   594  0000A4  0E00               	movlw	high _rcbuf	;volatile
   595  0000A6  2013               	addwfc	ISR@i+1,w,c
   596  0000A8  6EDA               	movwf	fsr2h,c
   597  0000AA  0E00               	movlw	0
   598  0000AC  6EDF               	movwf	indf2,c
   599  0000AE  4A12               	infsnz	ISR@i,f,c
   600  0000B0  2A13               	incf	ISR@i+1,f,c
   601  0000B2  D7ED               	goto	L1
   602  0000B4                     i2l56:
   603                           
   604                           ;Main.c: 138: }
   605                           ;Main.c: 141: PIR1bits.RC1IF = 0;
   606  0000B4  9A9E               	bcf	3998,5,c	;volatile
   607  0000B6                     i2l59:
   608  0000B6  C011  FFF5         	movff	??_ISR+13,tablat
   609  0000BA  C010  FFF8         	movff	??_ISR+12,tblptru
   610  0000BE  C00F  FFF7         	movff	??_ISR+11,tblptrh
   611  0000C2  C00E  FFF6         	movff	??_ISR+10,tblptrl
   612  0000C6  C00D  FFF4         	movff	??_ISR+9,prodh
   613  0000CA  C00C  FFF3         	movff	??_ISR+8,prodl
   614  0000CE  C00B  FFDA         	movff	??_ISR+7,fsr2h
   615  0000D2  C00A  FFD9         	movff	??_ISR+6,fsr2l
   616  0000D6  C009  FFE2         	movff	??_ISR+5,fsr1h
   617  0000DA  C008  FFE1         	movff	??_ISR+4,fsr1l
   618  0000DE  C007  FFEA         	movff	??_ISR+3,fsr0h
   619  0000E2  C006  FFE9         	movff	??_ISR+2,fsr0l
   620  0000E6  C005  FFFB         	movff	??_ISR+1,pclatu
   621  0000EA  C004  FFFA         	movff	??_ISR,pclath
   622  0000EE  0011               	retfie		f
   623  0000F0                     __end_of_ISR:
   624                           	opt stack 0
   625                           pclatu	equ	0xFFB
   626                           pclath	equ	0xFFA
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           prodh	equ	0xFF4
   632                           prodl	equ	0xFF3
   633                           intcon	equ	0xFF2
   634                           indf0	equ	0xFEF
   635                           postinc0	equ	0xFEE
   636                           fsr0h	equ	0xFEA
   637                           fsr0l	equ	0xFE9
   638                           wreg	equ	0xFE8
   639                           fsr1h	equ	0xFE2
   640                           fsr1l	equ	0xFE1
   641                           indf2	equ	0xFDF
   642                           fsr2h	equ	0xFDA
   643                           fsr2l	equ	0xFD9
   644                           status	equ	0xFD8
   645                           
   646 ;; *************** function i2_sendString *****************
   647 ;; Defined at:
   648 ;;		line 113 in file "Main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  s               2    1[COMRAM] PTR unsigned char 
   651 ;;		 -> rcbuf(20), STR_1(20), 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;		None               void
   656 ;; Registers used:
   657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    1
   670 ;; This function calls:
   671 ;;		i2_sendByte
   672 ;; This function is called by:
   673 ;;		_ISR
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text5
   678  000F72                     __ptext5:
   679                           	opt stack 0
   680  000F72                     i2_sendString:
   681                           	opt stack 26
   682                           
   683                           ;Main.c: 114: while (*s) {
   684                           
   685                           ;incstack = 0
   686  000F72  D018               	goto	i2l731
   687  000F74                     i2l725:
   688                           
   689                           ;Main.c: 115: sendByte(*s);
   690  000F74  C002  FFF6         	movff	i2sendString@s,tblptrl
   691  000F78  C003  FFF7         	movff	i2sendString@s+1,tblptrh
   692  000F7C  0E00               	movlw	low (__smallconst shr (0+16))
   693  000F7E  6EF8               	movwf	tblptru,c
   694  000F80  0E0E               	movlw	(high __ramtop+-1)
   695  000F82  64F7               	cpfsgt	tblptrh,c
   696  000F84  D003               	bra	i2u15_47
   697  000F86  0008               	tblrd		*
   698  000F88  50F5               	movf	tablat,w,c
   699  000F8A  D005               	bra	i2u15_40
   700  000F8C                     i2u15_47:
   701  000F8C  CFF6 FFE9          	movff	tblptrl,fsr0l
   702  000F90  CFF7 FFEA          	movff	tblptrh,fsr0h
   703  000F94  50EF               	movf	indf0,w,c
   704  000F96                     i2u15_40:
   705  000F96  EC17  F008         	call	i2_sendByte
   706                           
   707                           ;Main.c: 116: _delay((unsigned long)((10)*(12000000/4000000.0)));
   708  000F9A  0E0A               	movlw	10
   709  000F9C                     i2u25_47:
   710  000F9C  2EE8               	decfsz	wreg,f,c
   711  000F9E  D7FE               	goto	i2u25_47
   712                           
   713                           ;Main.c: 117: s++;
   714  000FA0  4A02               	infsnz	i2sendString@s,f,c
   715  000FA2  2A03               	incf	i2sendString@s+1,f,c
   716  000FA4                     i2l731:
   717  000FA4  C002  FFF6         	movff	i2sendString@s,tblptrl
   718  000FA8  C003  FFF7         	movff	i2sendString@s+1,tblptrh
   719  000FAC  0E00               	movlw	low (__smallconst shr (0+16))
   720  000FAE  6EF8               	movwf	tblptru,c
   721  000FB0  0E0E               	movlw	(high __ramtop+-1)
   722  000FB2  64F7               	cpfsgt	tblptrh,c
   723  000FB4  D003               	bra	i2u16_47
   724  000FB6  0008               	tblrd		*
   725  000FB8  50F5               	movf	tablat,w,c
   726  000FBA  D005               	bra	i2u16_40
   727  000FBC                     i2u16_47:
   728  000FBC  CFF6 FFE9          	movff	tblptrl,fsr0l
   729  000FC0  CFF7 FFEA          	movff	tblptrh,fsr0h
   730  000FC4  50EF               	movf	indf0,w,c
   731  000FC6                     i2u16_40:
   732  000FC6  0900               	iorlw	0
   733  000FC8  B4D8               	btfsc	status,2,c
   734  000FCA  0012               	return	
   735  000FCC  D7D3               	goto	i2l725
   736  000FCE                     __end_ofi2_sendString:
   737                           	opt stack 0
   738                           pclatu	equ	0xFFB
   739                           pclath	equ	0xFFA
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           prodh	equ	0xFF4
   745                           prodl	equ	0xFF3
   746                           intcon	equ	0xFF2
   747                           indf0	equ	0xFEF
   748                           postinc0	equ	0xFEE
   749                           fsr0h	equ	0xFEA
   750                           fsr0l	equ	0xFE9
   751                           wreg	equ	0xFE8
   752                           fsr1h	equ	0xFE2
   753                           fsr1l	equ	0xFE1
   754                           indf2	equ	0xFDF
   755                           fsr2h	equ	0xFDA
   756                           fsr2l	equ	0xFD9
   757                           status	equ	0xFD8
   758                           
   759 ;; *************** function i2_sendByte *****************
   760 ;; Defined at:
   761 ;;		line 108 in file "Main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  Byte            1    wreg     unsigned char 
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  Byte            1    0[COMRAM] unsigned char 
   766 ;; Return value:  Size  Location     Type
   767 ;;		None               void
   768 ;; Registers used:
   769 ;;		wreg
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   779 ;;Total ram usage:        1 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_ISR
   785 ;;		i2_sendString
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text6
   790  00102E                     __ptext6:
   791                           	opt stack 0
   792  00102E                     i2_sendByte:
   793                           	opt stack 26
   794                           
   795                           ;incstack = 0
   796                           ;i2sendByte@Byte stored from wreg
   797  00102E  CFE8 F001          	movff	wreg,i2sendByte@Byte
   798  001032                     i2l42:
   799  001032  A2AD               	btfss	4013,1,c	;volatile
   800  001034  D7FE               	goto	i2l42
   801                           
   802                           ;Main.c: 110: TXREG1 = Byte;
   803  001036  C001  FFAE         	movff	i2sendByte@Byte,4014	;volatile
   804  00103A  0012               	return	
   805  00103C                     __end_ofi2_sendByte:
   806                           	opt stack 0
   807                           pclatu	equ	0xFFB
   808                           pclath	equ	0xFFA
   809                           tblptru	equ	0xFF8
   810                           tblptrh	equ	0xFF7
   811                           tblptrl	equ	0xFF6
   812                           tablat	equ	0xFF5
   813                           prodh	equ	0xFF4
   814                           prodl	equ	0xFF3
   815                           intcon	equ	0xFF2
   816                           indf0	equ	0xFEF
   817                           postinc0	equ	0xFEE
   818                           fsr0h	equ	0xFEA
   819                           fsr0l	equ	0xFE9
   820                           wreg	equ	0xFE8
   821                           fsr1h	equ	0xFE2
   822                           fsr1l	equ	0xFE1
   823                           indf2	equ	0xFDF
   824                           fsr2h	equ	0xFDA
   825                           fsr2l	equ	0xFD9
   826                           status	equ	0xFD8
   827                           pclatu	equ	0xFFB
   828                           pclath	equ	0xFFA
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           prodh	equ	0xFF4
   834                           prodl	equ	0xFF3
   835                           intcon	equ	0xFF2
   836                           indf0	equ	0xFEF
   837                           postinc0	equ	0xFEE
   838                           fsr0h	equ	0xFEA
   839                           fsr0l	equ	0xFE9
   840                           wreg	equ	0xFE8
   841                           fsr1h	equ	0xFE2
   842                           fsr1l	equ	0xFE1
   843                           indf2	equ	0xFDF
   844                           fsr2h	equ	0xFDA
   845                           fsr2l	equ	0xFD9
   846                           status	equ	0xFD8
   847                           
   848                           	psect	rparam
   849  0000                     pclatu	equ	0xFFB
   850                           pclath	equ	0xFFA
   851                           tblptru	equ	0xFF8
   852                           tblptrh	equ	0xFF7
   853                           tblptrl	equ	0xFF6
   854                           tablat	equ	0xFF5
   855                           prodh	equ	0xFF4
   856                           prodl	equ	0xFF3
   857                           intcon	equ	0xFF2
   858                           indf0	equ	0xFEF
   859                           postinc0	equ	0xFEE
   860                           fsr0h	equ	0xFEA
   861                           fsr0l	equ	0xFE9
   862                           wreg	equ	0xFE8
   863                           fsr1h	equ	0xFE2
   864                           fsr1l	equ	0xFE1
   865                           indf2	equ	0xFDF
   866                           fsr2h	equ	0xFDA
   867                           fsr2l	equ	0xFD9
   868                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sendString@s	PTR unsigned char  size(2) Largest target is 20
		 -> rcbuf(COMRAM[20]), STR_1(CODE[20]), 


Critical Paths under _main in COMRAM

    _main->_sendString
    _sendString->_sendByte

Critical Paths under _ISR in COMRAM

    _ISR->i2_sendString
    i2_sendString->i2_sendByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     1      5     112
                                             22 COMRAM     6     1      5
                         _USART_init
                         _sendString
 ---------------------------------------------------------------------------------
 (1) _sendString                                           2     0      2     112
                                             20 COMRAM     2     0      2
                           _sendByte
 ---------------------------------------------------------------------------------
 (2) _sendByte                                             1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 16    16      0     183
                                              3 COMRAM    16    16      0
                         i2_sendByte
                       i2_sendString
 ---------------------------------------------------------------------------------
 (4) i2_sendString                                         2     0      2      93
                                              1 COMRAM     2     0      2
                         i2_sendByte
 ---------------------------------------------------------------------------------
 (5) i2_sendByte                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_init
   _sendString
     _sendByte

 _ISR (ROOT)
   i2_sendByte
   i2_sendString
     i2_sendByte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1C      32       1       52.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32       6        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Wed Nov 26 11:17:32 2014

                      _t 001E                       l33 0FF2                       l42 1024  
                     u30 0F3A                       u40 0F6A                       u37 0F30  
                     u47 0F60             __CFG_CP0$OFF 000000     __end_ofi2_sendString 0FCE  
            __CFG_OSC$HS 000000                      l661 0F18                      l667 0F48  
                    u237 0FD8                      u247 0F40                      _ISR 0008  
                    prod 000FF3                      wreg 000FE8               _TXSTA1bits 000FAD  
                   ?_ISR 0001                     ISR@i 0012       __CFG_WPFP$PAGE_127 000000  
                   STR_1 0F01                     i2l42 1032                     i2l56 00B4  
                   i2l59 00B6            __CFG_FCMEN$ON 000000                     _main 0FCE  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 00F0  
          __CFG_IESO$OFF 000000               i2_sendByte 102E                    ??_ISR 0004  
          __CFG_PLLDIV$1 000000                    ?_main 0017                    i2l731 0FA4  
                  i2l725 0F74                    i2l745 0070                    _rcbuf 001F  
                  tablat 000FF5                    status 000FD8  __CFG_DSWDTOSC$INTOSCREF 000000  
            ?_USART_init 0001          __initialization 0FF4             __end_of_main 0FF4  
                 ??_main 001C            __activetblptr 000002           __CFG_WDTEN$OFF 000000  
                 _RCREG1 000FAF                   _SPBRG1 000FB0           __CFG_WPCFG$OFF 000000  
                 _TXREG1 000FAE           __CFG_WPDIS$OFF 000000              ?i2_sendByte 0001  
         __CFG_XINST$OFF 000000    __size_ofi2_sendString 005C           __CFG_STVREN$ON 000000  
                 clear_0 0FFA          __CFG_CLKOEC$OFF 000000         __end_of_sendByte 102E  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8      __size_of_USART_init 0016     __CFG_LS48MHZ$SYS48X8 000000  
             __accesstop 0060  __end_of__initialization 1000             i2_sendString 0F72  
   __CFG_WPEND$PAGE_WPFP 000000           __pcstackCOMRAM 0001          __CFG_DSWDTPS$G2 000000  
    __size_ofi2_sendByte 000E                  i2u15_40 0F96                  i2u15_47 0F8C  
                i2u16_40 0FC6                  i2u16_47 0FBC                  i2u25_47 0F9C  
            sendString@s 0015                ?_sendByte 0001                  __Hparam 0000  
                __Lparam 0000             ??_USART_init 0014             __psmallconst 0F00  
                __pcinit 0FF4                  __ramtop 0F00                  __ptext0 0FCE  
                __ptext1 0F16                  __ptext2 1020                  __ptext3 100A  
                __ptext5 0F72                  __ptext6 102E             __size_of_ISR 00E8  
                _rcindex 001D       __end_of_USART_init 1020     end_of_initialization 1000  
             _sendString 0F16            __Lmediumconst 0000             ??i2_sendByte 0001  
             ??_sendByte 0014                  postinc0 000FEE         __CFG_DSBOREN$OFF 000000  
       __CFG_CPUDIV$OSC1 000000                _TRISCbits 000F94       __end_ofi2_sendByte 103C  
      __CFG_SOSCSEL$HIGH 000000         __CFG_IOL1WAY$OFF 000000      __CFG_MSSP7B_EN$MSK7 000000  
       __CFG_DSWDTEN$OFF 000000      start_initialization 0FF4              __end_of_ISR 00F0  
            ?_sendString 0015        __CFG_ADCSEL$BIT10 000000              __pbssCOMRAM 001D  
    __end_of__stringdata 0F15             sendByte@Byte 0014                __pintcode 0008  
      __size_of_sendByte 000E      __size_of_sendString 005C              __smallconst 0F00  
   __CFG_RTCOSC$T1OSCREF 000000                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000              __stringdata 0F01        __CFG_CFGPLLEN$OFF 000000  
          ?i2_sendString 0002                 __Hrparam 0000                 __Lrparam 0000  
         ??i2_sendString 0004             ??_sendString 0017            __size_of_main 0026  
               _sendByte 1020           i2sendByte@Byte 0001                 main@argc 0017  
               main@argv 0019       __end_of_sendString 0F72               _INTCONbits 000FF2  
               intlevel2 0000               _RCSTA1bits 000FAC            i2sendString@s 0002  
             _USART_init 100A  
